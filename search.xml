<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ESP8266+OLED制作网络时钟</title>
      <link href="/2024/02/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/7.ESP8266+OLED%E5%88%B6%E4%BD%9C%E7%BD%91%E7%BB%9C%E6%97%B6%E9%92%9F/"/>
      <url>/2024/02/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/7.ESP8266+OLED%E5%88%B6%E4%BD%9C%E7%BD%91%E7%BB%9C%E6%97%B6%E9%92%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="网络时钟的制作"><a href="#网络时钟的制作" class="headerlink" title="网络时钟的制作"></a>网络时钟的制作</h1><h2 id="一-简绍"><a href="#一-简绍" class="headerlink" title="一.简绍"></a>一.简绍</h2><p>今天我们通过一个ESP8266模块和一块oled屏来制作一个网络时钟，我下简绍一下我制作的模块型号</p><ul><li>开发环境 Arduino IDE 1.8.11（没有也无所谓）</li><li>ESP8266 (CP2102)(arduino 开发中选 NodeMcu 0.9 )</li><li>OLED  ( 7针IIC&#x2F;SPI 黄蓝双色)（SSD1306_128X64）</li></ul><p><img src="https://img-blog.csdnimg.cn/202004041344334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><h3 id="1-Arduino库的下载与配置"><a href="#1-Arduino库的下载与配置" class="headerlink" title="1.Arduino库的下载与配置"></a>1.Arduino库的下载与配置</h3><p><strong>注意</strong><br>这一步操作是对应下载代码在Arduino IDE 里面修改运行的朋友准备的，如何使用直接烧录，则下载完资料包，可跳过此步骤，直接看连接方式</p><blockquote><p>资料下载：<a href="https://www.lanzous.com/iaziung">资料包</a></p></blockquote><p>我们需要用Arduino 来编译我们的项目代码，所有需要添加相应的库文件</p><p>这样压缩包里面包含了库文件以及其他相关的文件，我们先将四个库文件移动到Arduino 软件安装的库目录下<br><img src="https://img-blog.csdnimg.cn/20200404151347215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-连接方式"><a href="#2-连接方式" class="headerlink" title="2.连接方式"></a>2.连接方式</h3><p>OLED屏幕正对着自己，接线处在上面，从左往右，依次连接</p><table><thead><tr><th>OLED</th><th>ESP8288</th><th>GPIO</th></tr></thead><tbody><tr><td>GND</td><td>GND</td><td>GND</td></tr><tr><td>VCC</td><td>VCC</td><td>3.3&#x2F;5v</td></tr><tr><td>D0</td><td>D5</td><td>GPIO14</td></tr><tr><td>D1</td><td>D7</td><td>GPIO13</td></tr><tr><td>RES</td><td>RES</td><td>GPIO3</td></tr><tr><td>DC</td><td>D1</td><td>GPIO5</td></tr><tr><td>CS</td><td>D2</td><td>GPIO4</td></tr></tbody></table><h2 id="三-程序烧写"><a href="#三-程序烧写" class="headerlink" title="三.程序烧写"></a>三.程序烧写</h2><h3 id="1-方法一"><a href="#1-方法一" class="headerlink" title="1.方法一"></a>1.方法一</h3><p>下载我上面的压缩包，包里面有 可执行的bin文件，我们打开烧录软件，选择烧录的程序，烧录到我们的开发板中就可以了，这里不用往Arduino里面去导入库文件，这里适合小白操作，当然图方便也是可以的</p><p><img src="https://img-blog.csdnimg.cn/20200404152032427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200404152116806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>点击此处开始烧写，等待烧写完成就可以了<br><img src="https://img-blog.csdnimg.cn/20200404152200940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-方法二"><a href="#2-方法二" class="headerlink" title="2.方法二"></a>2.方法二</h3><p>我们先导入程序运行所需要的库文件,然后打开Arduino IDE 进行程序的编译，烧写</p><blockquote><p>代码连接：<a href="https://gitee.com/zfq0620/esp8266_arduino/tree/master/%E7%BD%91%E7%BB%9C%E6%97%B6%E9%92%9F">网络时钟</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200404155148832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>这里我是以OLED spi 7引脚的为例，大家也可以用IIC的但是代码部分需要稍微修改一下，连接图的话根据 代码的提示来连接</p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+gitee免费搭建个人网址导航</title>
      <link href="/2024/02/22/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/6.hexo+gitee%E5%85%8D%E8%B4%B9%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%AF%BC%E8%88%AA/"/>
      <url>/2024/02/22/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/6.hexo+gitee%E5%85%8D%E8%B4%B9%E6%89%93%E9%80%A0%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%AF%BC%E8%88%AA/</url>
      
        <content type="html"><![CDATA[<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><p>本文在win10系统下进行环境搭建</p><h3 id="1-可参考官方文档"><a href="#1-可参考官方文档" class="headerlink" title="1.可参考官方文档"></a>1.可参考官方文档</h3><p><a href="https://hexo.io/zh-cn/docs">hexo官方网站</a></p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</p></blockquote><h3 id="2-配置环境"><a href="#2-配置环境" class="headerlink" title="2.配置环境"></a>2.配置环境</h3><p>这里我们需要下载安装两个软件，我们就去官网下载一下 node.js 和 git<br><a href="https://nodejs.org/en">Nodejs下载安装</a><br><img src="https://img-blog.csdnimg.cn/direct/8f5b3252ab9448eeaa2768cb53daa8b2.png" alt="在这里插入图片描述"><br><a href="https://git-scm.com/download/win">git下载安装</a><br><img src="https://img-blog.csdnimg.cn/direct/e4f0cb5f69524795b4d9879d0d7c42eb.png" alt="在这里插入图片描述"></p><h3 id="3-安装-Hexo"><a href="#3-安装-Hexo" class="headerlink" title="3. 安装 Hexo"></a>3. 安装 Hexo</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/595046ddb46d4bcca965e3377970a35a.png" alt="在这里插入图片描述"><br>安装成功<br><img src="https://img-blog.csdnimg.cn/direct/180ef3bebbbe482f9f368640edfe3e8e.png" alt="在这里插入图片描述"></p><h2 id="二、项目搭建"><a href="#二、项目搭建" class="headerlink" title="二、项目搭建"></a>二、项目搭建</h2><h3 id="1-初始化项目"><a href="#1-初始化项目" class="headerlink" title="1.初始化项目"></a>1.初始化项目</h3><p>blog为项目的名称</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/93be06d148ce43978710368524bff131.png" alt="在这里插入图片描述"><br>初始化成功<br><img src="https://img-blog.csdnimg.cn/direct/bcb3cab455c44bb99d53f265d30e6d6b.png" alt="在这里插入图片描述"></p><h3 id="2-本地运行项目"><a href="#2-本地运行项目" class="headerlink" title="2.本地运行项目"></a>2.本地运行项目</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment">//清空已经存在的hexo网站文件</span></span><br><span class="line">hexo <span class="title function_">generate</span><span class="params">(可简写g)</span> <span class="comment">//依据网页文件和新的css样式生成新的网站文件</span></span><br><span class="line">hexo <span class="title function_">server</span><span class="params">(可简写为s)</span> <span class="comment">//启动本地服务器，可以在localhost：4000查看网站修改效果</span></span><br></pre></td></tr></table></figure><p>List item</p><p>先进入到项目的根目录</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd webstack</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/3f4bacaa35db497fbd81c27abfad4007.png" alt="在这里插入图片描述"><br>编译运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/1aa3150a015e4cbb8b68052a57c86853.png" alt="在这里插入图片描述"><br>默认端口为4000，在浏览器访问 <a href="http://localhost:4000/">http://localhost:4000/</a><br><img src="https://img-blog.csdnimg.cn/direct/586b371cdb7b49ca96f4e54c8c64b09b.png" alt="在这里插入图片描述"></p><h2 id="三、替换主题"><a href="#三、替换主题" class="headerlink" title="三、替换主题"></a>三、替换主题</h2><h3 id="1-主题下载"><a href="#1-主题下载" class="headerlink" title="1.主题下载"></a>1.主题下载</h3><p><a href="https://hexo.io/themes/">官方主题列表</a><br><img src="https://img-blog.csdnimg.cn/direct/d5b8fc93035648e4b116b356fc46ccd9.png" alt="在这里插入图片描述"><br>下载主题</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes</span><br><span class="line">git clone https:<span class="comment">//github.com/HCLonely/hexo-theme-webstack</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/62b3e9f6982e4e9ca4d4d6ea0fac8012.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/direct/0c3da3c2ad454cd995dc90b1e683c858.png" alt="在这里插入图片描述"></p><h3 id="2-修改主题名称"><a href="#2-修改主题名称" class="headerlink" title="2.修改主题名称"></a>2.修改主题名称</h3><p>将hexo-theme-webstack修改为webstack<br><img src="https://img-blog.csdnimg.cn/direct/2c6954e09b9742608cd4975ec270100d.png" alt="在这里插入图片描述"><br>修改_config.example.yaml 为 _config.webstack.yaml<br><img src="https://img-blog.csdnimg.cn/direct/fb7ce83869d54421b9f4dd8a996bdd96.png" alt="在这里插入图片描述"><br>移动_config.webstack.yaml到根目录下<br><img src="https://img-blog.csdnimg.cn/direct/964b8a909c92489e9f6c601a9c3cf413.png" alt="在这里插入图片描述"></p><p>修改主题名称为webstack<br><img src="https://img-blog.csdnimg.cn/direct/20db4e2bc070485f9dfc82b2976fae04.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/direct/74240eb1cb3f4bd0a04a79af25d966e0.png" alt="在这里插入图片描述"></p><h3 id="3-本地运行"><a href="#3-本地运行" class="headerlink" title="3. 本地运行"></a>3. 本地运行</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/70081c72df54482d97992911a790058f.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/direct/552a739eb8824f06b4c3edf2d1be4faa.png" alt="在这里插入图片描述"></p><h2 id="四、项目部署到远程端"><a href="#四、项目部署到远程端" class="headerlink" title="四、项目部署到远程端"></a>四、项目部署到远程端</h2><h3 id="1-hexo下载git工具"><a href="#1-hexo下载git工具" class="headerlink" title="1.hexo下载git工具"></a>1.hexo下载git工具</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="2-再gitee新建一个仓库"><a href="#2-再gitee新建一个仓库" class="headerlink" title="2.再gitee新建一个仓库"></a>2.再gitee新建一个仓库</h3><p>首先我们需要注册码云的账号，然后在创建一个仓库，这里初次使用码云的话可以，先看一下码云入门<br>当然注册账号我们可以直接进入码云官网：<a href="https://gitee.com/">https://gitee.com/</a> 都是中文一看就会的那种<br>我的仓库名称为 webstack，</p><h3 id="3-修改配置文件"><a href="#3-修改配置文件" class="headerlink" title="3.修改配置文件"></a>3.修改配置文件</h3><p>修改url为我们创建的仓库<br><img src="https://img-blog.csdnimg.cn/direct/06676a5b79f04a6a92f9537eb1a08f26.png" alt="在这里插入图片描述"><br>修改git提交的仓库地址<br><img src="https://img-blog.csdnimg.cn/direct/4d33793f548d403a8d8ee2c437c537f3.png" alt="在这里插入图片描述"></p><h3 id="4-提交"><a href="#4-提交" class="headerlink" title="4.提交"></a>4.提交</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="5-码云上开启服务"><a href="#5-码云上开启服务" class="headerlink" title="5.码云上开启服务"></a>5.码云上开启服务</h3><p><img src="https://img-blog.csdnimg.cn/direct/c966f53a628044f4aec37be547512fdd.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/direct/3c162dae9cba429ebe17e67525f6e3b8.png" alt="在这里插入图片描述"><br>我们就可以通过生成的网站地址访问了<br><img src="https://img-blog.csdnimg.cn/direct/c0ee1c463eaa44a2abc5a38286cd26f5.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
            <tag> web项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统安装光盘的制作</title>
      <link href="/2021/08/31/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/6.%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E5%85%89%E7%9B%98%E7%9A%84%E5%88%B6%E4%BD%9C/"/>
      <url>/2021/08/31/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/6.%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E5%85%89%E7%9B%98%E7%9A%84%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h1><p>@[toc]</p><h1 id="一-简介"><a href="#一-简介" class="headerlink" title="一. 简介"></a>一. 简介</h1><p>这篇说一下，系统光盘的制作过程，特别是小的公司用的比较多，项目比较多，每个项目有特定的系统，如果用U盘来做，很容易乱，用光盘成本低比较，且容易区分</p><h1 id="二-工具"><a href="#二-工具" class="headerlink" title="二. 工具"></a>二. 工具</h1><p>这里我们适用WIN PE进行系统盘的制作，UItraISO软件进行镜像的合成和刻录</p><blockquote><p><a href="https://pan.baidu.com/s/1tHg_Ga6xR6a8FBlW35gmZw">UItraISO</a><br>提取码: 13ab<br><a href="https://pan.baidu.com/s/1vdP10OBzBPOAJewFYCVSgg">WIN PE</a><br>提取码: a6et </p></blockquote><h1 id="三-制作"><a href="#三-制作" class="headerlink" title="三. 制作"></a>三. 制作</h1><ol><li>打开软件，点击最后一个光盘制作<br><img src="https://img-blog.csdnimg.cn/8ee7ca76c7e7432097deb03783821a5f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>生成WIN PE 的iso文件<br><img src="https://img-blog.csdnimg.cn/1e2d1341bdf249bdb2658e6131a44160.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/8b03139624e9486cb26881d837e23674.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>用UItraISO打开生成的镜像<br><img src="https://img-blog.csdnimg.cn/81df2756fcd5461ca1e715fc28453304.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></li><li>将ISO文件和系统的镜像gho文件进行合成，也就是将系统进行文件添加到文件根目录打开工具点击刻录光盘映像，就可以完成刻录一个系统盘<blockquote><p>注意：光盘必须是新的未进行模式选择，不可以直接将镜像文件复制到光盘中作为系统启动盘</p></blockquote></li></ol><p><img src="https://img-blog.csdnimg.cn/ac4786c096994573845641930352d7a2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>也可以另存为，合成为一个镜像保存，下次再次使用<br><img src="https://img-blog.csdnimg.cn/0c940bdd4d244537b4121780079fe149.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows技能 </tag>
            
            <tag> 系统安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机上用U盘安装系统</title>
      <link href="/2021/08/31/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/5.%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E7%94%A8U%E7%9B%98%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F/"/>
      <url>/2021/08/31/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/5.%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E7%94%A8U%E7%9B%98%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h1><p>@[toc]</p><h1 id="一-简介"><a href="#一-简介" class="headerlink" title="一. 简介"></a>一. 简介</h1><p>这篇说一下如何用做好的系统启动U盘在虚拟机里面安装系统，这里我测试用的虚拟机是VMware Workstation Pro 15.5，这里就不提供安装包了，也百度下载安装，这里注意说安装流程。</p><h1 id="二-安装"><a href="#二-安装" class="headerlink" title="二. 安装"></a>二. 安装</h1><h2 id="1-创建虚拟机"><a href="#1-创建虚拟机" class="headerlink" title="1. 创建虚拟机"></a>1. 创建虚拟机</h2><p>打开虚拟机来创建一个虚拟机<br><img src="https://img-blog.csdnimg.cn/31567f04c86442fca09198e7bab4e8e3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>选择推荐<br><img src="https://img-blog.csdnimg.cn/f7e801cd9f7c4bbe9755fd683a98c644.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>稍后安装操作系统<br><img src="https://img-blog.csdnimg.cn/bfb1ff8b53e549569268e2ec243a9f18.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>安装windows就选第一个，根据安装系统来<br><img src="https://img-blog.csdnimg.cn/2c41c8f94aa7411eb89e6b0dcda7f759.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>选择路径<br><img src="https://img-blog.csdnimg.cn/e564ce72cc494647b35fd0f690b6dcd7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>设置硬盘的大小，这里是虚拟的，会根据实际大小占用真正的硬盘空间<br><img src="https://img-blog.csdnimg.cn/cc6c0c8fd775440bb1b1a2d8403f7ecf.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>完成安装<img src="https://img-blog.csdnimg.cn/f4788554115147e796c7a76047a16369.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="2-添加U盘作为启动盘"><a href="#2-添加U盘作为启动盘" class="headerlink" title="2. 添加U盘作为启动盘"></a>2. 添加U盘作为启动盘</h2><p>创建完成是这样，然后关闭虚拟机插上制作好的系统启动U盘，重新打开虚拟机<br><img src="https://img-blog.csdnimg.cn/40fab0f1bb124e7da025d04d83f5ac16.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>点击编辑虚拟机<br><img src="https://img-blog.csdnimg.cn/169412dbd2754c15a1728127082c1063.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br> 添加硬盘，也就是我们的系统启动U盘，进入PE进行系统安装<br><img src="https://img-blog.csdnimg.cn/44ebde4373d94aab986a8a54745e1d58.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/5fd89a005f0c492984585ec85da51e65.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2e02d5559f13436cae21e4701fb8e292.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/bb247eb5a3aa469684aa88a472fa2ce4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/08141c43d2dd434dbc5732d20d086adf.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/dc9e6f6053244072bdf5e7d0d261820a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="3-启动方式"><a href="#3-启动方式" class="headerlink" title="3. 启动方式"></a>3. 启动方式</h2><p> 选择启动方式<br><img src="https://img-blog.csdnimg.cn/26efd95581194702bc5167542c0f9db3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>选择此项进行回车启动<br><img src="https://img-blog.csdnimg.cn/973d6ace593243f98a39cacd12d507f2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>2. 就可以正常进入到WIN PE系统中了<br><img src="https://img-blog.csdnimg.cn/1e6eb20f19c84cf3a873951157c89d7f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/cf67dd23b97a463f81f14ef17da736ba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="4-分区"><a href="#4-分区" class="headerlink" title="4. 分区"></a>4. 分区</h2><p>打开分区软件<br><img src="https://img-blog.csdnimg.cn/169f14c10c494f86bf298aa3e5e3aacb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a6a91592a1d1467ab65bf5a38a098486.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>这里我分两个分区，根据自己的需求来分，软件点击确定，分好之后就可以安装系统了<br><img src="https://img-blog.csdnimg.cn/408104acf0ec4295a6b84d6ab7a5e8fb.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="5-系统安装"><a href="#5-系统安装" class="headerlink" title="5. 系统安装"></a>5. 系统安装</h2><p>然后进行系统安装<br><img src="https://img-blog.csdnimg.cn/9bf1f6cb994a49869e14025ead4e5a7c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/8a06162d6e224548b42ed76ba99e9cba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/eb6b2a894e2d4803bc9dc1209bedaca3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>选择gho系统镜像文件<br><img src="https://img-blog.csdnimg.cn/e653ac18be8f42309b47e0d0bfa5dcb6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/834c71efd887453b9c0f80ad79784f88.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>安装系统的磁盘<br><img src="https://img-blog.csdnimg.cn/08273e7382604cb190d7d7f37d21a344.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>此磁盘的C分区<br><img src="https://img-blog.csdnimg.cn/71c04dd1a43c4fcfad56b71ebb247ea4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/99a1b355091945908f8c5537572c2301.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="6-删除第二硬盘"><a href="#6-删除第二硬盘" class="headerlink" title="6.删除第二硬盘"></a>6.删除第二硬盘</h2><p>安装完成然后就是关机，删除添加的硬盘，点击硬盘2<br><img src="https://img-blog.csdnimg.cn/b3cf08a26d474b5bb547b79b7ea2ee24.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b762b278e89c4536aa4ef49c69a5a812.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASVTogIHnv58=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="三-总结"><a href="#三-总结" class="headerlink" title="三.总结"></a>三.总结</h1><p>U盘装系统不管在虚拟机还是正常电脑方法类似，手动ghost可以安装gho镜像文件，对于网络下载的ISO文件可用PE中的系统还原软件进行安装</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows技能 </tag>
            
            <tag> 系统安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266+Blinker+小爱同学舵机控制开关</title>
      <link href="/2021/08/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/15.ESP8266+Blinker+%E5%B0%8F%E7%88%B1%E5%90%8C%E5%AD%A6%E8%88%B5%E6%9C%BA%E6%8E%A7%E5%88%B6%E5%BC%80%E5%85%B3/"/>
      <url>/2021/08/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/15.ESP8266+Blinker+%E5%B0%8F%E7%88%B1%E5%90%8C%E5%AD%A6%E8%88%B5%E6%9C%BA%E6%8E%A7%E5%88%B6%E5%BC%80%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><p>@[TOC]</p><h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p>最近想着用我们的小爱同学语音控制卧室的灯，这样就可以在睡觉的时候不用下床了，之前我们总是测试ESP8266控制5v的灯，如何控制220v的节能灯，相信大家也看到过很多的控制办法，一种是之间通过继电器进行控制，二一个就是采用舵机之间放在开关上进行控制，今天就给大家介绍第二种<br><img src="https://img-blog.csdnimg.cn/8f3fe42757ba4510a2ed6abaa48c792a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="二、硬件连接"><a href="#二、硬件连接" class="headerlink" title="二、硬件连接"></a>二、硬件连接</h1><p>这里我添加了一个DHT11温湿度传感器用于温湿度信息的采集显示，整个控制的电源采用一个普通的5v 1A的充电器为其供电<br><strong>舵机</strong></p><table><thead><tr><th>ES8266</th><th>舵机</th></tr></thead><tbody><tr><td>GPIO5</td><td>橙色信号线</td></tr><tr><td>VCC</td><td>红色VCC</td></tr><tr><td>GND</td><td>棕色GND</td></tr><tr><td><strong>DHT11</strong></td><td></td></tr><tr><td>ES8266</td><td>温湿度传感器</td></tr><tr><td>–</td><td>–</td></tr><tr><td>GPIO2</td><td>DATA</td></tr><tr><td>3.3V</td><td>VCC</td></tr><tr><td>GND</td><td>GND</td></tr></tbody></table><p><img src="https://img-blog.csdnimg.cn/6b475d24fd304b22a00abdf3f67988f2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70"></p><h1 id="三、代码"><a href="#三、代码" class="headerlink" title="三、代码"></a>三、代码</h1><p>网络连接采用智能配网，前面文章有专门说明<br>此处的代码需要改为自己的设备秘钥<code>char auth[] = &quot;*****&quot;;</code></p><blockquote><p><a href="https://gitee.com/oldzhai/ESP8266Arduino/tree/master/%E5%8D%A7%E5%AE%A4%E7%81%AF">gitee 代码链接</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_LIGHT</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_SENSOR   <span class="comment">//定义为语音控制传感器设备 </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Servo.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DHT.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> dj 5</span></span><br><span class="line">Servo myservo;<span class="comment">//定义舵机</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHTPIN 2 <span class="comment">//</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHTTYPE DHT11   <span class="comment">// DHT 11</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;*****&quot;</span>;<span class="comment">//根据需要自行修改</span></span><br><span class="line"><span class="type">bool</span> WIFI_Status = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">DHT <span class="title function_">dht</span><span class="params">(DHTPIN, DHTTYPE)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int32_t</span> humi_read = <span class="number">0</span>;<span class="comment">//湿度 小爱同学只能查整数的数据 </span></span><br><span class="line"><span class="type">float</span> temp_read = <span class="number">0</span>; <span class="comment">//温度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建组件对象</span></span><br><span class="line">BlinkerButton <span class="title function_">Button1</span><span class="params">(<span class="string">&quot;test&quot;</span>)</span>;</span><br><span class="line">BlinkerNumber <span class="title function_">HUMI</span><span class="params">(<span class="string">&quot;humi&quot;</span>)</span>;</span><br><span class="line">BlinkerNumber <span class="title function_">TEMP</span><span class="params">(<span class="string">&quot;temp&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配网函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  Serial.println(<span class="string">&quot;\r\nWait for Smartconfig...&quot;</span>);</span><br><span class="line">  WiFi.beginSmartConfig();<span class="comment">//等待手机端发出的用户名与密码</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);  </span><br><span class="line">    delay(<span class="number">1000</span>);                      </span><br><span class="line">    digitalWrite(LED_BUILTIN, LOW);    </span><br><span class="line">    delay(<span class="number">1000</span>);                      </span><br><span class="line">    <span class="keyword">if</span> (WiFi.smartConfigDone())<span class="comment">//退出等待</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s\r\n&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置wifi函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WIFI_Set</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;\r\n正在连接&quot;</span>);</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(WiFi.status()!=WL_CONNECTED)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(WIFI_Status)</span><br><span class="line">        &#123;</span><br><span class="line">            Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">            digitalWrite(LED_BUILTIN, HIGH);  </span><br><span class="line">            delay(<span class="number">500</span>);                       </span><br><span class="line">            digitalWrite(LED_BUILTIN, LOW);    </span><br><span class="line">            delay(<span class="number">500</span>);                 </span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span>(count&gt;=<span class="number">5</span>)<span class="comment">//5s后连接失败</span></span><br><span class="line">            &#123;</span><br><span class="line">                WIFI_Status = <span class="literal">false</span>;</span><br><span class="line">                Serial.println(<span class="string">&quot;WiFi连接失败，请用手机进行配网&quot;</span>); </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            smartConfig();  <span class="comment">//微信智能配网</span></span><br><span class="line">        &#125;</span><br><span class="line">     &#125;  </span><br><span class="line">     Serial.println(<span class="string">&quot;连接成功&quot;</span>);  </span><br><span class="line">     Serial.print(<span class="string">&quot;IP:&quot;</span>);</span><br><span class="line">     Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span><span class="comment">//电源类操作</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line"></span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();<span class="comment">//反馈状态 </span></span><br><span class="line">        myservo.write(<span class="number">60</span>);<span class="comment">//收到“on”的指令后舵机旋转55度</span></span><br><span class="line">        delay(<span class="number">1000</span>);</span><br><span class="line">        myservo.write(<span class="number">80</span>);</span><br><span class="line">        Button1.print(<span class="string">&quot;on&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line"></span><br><span class="line">         BlinkerMIOT.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">         BlinkerMIOT.print(); </span><br><span class="line">         myservo.write(<span class="number">95</span>);</span><br><span class="line">         delay(<span class="number">1000</span>);</span><br><span class="line">         myservo.write(<span class="number">80</span>); </span><br><span class="line">         Button1.print(<span class="string">&quot;off&quot;</span>);  </span><br><span class="line">           </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按下按键即会执行该函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">    <span class="keyword">if</span> (state==<span class="string">&quot;on&quot;</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        myservo.write(<span class="number">60</span>);<span class="comment">//收到“on”的指令后舵机旋转55</span></span><br><span class="line">        delay(<span class="number">1000</span>);</span><br><span class="line">        myservo.write(<span class="number">80</span>);</span><br><span class="line">        Button1.print(<span class="string">&quot;on&quot;</span>); </span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(state==<span class="string">&quot;off&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       myservo.write(<span class="number">95</span>);<span class="comment">//长按开关按键后舵机旋转90</span></span><br><span class="line">       delay(<span class="number">1000</span>);</span><br><span class="line">       myservo.write(<span class="number">80</span>);</span><br><span class="line">       Button1.print(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">heartbeat</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//反馈湿度数据</span></span><br><span class="line">    HUMI.print(humi_read);</span><br><span class="line">    <span class="comment">//设置ui组件图标和颜色</span></span><br><span class="line">    HUMI.icon(<span class="string">&quot;fas fa-tint&quot;</span>);</span><br><span class="line">    HUMI.color(<span class="string">&quot;#0099FF &quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//反馈温度数据</span></span><br><span class="line">    TEMP.print(temp_read);</span><br><span class="line">    TEMP.icon(<span class="string">&quot;fas fa-thermometer-empty&quot;</span>);</span><br><span class="line">    TEMP.color(<span class="string">&quot;#FF3300&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">miotQuery</span><span class="params">(<span class="type">int32_t</span> queryCode)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;MIOT Query codes: &quot;</span>, queryCode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (queryCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//同时查询传感器数据</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_ALL_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query All&quot;</span>);</span><br><span class="line">            BlinkerMIOT.temp(temp_read);</span><br><span class="line">            BlinkerMIOT.humi(humi_read);</span><br><span class="line">            BlinkerMIOT.pm25(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.co2(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//查询pm2.5</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_PM25_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query PM25&quot;</span>);</span><br><span class="line">            BlinkerMIOT.pm25(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//查询湿度</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_HUMI_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query HUMI&quot;</span>);</span><br><span class="line">            BlinkerMIOT.humi(humi_read);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//查询温度</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_TEMP_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query TEMP&quot;</span>);</span><br><span class="line">            BlinkerMIOT.temp(temp_read);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//查询CO2</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_TIME_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query co2&quot;</span>);</span><br><span class="line">            BlinkerMIOT.co2(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> :</span><br><span class="line">            BlinkerMIOT.temp(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.humi(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.pm25(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.co2(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 初始化串口</span></span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    BLINKER_DEBUG.stream(Serial);</span><br><span class="line">    </span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化舵机</span></span><br><span class="line">    myservo.attach(dj);<span class="comment">//舵机的IO口</span></span><br><span class="line">    myservo.write(<span class="number">80</span>);<span class="comment">//上电时舵机75度</span></span><br><span class="line">    </span><br><span class="line">    BlinkerMIOT.attachPowerState(miotPowerState);</span><br><span class="line">    </span><br><span class="line">    Button1.print(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">    <span class="comment">// 初始化blinker</span></span><br><span class="line">    Blinker.begin(auth, WiFi.SSID().c_str(), WiFi.psk().c_str());</span><br><span class="line">    Button1.attach(button1_callback);</span><br><span class="line">    Blinker.attachHeartbeat(heartbeat);</span><br><span class="line">    BlinkerMIOT.attachQuery(miotQuery); <span class="comment">//小爱同学 数据反馈</span></span><br><span class="line">    dht.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line">    <span class="type">float</span> h = dht.readHumidity();</span><br><span class="line">    <span class="type">float</span> t = dht.readTemperature();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (isnan(h) || isnan(t))</span><br><span class="line">    &#123;</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Failed to read from DHT sensor!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Humidity: &quot;</span>, h, <span class="string">&quot; %&quot;</span>);</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Temperature: &quot;</span>, t, <span class="string">&quot; *C&quot;</span>);</span><br><span class="line">        humi_read = h;</span><br><span class="line">        temp_read = t;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    Blinker.delay(<span class="number">800</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="四、blinker软件配置"><a href="#四、blinker软件配置" class="headerlink" title="四、blinker软件配置"></a>四、blinker软件配置</h1><p>打开blinker软件添加我们的设备，在界面添加我们的控件组件，这里添加三个，和代码匹配</p><ul><li>灯的开关 test</li><li>温度显示 temp</li><li>湿度显示 humi<br><img src="https://img-blog.csdnimg.cn/67fb87c5bd8340e5974a1ec32a214d1d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这样就可以进行blinker app控制我们的卧室灯，也可以通过小爱同学进行卧室灯的开关控制。因为前面文章对小爱同学的控制以及Blinker的添加设备等基本操作详细说明，这里就不耽误大家时间了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux驱动之字符设备驱动</title>
      <link href="/2021/07/29/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/1.%E9%A9%B1%E5%8A%A8/2.Linux%E9%A9%B1%E5%8A%A8%E4%B9%8B%E5%AD%97%E7%AC%A6%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/"/>
      <url>/2021/07/29/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/1.%E9%A9%B1%E5%8A%A8/2.Linux%E9%A9%B1%E5%8A%A8%E4%B9%8B%E5%AD%97%E7%AC%A6%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="系列文章目录"><a href="#系列文章目录" class="headerlink" title="系列文章目录"></a>系列文章目录</h1><p><a href="https://b(https//blog.csdn.net/weixin_45631738/article/details/119146285">第一章 Linux入门之驱动框架</a><br><a href="https://blog.csdn.net/weixin_45631738/article/details/119210946">第二章 Linux驱动之字符设备驱动</a></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >本章节简绍什么是Linux字符设备，认识字符设备的新旧框架，以及如何编写一个字符设备驱动</font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="一、认识字符设备驱动"><a href="#一、认识字符设备驱动" class="headerlink" title="一、认识字符设备驱动"></a>一、认识字符设备驱动</h1><h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h2><p>字符设备是 Linux 驱动中最基本的一类设备驱动，字符设备就是一个一个字节，按照字节流进行读写操作的设备，读写数据是分先后顺序的。比如我们最常见的 LED、按键、 IIC、 SPI， LCD 等等都是字符设备，这些设备的驱动就叫做字符设备驱动。</p><h2 id="2-基本概念"><a href="#2-基本概念" class="headerlink" title="2.基本概念"></a>2.基本概念</h2><p>在详细的学习字符设备驱动架构之前，我们先来简单的了解一下 Linux 下的应用程序是如何调用驱动程序的， Linux 应用程序对驱动程序的调用如下图所示：<br><img src="https://img-blog.csdnimg.cn/ff3309c6740f4ecb8775504258b8d725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在 Linux 中一切皆为文件，驱动加载成功以后会在“&#x2F;dev”目录下生成一个相应的文件，应用程序通过对这个名为“&#x2F;dev&#x2F;xxx” (xxx 是具体的驱动文件名字)的文件进行相应的操作即可实现对硬件的操作。</p><blockquote><p>比如现在有个叫做&#x2F;dev&#x2F;led 的驱动文件，此文件是 led 的驱动文件。应用程序使用 open 函数来打开文件&#x2F;dev&#x2F;led，使用完成以后使用 close 函数关闭&#x2F;dev&#x2F;led 这个文件。 open 和 close 就是打开和关闭 led 驱动的函数，如果要点亮或关闭 led，那么就使用 write 函数来操作，也就是向此驱动写入数据，这个数据就是要关闭还是要打开led 的控制参数。如果要获取 led 灯的状态，就用 read 函数从驱动中读取相应的状态。</p></blockquote><p>应用程序运行在用户空间，而 Linux 驱动属于内核的一部分，因此驱动运行于内核空间。当我们在用户空间想要实现对内核的操作，比如使用 open 函数打开&#x2F;dev&#x2F;led 这个驱动，因为用户空间不能直接对内核进行操作，因此必须使用一个叫做“系统调用”的方法来实现从用户空间陷入到内核空间，这样才能实现对底层驱动的操作。 open、 close、 write 和 read 等这些函数是有 C 库提供的，在 Linux 系统中，系统调用作为 C 库的一部分。当我们调用 open 函数的时候流程如下图所示： </p><p><img src="https://img-blog.csdnimg.cn/3cddb50139fb4d5d9c9d29990390f2b5.png#pic_center" alt="在这里插入图片描述"></p><p>其中关于 C 库以及如何通过系统调用陷入到内核空间这个我们不用去管，我们重点关注的是应用程序和具体的驱动，应用程序使用到的函数在具体驱动程序中都有与之对应的函数，比如应用程序中调用了 open这个函数，那么在驱动程序中也得有一个名为 open 的函数。每一个系统调用，在驱动中都有与之对应的一个驱动函数，在 Linux 内核文件 include&#x2F;linux&#x2F;fs.h 中有个叫做 file_operations 的结构体，此结构体就是 Linux内核驱动操作函数集合</p><h1 id="二、字符设备旧框架"><a href="#二、字符设备旧框架" class="headerlink" title="二、字符设备旧框架"></a>二、字符设备旧框架</h1><h2 id="1-注册和注销"><a href="#1-注册和注销" class="headerlink" title="1.注册和注销"></a>1.注册和注销</h2><p>字符设备的注册和注销使用下面的两个函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">int</span> <span class="title function_">register_chrdev</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> major, <span class="type">const</span> <span class="type">char</span> *name, <span class="type">const</span> <span class="keyword">struct</span> file_operations *fops)</span></span><br><span class="line"><span class="comment">//注销</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">unregister_chrdev</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> major, <span class="type">const</span> <span class="type">char</span> *name)</span></span><br></pre></td></tr></table></figure><p><strong>参数说明</strong><br>register_chrdev 函数用于注册字符设备，此函数一共有三个参数</p><ul><li>major： 主设备号， Linux 下每个设备都有一个设备号，设备号分为主设备号和次设备号两部分</li><li>name：设备名字，指向一串字符串。</li><li>fops： 结构体 file_operations 类型指针，指向设备的操作函数集合变量。</li></ul><p>unregister_chrdev 函数用于注销字符设备，此函数有两个参数</p><ul><li>major： 要注销的设备对应的主设备号。</li><li>name： 要注销的设备对应的设备名</li></ul><h2 id="2-代码"><a href="#2-代码" class="headerlink" title="2.代码"></a>2.代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">test_fops</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 驱动入口函数 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> __init <span class="title function_">xxx_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* 入口函数具体内容 */</span></span><br><span class="line"><span class="type">int</span> retvalue = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 注册字符设备驱动 */</span></span><br><span class="line">retvalue = register_chrdev(<span class="number">200</span>, <span class="string">&quot;chrtest&quot;</span>, &amp;test_fops);</span><br><span class="line"><span class="keyword">if</span>(retvalue &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">/* 字符设备注册失败,自行处理 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 驱动出口函数 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __exit <span class="title function_">xxx_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* 注销字符设备驱动 */</span></span><br><span class="line">unregister_chrdev(<span class="number">200</span>, <span class="string">&quot;chrtest&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 将上面两个函数指定为驱动的入口和出口函数 */</span></span><br><span class="line">module_init(xxx_init);</span><br><span class="line">module_exit(xxx_exit); </span><br></pre></td></tr></table></figure><h2 id="3-缺点"><a href="#3-缺点" class="headerlink" title="3.缺点"></a>3.缺点</h2><ol><li>自己手动来分配设备号，可能会出现设备号的重复使用的问题， 可先使用命令<code> cat /proc/devices</code>来查看已经使用的设备号，然后在定义自己的设备号</li><li>驱动程序加载之后还需要手动来创建设备节点，创建成功可在<code>/dev</code>目录下查看<br><code>mknod /dev/chrdevbase c 200 0</code></li><li>卸载设备驱动后，还需要设备来设备设备节点<br><code>rm /dev/chrdevbase</code></li></ol><h2 id="4-实验用例"><a href="#4-实验用例" class="headerlink" title="4.实验用例"></a>4.实验用例</h2><p>这里我使用的是ZYNQ AC7020核心板的一个LED字符设备驱动，才用地址映射的方式来操作IO口</p><p><strong>驱动程序</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">文件名 : led.c</span></span><br><span class="line"><span class="comment">作者 : oldzhai</span></span><br><span class="line"><span class="comment">版本 : V1.0</span></span><br><span class="line"><span class="comment">描述 : ZYNQ LED 驱动文件。</span></span><br><span class="line"><span class="comment">其他 : LED为PS MIO0</span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/delay.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/ide.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/gpio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;asm/mach/map.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;asm/uaccess.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;asm/io.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_MAJOR 200 <span class="comment">/* 主设备号 */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_NAME <span class="string">&quot;led&quot;</span> <span class="comment">/* 设备名字 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * GPIO 相关寄存器地址定义</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZYNQ_GPIO_REG_BASE 0xE000A000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATA_OFFSET    0x00000040</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DIRM_OFFSET        0x00000204</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OUTEN_OFFSET       0x00000208</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INTDIS_OFFSET      0x00000214</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> APER_CLK_CTRL      0xF800012C</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 映射后的寄存器虚拟地址指针 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *data_addr;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *dirm_addr;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *outen_addr;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *intdis_addr;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *aper_clk_ctrl_addr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @description : 打开设备</span></span><br><span class="line"><span class="comment"> * @param – inode : 传递给驱动的 inode</span></span><br><span class="line"><span class="comment"> * @param - filp : 设备文件， file 结构体有个叫做 private_data 的成员变量</span></span><br><span class="line"><span class="comment"> * 一般在 open 的时候将 private_data 指向设备结构体。</span></span><br><span class="line"><span class="comment"> * @return : 0 成功;其他 失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">led_open</span><span class="params">(<span class="keyword">struct</span> inode *inode, <span class="keyword">struct</span> file *filp)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @description : 从设备读取数据</span></span><br><span class="line"><span class="comment">* @param - filp : 要打开的设备文件(文件描述符)</span></span><br><span class="line"><span class="comment">* @param - buf : 返回给用户空间的数据缓冲区</span></span><br><span class="line"><span class="comment">* @param - cnt : 要读取的数据长度</span></span><br><span class="line"><span class="comment">* @param - offt : 相对于文件首地址的偏移</span></span><br><span class="line"><span class="comment">* @return : 读取的字节数，如果为负值，表示读取失败</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">ssize_t</span> <span class="title function_">led_read</span><span class="params">(<span class="keyword">struct</span> file *filp, <span class="type">char</span> __user *buf,</span></span><br><span class="line"><span class="params"><span class="type">size_t</span> cnt, <span class="type">loff_t</span> *offt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @description : 向设备写数据</span></span><br><span class="line"><span class="comment">* @param - filp : 设备文件，表示打开的文件描述符</span></span><br><span class="line"><span class="comment">* @param - buf : 要写给设备写入的数据</span></span><br><span class="line"><span class="comment">* @param - cnt : 要写入的数据长度</span></span><br><span class="line"><span class="comment">* @param - offt : 相对于文件首地址的偏移</span></span><br><span class="line"><span class="comment">* @return : 写入的字节数，如果为负值，表示写入失败</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">ssize_t</span> <span class="title function_">led_write</span><span class="params">(<span class="keyword">struct</span> file *filp, <span class="type">const</span> <span class="type">char</span> __user *buf,</span></span><br><span class="line"><span class="params"><span class="type">size_t</span> cnt, <span class="type">loff_t</span> *offt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ret;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line"><span class="type">char</span> kern_buf[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">ret = copy_from_user(kern_buf, buf, cnt);<span class="comment">// 得到应用层传递过来的数据</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &gt; ret) &#123;</span><br><span class="line">printk(KERN_ERR <span class="string">&quot;kernel write failed!\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> -EFAULT;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">val = readl(data_addr);</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == kern_buf[<span class="number">0</span>])</span><br><span class="line">val &amp;= ~(<span class="number">0x1</span>U); <span class="comment">// 如果传递过来的数据是 0 则关闭 led</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == kern_buf[<span class="number">0</span>])</span><br><span class="line">val |= (<span class="number">0x1</span>U); </span><br><span class="line"></span><br><span class="line">writel(val, data_addr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @description : 关闭/释放设备</span></span><br><span class="line"><span class="comment">* @param – filp : 要关闭的设备文件(文件描述符)</span></span><br><span class="line"><span class="comment">* @return : 0 成功;其他 失败</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">led_release</span><span class="params">(<span class="keyword">struct</span> inode *inode, <span class="keyword">struct</span> file *filp)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设备操作函数 */</span></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">led_fops</span> =</span> &#123;</span><br><span class="line">.owner = THIS_MODULE,</span><br><span class="line">.open = led_open,</span><br><span class="line">.read = led_read,</span><br><span class="line">.write = led_write,</span><br><span class="line">.release = led_release, </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> __init <span class="title function_">led_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 val;</span><br><span class="line"><span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 1.寄存器地址映射 */</span></span><br><span class="line">data_addr = ioremap(ZYNQ_GPIO_REG_BASE + DATA_OFFSET, <span class="number">4</span>);</span><br><span class="line">dirm_addr = ioremap(ZYNQ_GPIO_REG_BASE + DIRM_OFFSET, <span class="number">4</span>);</span><br><span class="line">outen_addr = ioremap(ZYNQ_GPIO_REG_BASE + OUTEN_OFFSET, <span class="number">4</span>);</span><br><span class="line">intdis_addr = ioremap(ZYNQ_GPIO_REG_BASE + INTDIS_OFFSET, <span class="number">4</span>);</span><br><span class="line">aper_clk_ctrl_addr = ioremap(APER_CLK_CTRL, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2.使能 GPIO 时钟 */</span></span><br><span class="line">val = readl(aper_clk_ctrl_addr);</span><br><span class="line">val |= (<span class="number">0x1</span>U &lt;&lt; <span class="number">22</span>);</span><br><span class="line">writel(val, aper_clk_ctrl_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 3.关闭中断功能 */</span></span><br><span class="line">val |= (<span class="number">0x1</span>U);</span><br><span class="line">writel(val, intdis_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 4.设置 GPIO 为输出功能 相应bit为为1 */</span></span><br><span class="line">val = readl(dirm_addr);</span><br><span class="line">val |= (<span class="number">0x1</span>U);</span><br><span class="line">writel(val, dirm_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 5.使能 GPIO 输出功能 */</span></span><br><span class="line">val = readl(outen_addr);</span><br><span class="line">val |= (<span class="number">0x1</span>U);</span><br><span class="line">writel(val, outen_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 6.默认关闭 LED */</span></span><br><span class="line">val = readl(data_addr);</span><br><span class="line">val &amp;= ~(<span class="number">0x1</span>U);</span><br><span class="line">writel(val, data_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 7.注册字符设备驱动 */</span></span><br><span class="line">ret = register_chrdev(LED_MAJOR, LED_NAME, &amp;led_fops);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &gt; ret)&#123;</span><br><span class="line">printk(KERN_ERR <span class="string">&quot;Register LED driver failed!\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __exit <span class="title function_">led_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* 1.卸载设备 */</span></span><br><span class="line">unregister_chrdev(LED_MAJOR, LED_NAME);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2.取消内存映射 */</span></span><br><span class="line">iounmap(data_addr);</span><br><span class="line">iounmap(dirm_addr);</span><br><span class="line">iounmap(outen_addr);</span><br><span class="line">iounmap(intdis_addr);</span><br><span class="line">iounmap(aper_clk_ctrl_addr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 驱动模块入口和出口函数注册 */</span></span><br><span class="line">module_init(led_init);</span><br><span class="line">module_exit(led_exit);</span><br><span class="line"></span><br><span class="line">MODULE_AUTHOR(<span class="string">&quot;oldzhai &lt;zfq0620@126.com&gt;&quot;</span>);</span><br><span class="line">MODULE_DESCRIPTION(<span class="string">&quot;Alientek ZYNQ GPIO LED Driver&quot;</span>);</span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>应用程序</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">文件名 : ledApp.c</span></span><br><span class="line"><span class="comment">版本 : V1.0</span></span><br><span class="line"><span class="comment">描述 : LED 驱测试 APP。</span></span><br><span class="line"><span class="comment">其他 : 无</span></span><br><span class="line"><span class="comment">使用方法 : ./ledApp /dev/led 0 关闭 LED ./ledApp /dev/led 1 打开 LED</span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @description : main 主程序</span></span><br><span class="line"><span class="comment"> * @param - argc : argv 数组元素个数</span></span><br><span class="line"><span class="comment"> * @param - argv : 具体参数</span></span><br><span class="line"><span class="comment"> * @return : 0 成功;其他 失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> fd, ret;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buf[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="number">3</span> != argc) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Usage:\n&quot;</span></span><br><span class="line"><span class="string">&quot;\t./ledApp /dev/led 1 @ close LED\n&quot;</span></span><br><span class="line"><span class="string">&quot;\t./ledApp /dev/led 0 @ open LED\n&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 打开设备 */</span></span><br><span class="line">fd = open(argv[<span class="number">1</span>], O_RDWR);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &gt; fd) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;file %s open failed!\r\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 将字符串转换为 int 型数据 */</span></span><br><span class="line">buf[<span class="number">0</span>] = atoi(argv[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 向驱动写入数据 */</span></span><br><span class="line">ret = write(fd, buf, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &gt; ret)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;LED Control Failed!\r\n&quot;</span>);</span><br><span class="line">close(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 关闭设备 */</span></span><br><span class="line">close(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、新框架"><a href="#三、新框架" class="headerlink" title="三、新框架"></a>三、新框架</h1><h2 id="1-认识"><a href="#1-认识" class="headerlink" title="1.认识"></a>1.认识</h2><p>加载模块的内容</p><blockquote><ol><li>申请设备号 主设备号和次设备号</li><li>struct cdev 结构体</li><li>cdev 需要和设备号关联</li><li>cdev 需要和操作方法集关联</li><li>将cdev加载到内核</li><li>读设备树（可无）</li><li>地址映射（可无）</li><li>配置寄存器（可无）</li><li>创建一类设备class_device</li><li>创建这类设备的设备节点</li></ol></blockquote><p>删除设备节点</p><blockquote><ol><li>删除设备类</li><li>解除地址映射</li><li>删除cdev</li><li>释放设备号</li></ol></blockquote><p>a. 设备号的操作</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设备号的申请函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">alloc_chrdev_region</span><span class="params">(<span class="type">dev_t</span> *dev, <span class="type">unsigned</span> baseminor, <span class="type">unsigned</span> count, <span class="type">const</span> <span class="type">char</span> *name)</span></span><br><span class="line"><span class="comment">//给定了设备的主设备号和次设备号</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">register_chrdev_region</span><span class="params">(<span class="type">dev_t</span> from, <span class="type">unsigned</span> count, <span class="type">const</span> <span class="type">char</span> *name)</span></span><br><span class="line"><span class="comment">//释放掉设备号</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">unregister_chrdev_region</span><span class="params">(<span class="type">dev_t</span> from, <span class="type">unsigned</span> count)</span></span><br></pre></td></tr></table></figure><p>b. 设备注册方法<br>在 Linux 中使用 cdev 结构体表示一个字符设备， cdev 结构体在 include&#x2F;linux&#x2F;cdev.h 文件中的定义如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">struct</span> <span class="title">cdev</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">kobject</span> <span class="title">kobj</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">module</span> *<span class="title">owner</span>;</span></span><br><span class="line"><span class="type">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> *<span class="title">ops</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list_head</span> <span class="title">list</span>;</span></span><br><span class="line"><span class="type">dev_t</span> dev;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> count;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>在 cdev 中有两个重要的成员变量： ops 和 dev，这两个就是字符设备文件操作函数集合 file_operations以及设备号 dev_t。编写字符设备驱动之前需要定义一个 cdev 结构体变量，这个变量就表示一个字符设备，如下所示：<code>struct cdev test_cdev;</code></p></blockquote><p>定义好 cdev 变量以后就要使用 cdev_init 函数对其进行初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参数 cdev 就是要初始化的 cdev 结构体变量，参数 fops 就是字符设备文件操作函数集合。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">cdev_init</span><span class="params">(<span class="keyword">struct</span> cdev *cdev, <span class="type">const</span> <span class="keyword">struct</span> file_operations *fops)</span></span><br></pre></td></tr></table></figure><p>向 Linux 系统添加这个字符设备</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参数 p 指向要添加的字符设备(cdev 结构体变量)，参数 dev 就是设备所使用的设备号，参数 count 是要添加的设备数量</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">cdev_add</span><span class="params">(<span class="keyword">struct</span> cdev *p, <span class="type">dev_t</span> dev, <span class="type">unsigned</span> count)</span></span><br></pre></td></tr></table></figure><p>从 Linux 内核中删除相应的字符设备</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参数 p 指向要添加的字符设备(cdev 结构体变量)</span></span><br><span class="line">cdev_del(<span class="keyword">struct</span> cdev *p)</span><br></pre></td></tr></table></figure><p>c. 自动创建设备节点</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建设备类</span></span><br><span class="line"><span class="keyword">struct</span> class *<span class="title function_">class_create</span> <span class="params">(<span class="keyword">struct</span> module *owner, <span class="type">const</span> <span class="type">char</span> *name)</span></span><br><span class="line"><span class="comment">//删除掉类</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">class_destroy</span><span class="params">(<span class="keyword">struct</span> class *cls)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建设备</span></span><br><span class="line"><span class="keyword">struct</span> device *<span class="title function_">device_create</span><span class="params">(<span class="keyword">struct</span> class *class, <span class="keyword">struct</span> device *parent, <span class="type">dev_t</span> devt, <span class="type">void</span> *drvdata, <span class="type">const</span> <span class="type">char</span> *fmt, ...)</span></span><br><span class="line"><span class="comment">//删除设备 参数 classs 是要删除的设备所处的类，参数 devt 是要删除的设备号。</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">device_destroy</span><span class="params">(<span class="keyword">struct</span> class *class, <span class="type">dev_t</span> devt)</span></span><br></pre></td></tr></table></figure><h2 id="2-代码-1"><a href="#2-代码-1" class="headerlink" title="2.代码"></a>2.代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/fs.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kdev_t.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/cdev.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEVICE_NUM 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> API()   printk(KERN_INFO <span class="string">&quot;func:%s, is called \r\n&quot;</span>, __FUNCTION__ );</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> major = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> minor = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">cdev</span> <span class="title">cdev</span>;</span> </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">drv_open</span> <span class="params">(<span class="keyword">struct</span> inode * inode, <span class="keyword">struct</span> file * file)</span></span><br><span class="line">&#123;</span><br><span class="line">API();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设备号</span></span><br><span class="line"><span class="comment">//printk(KERN_INFO &quot;major=%d, minor=%d\r\n&quot;, MAJOR(inode-&gt;i_rdev), MINOR(inode-&gt;i_rdev));</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">drv_close</span> <span class="params">(<span class="keyword">struct</span> inode * inode, <span class="keyword">struct</span> file * file)</span></span><br><span class="line">&#123;</span><br><span class="line">API();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">ssize_t</span> <span class="title function_">drv_read</span> <span class="params">(<span class="keyword">struct</span> file * filp, <span class="type">char</span> __user * user_buffer, <span class="type">size_t</span> size, <span class="type">loff_t</span> * pPos)</span></span><br><span class="line">&#123;</span><br><span class="line">API();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">ssize_t</span> <span class="title function_">drv_write</span> <span class="params">(<span class="keyword">struct</span> file * filp, <span class="type">const</span> <span class="type">char</span> __user * user_buffer, <span class="type">size_t</span> size, <span class="type">loff_t</span> * pPos)</span></span><br><span class="line">&#123;</span><br><span class="line">API();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义了一个操作文件集</span></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">fops</span> =</span> &#123;</span><br><span class="line">.owner = THIS_MODULE,</span><br><span class="line">.read = drv_read,</span><br><span class="line">.write = drv_write,</span><br><span class="line">.open = drv_open,</span><br><span class="line">.release = drv_close,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> __init <span class="title function_">hello_init</span><span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="type">dev_t</span> dev;</span><br><span class="line"></span><br><span class="line">printk(<span class="string">&quot;-------------hello_init--------------\r\n&quot;</span>);</span><br><span class="line"><span class="comment">//申请设备号</span></span><br><span class="line"><span class="keyword">if</span> ( major )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//静态申请</span></span><br><span class="line">dev = MKDEV(major, minor);</span><br><span class="line">ret = register_chrdev_region(dev, DEVICE_NUM, <span class="string">&quot;hello_device&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment">/* 动态申请设备号 */</span></span><br><span class="line">ret = alloc_chrdev_region( &amp;dev, minor, DEVICE_NUM, <span class="string">&quot;hello_device2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( ret )</span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_ERR <span class="string">&quot;register chardev region error\r\n&quot;</span> );</span><br><span class="line"><span class="keyword">goto</span> err_register;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">major = MAJOR(dev); <span class="comment">/* 获取分配号的主设备号 */</span></span><br><span class="line">minor = MINOR(dev); <span class="comment">/* 获取分配号的次设备号 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//cdev 和操作方法集关联</span></span><br><span class="line">cdev_init(&amp;cdev, &amp;fops);</span><br><span class="line">cdev.owner = THIS_MODULE;</span><br><span class="line"><span class="comment">//cdev 和设备号及设备个数关联，并且 加载到内核</span></span><br><span class="line">ret = cdev_add(&amp;cdev, dev, DEVICE_NUM);</span><br><span class="line"><span class="keyword">if</span> ( ret &lt; <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_ERR <span class="string">&quot;cdev add error\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> err_add;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//读取设备树</span></span><br><span class="line"><span class="comment">//映射</span></span><br><span class="line"><span class="comment">//配置</span></span><br><span class="line"><span class="comment">//创建设备类</span></span><br><span class="line"><span class="comment">//创建设备节点</span></span><br><span class="line">printk(KERN_INFO <span class="string">&quot;major=%d, minor=%d\r\n&quot;</span>, major, minor);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">err_add:</span><br><span class="line"><span class="comment">//释放设备号</span></span><br><span class="line">unregister_chrdev_region(dev, DEVICE_NUM);</span><br><span class="line">err_register:</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __exit <span class="title function_">hello_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">dev_t</span> dev;</span><br><span class="line">printk(<span class="string">&quot;-------------hello_exit-------------\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">dev = MKDEV(major, minor);</span><br><span class="line"><span class="comment">//删除所有的设备节点</span></span><br><span class="line"><span class="comment">//删除设备类</span></span><br><span class="line"><span class="comment">//解除内存映射</span></span><br><span class="line"><span class="comment">//删除cdev</span></span><br><span class="line">cdev_del(&amp;cdev);</span><br><span class="line"><span class="comment">//释放设备号</span></span><br><span class="line">unregister_chrdev_region(dev, DEVICE_NUM);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module_init(hello_init);</span><br><span class="line">module_exit(hello_exit);</span><br><span class="line"></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);</span><br><span class="line">MODULE_AUTHOR(<span class="string">&quot;Ruth Wei &lt;weij_xa@hqyj.com&gt;&quot;</span>);</span><br><span class="line">MODULE_DESCRIPTION(<span class="string">&quot;this is test for useSymbol driver @bug1101&quot;</span>);</span><br><span class="line">MODULE_VERSION(<span class="string">&quot;1.0.0.1&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="3-驱动实验代码"><a href="#3-驱动实验代码" class="headerlink" title="3. 驱动实验代码"></a>3. 驱动实验代码</h2><p><strong>驱动程序</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">文件名 : newchrled.c</span></span><br><span class="line"><span class="comment">版本 : V1.0</span></span><br><span class="line"><span class="comment">描述 : ZYNQ LED 驱动文件。</span></span><br><span class="line"><span class="comment">其他 : LED管脚为PS MIO0 低电平点亮</span></span><br><span class="line"><span class="comment">日志 : 初版 V1.0 </span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/delay.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/ide.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/gpio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;asm/mach/map.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;asm/uaccess.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;asm/io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/cdev.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NEWCHRLED_CNT 1 <span class="comment">/* 设备号个数 */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NEWCHRLED_NAME <span class="string">&quot;newchrled&quot;</span> <span class="comment">/* 名字 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* GPIO 相关寄存器地址定义</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ZYNQ_GPIO_REG_BASE 0xE000A000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATA_OFFSET        0x00000040</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DIRM_OFFSET        0x00000204</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OUTEN_OFFSET       0x00000208</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INTDIS_OFFSET      0x00000214</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> APER_CLK_CTRL      0xF800012C</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 映射后的寄存器虚拟地址指针 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *data_addr;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *dirm_addr;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *outen_addr;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *intdis_addr;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __iomem *aper_clk_ctrl_addr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*newchrled 设备结构体 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">newchrled_dev</span> &#123;</span></span><br><span class="line"><span class="type">dev_t</span> devid; <span class="comment">/* 设备号 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cdev</span> <span class="title">cdev</span>;</span> <span class="comment">/* cdev */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="keyword">class</span> *<span class="keyword">class</span>;</span> <span class="comment">/* 类 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">device</span> *<span class="title">device</span>;</span> <span class="comment">/* 设备 */</span></span><br><span class="line"><span class="type">int</span> major; <span class="comment">/* 主设备号 */</span></span><br><span class="line"><span class="type">int</span> minor; <span class="comment">/* 次设备号 */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">newchrled_dev</span> <span class="title">newchrled</span>;</span> <span class="comment">/* led 设备 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @description : 打开设备</span></span><br><span class="line"><span class="comment">* @param – inode : 传递给驱动的 inode</span></span><br><span class="line"><span class="comment">* @param - filp : 设备文件， file 结构体有个叫做 private_data 的成员变量</span></span><br><span class="line"><span class="comment">* 一般在 open 的时候将 private_data 指向设备结构体。</span></span><br><span class="line"><span class="comment">* @return : 0 成功;其他 失败</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">led_open</span><span class="params">(<span class="keyword">struct</span> inode *inode, <span class="keyword">struct</span> file *filp)</span></span><br><span class="line">&#123;</span><br><span class="line">filp-&gt;private_data = &amp;newchrled; <span class="comment">/* 设置私有数据 */</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @description : 从设备读取数据</span></span><br><span class="line"><span class="comment">* @param - filp : 要打开的设备文件(文件描述符)</span></span><br><span class="line"><span class="comment">* @param - buf : 返回给用户空间的数据缓冲区</span></span><br><span class="line"><span class="comment">* @param - cnt : 要读取的数据长度</span></span><br><span class="line"><span class="comment">* @param - offt : 相对于文件首地址的偏移</span></span><br><span class="line"><span class="comment">* @return : 读取的字节数，如果为负值，表示读取失败</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">ssize_t</span> <span class="title function_">led_read</span><span class="params">(<span class="keyword">struct</span> file *filp, <span class="type">char</span> __user *buf,</span></span><br><span class="line"><span class="params"><span class="type">size_t</span> cnt, <span class="type">loff_t</span> *offt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @description : 向设备写数据</span></span><br><span class="line"><span class="comment">* @param - filp : 设备文件，表示打开的文件描述符</span></span><br><span class="line"><span class="comment">* @param - buf : 要写给设备写入的数据</span></span><br><span class="line"><span class="comment">* @param - cnt : 要写入的数据长度</span></span><br><span class="line"><span class="comment">* @param - offt : 相对于文件首地址的偏移</span></span><br><span class="line"><span class="comment">* @return : 写入的字节数，如果为负值，表示写入失败</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">ssize_t</span> <span class="title function_">led_write</span><span class="params">(<span class="keyword">struct</span> file *filp, <span class="type">const</span> <span class="type">char</span> __user *buf,</span></span><br><span class="line"><span class="params"><span class="type">size_t</span> cnt, <span class="type">loff_t</span> *offt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ret;</span><br><span class="line"><span class="type">int</span> val;</span><br><span class="line"><span class="type">char</span> kern_buf[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">ret = copy_from_user(kern_buf, buf, cnt); <span class="comment">// 得到应用层传递过来的数据</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &gt; ret) &#123;</span><br><span class="line">printk(KERN_ERR <span class="string">&quot;kernel write failed!\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> -EFAULT;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">val = readl(data_addr);</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == kern_buf[<span class="number">0</span>])</span><br><span class="line">val &amp;= ~(<span class="number">0x1</span>U); <span class="comment">// 如果传递过来的数据是 0 则点亮 led</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == kern_buf[<span class="number">0</span>])</span><br><span class="line">val |= (<span class="number">0x1</span>U);  <span class="comment">// 如果传递过来的数据是 1 则关闭 led</span></span><br><span class="line"></span><br><span class="line">writel(val, data_addr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* @description : 关闭/释放设备</span></span><br><span class="line"><span class="comment">* @param – filp : 要关闭的设备文件(文件描述符)</span></span><br><span class="line"><span class="comment">* @return : 0 成功;其他 失败</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">led_release</span><span class="params">(<span class="keyword">struct</span> inode *inode, <span class="keyword">struct</span> file *filp)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">led_ioremap</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">data_addr = ioremap(ZYNQ_GPIO_REG_BASE + DATA_OFFSET, <span class="number">4</span>);</span><br><span class="line">dirm_addr = ioremap(ZYNQ_GPIO_REG_BASE + DIRM_OFFSET, <span class="number">4</span>);</span><br><span class="line">outen_addr = ioremap(ZYNQ_GPIO_REG_BASE + OUTEN_OFFSET, <span class="number">4</span>);</span><br><span class="line">intdis_addr = ioremap(ZYNQ_GPIO_REG_BASE + INTDIS_OFFSET, <span class="number">4</span>);</span><br><span class="line">aper_clk_ctrl_addr = ioremap(APER_CLK_CTRL, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> <span class="title function_">led_iounmap</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">iounmap(data_addr);</span><br><span class="line">iounmap(dirm_addr);</span><br><span class="line">iounmap(outen_addr);</span><br><span class="line">iounmap(intdis_addr);</span><br><span class="line">iounmap(aper_clk_ctrl_addr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设备操作函数 */</span></span><br><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">newchrled_fops</span> =</span> &#123;</span><br><span class="line">.owner = THIS_MODULE,</span><br><span class="line">.open = led_open,</span><br><span class="line">.read = led_read,</span><br><span class="line">.write = led_write,</span><br><span class="line">.release = led_release,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> __init <span class="title function_">led_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 val;</span><br><span class="line"><span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 1.寄存器地址映射 */</span></span><br><span class="line">led_ioremap();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2.使能 GPIO 时钟 U表示无符号unsigned*/</span> </span><br><span class="line">val = readl(aper_clk_ctrl_addr);</span><br><span class="line">val |= (<span class="number">0x1</span>U &lt;&lt; <span class="number">22</span>);</span><br><span class="line">writel(val, aper_clk_ctrl_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 3.关闭中断功能 */</span></span><br><span class="line">val |= (<span class="number">0x1</span>U);</span><br><span class="line">writel(val, intdis_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 4.设置 GPIO 为输出功能 */</span></span><br><span class="line">val = readl(dirm_addr);</span><br><span class="line">val |= (<span class="number">0x1</span>U);</span><br><span class="line">writel(val, dirm_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 5.使能 GPIO 输出功能 */</span></span><br><span class="line">val = readl(outen_addr);</span><br><span class="line">val |= (<span class="number">0x1</span>U);</span><br><span class="line">writel(val, outen_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 6.默认关闭 LED  高电平1关闭*/</span></span><br><span class="line">val = readl(data_addr);</span><br><span class="line">val |= (<span class="number">0x1</span>U);</span><br><span class="line">writel(val, data_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 7.注册字符设备驱动 */</span></span><br><span class="line"><span class="comment">/* 创建设备号 */</span></span><br><span class="line"><span class="keyword">if</span> (newchrled.major) &#123;</span><br><span class="line">newchrled.devid = MKDEV(newchrled.major, <span class="number">0</span>);</span><br><span class="line">ret = register_chrdev_region(newchrled.devid, NEWCHRLED_CNT,NEWCHRLED_NAME);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line"><span class="keyword">goto</span> out1;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">ret = alloc_chrdev_region(&amp;newchrled.devid, <span class="number">0</span>, NEWCHRLED_CNT,NEWCHRLED_NAME);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line"><span class="keyword">goto</span> out1;</span><br><span class="line"></span><br><span class="line">newchrled.major = MAJOR(newchrled.devid);</span><br><span class="line">newchrled.minor = MINOR(newchrled.devid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">printk(<span class="string">&quot;newcheled major=%d,minor=%d\r\n&quot;</span>,newchrled.major,newchrled.minor);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 初始化 cdev */</span></span><br><span class="line">newchrled.cdev.owner = THIS_MODULE;</span><br><span class="line">cdev_init(&amp;newchrled.cdev, &amp;newchrled_fops);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 添加一个 cdev */</span></span><br><span class="line">ret = cdev_add(&amp;newchrled.cdev, newchrled.devid, NEWCHRLED_CNT);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line"><span class="keyword">goto</span> out2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 创建类 */</span></span><br><span class="line">newchrled.class = class_create(THIS_MODULE, NEWCHRLED_NAME);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(newchrled.class)) &#123;</span><br><span class="line">ret = PTR_ERR(newchrled.class);</span><br><span class="line"><span class="keyword">goto</span> out3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 创建设备 */</span></span><br><span class="line">newchrled.device = device_create(newchrled.class, <span class="literal">NULL</span>,</span><br><span class="line">newchrled.devid, <span class="literal">NULL</span>, NEWCHRLED_NAME);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(newchrled.device)) &#123;</span><br><span class="line">ret = PTR_ERR(newchrled.device);</span><br><span class="line"><span class="keyword">goto</span> out4;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">out4:</span><br><span class="line">class_destroy(newchrled.class);</span><br><span class="line"></span><br><span class="line">out3:</span><br><span class="line">cdev_del(&amp;newchrled.cdev);</span><br><span class="line"></span><br><span class="line">out2:</span><br><span class="line">unregister_chrdev_region(newchrled.devid, NEWCHRLED_CNT);</span><br><span class="line"></span><br><span class="line">out1:</span><br><span class="line">led_iounmap();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __exit <span class="title function_">led_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* 注销设备 */</span></span><br><span class="line">device_destroy(newchrled.class, newchrled.devid);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 注销类 */</span></span><br><span class="line">class_destroy(newchrled.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 删除 cdev */</span></span><br><span class="line">cdev_del(&amp;newchrled.cdev);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 注销设备号 */</span></span><br><span class="line">unregister_chrdev_region(newchrled.devid, NEWCHRLED_CNT);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 取消地址映射 */</span></span><br><span class="line">led_iounmap();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 驱动模块入口和出口函数注册 */</span></span><br><span class="line">module_init(led_init);</span><br><span class="line">module_exit(led_exit);</span><br><span class="line"></span><br><span class="line">MODULE_AUTHOR(<span class="string">&quot;OLDZHAI &lt;zfq0620@126.com&gt;&quot;</span>);</span><br><span class="line">MODULE_DESCRIPTION(<span class="string">&quot;Alientek ZYNQ GPIO LED Driver&quot;</span>);</span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>应用程序</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">文件名 : led-app.c</span></span><br><span class="line"><span class="comment">版本 : V1.0</span></span><br><span class="line"><span class="comment">描述 : LED 驱测试 APP。</span></span><br><span class="line"><span class="comment">其他 : 无</span></span><br><span class="line"><span class="comment">使用方法 : ./ledApp /dev/led 0 关闭 LED ./ledApp /dev/led 1 打开 LED</span></span><br><span class="line"><span class="comment">日志 : 初版 V1.0 </span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @description : main 主程序</span></span><br><span class="line"><span class="comment"> * @param - argc : argv 数组元素个数</span></span><br><span class="line"><span class="comment"> * @param - argv : 具体参数</span></span><br><span class="line"><span class="comment"> * @return : 0 成功;其他 失败</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> fd, ret;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buf[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="number">3</span> != argc) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Usage:\n&quot;</span></span><br><span class="line"><span class="string">&quot;\t./ledApp /dev/led 1 @ close LED\n&quot;</span></span><br><span class="line"><span class="string">&quot;\t./ledApp /dev/led 0 @ open LED\n&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 打开设备 */</span></span><br><span class="line">fd = open(argv[<span class="number">1</span>], O_RDWR);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &gt; fd) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;file %s open failed!\r\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 将字符串转换为 int 型数据 */</span></span><br><span class="line">buf[<span class="number">0</span>] = atoi(argv[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 向驱动写入数据 */</span></span><br><span class="line">ret = write(fd, buf, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span> &gt; ret)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;LED Control Failed!\r\n&quot;</span>);</span><br><span class="line">close(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 关闭设备 */</span></span><br><span class="line">close(fd);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>现在使用的是新字符设备的框架，旧的框架只是为了更好的理解字符设备驱动</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux驱动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux入门之驱动框架</title>
      <link href="/2021/07/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/1.%E9%A9%B1%E5%8A%A8/1.Linux%E5%85%A5%E9%97%A8%E4%B9%8B%E9%A9%B1%E5%8A%A8%E6%A1%86%E6%9E%B6/"/>
      <url>/2021/07/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/1.%E9%A9%B1%E5%8A%A8/1.Linux%E5%85%A5%E9%97%A8%E4%B9%8B%E9%A9%B1%E5%8A%A8%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="系列文章目录"><a href="#系列文章目录" class="headerlink" title="系列文章目录"></a>系列文章目录</h1><p><a href="https://b(https//blog.csdn.net/weixin_45631738/article/details/119146285">第一章 入门Linux入门之驱动框架</a></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><font color=#999AAA >本系列文件讲述Linux驱动部分的内容，我将自己学习的知识点进行归纳和总结</font></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="一、学习内容"><a href="#一、学习内容" class="headerlink" title="一、学习内容"></a>一、学习内容</h1><p>驱动学什么？像模块的开发、并发与竞争模型的理解、中断，以及定时器、字符设备驱动、块设备驱动、网络设备驱<br><img src="https://img-blog.csdnimg.cn/45d6184a18e84ccb860dfe747345026b.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="二、基本概念"><a href="#二、基本概念" class="headerlink" title="二、基本概念"></a>二、基本概念</h1><h2 id="1-什么是驱动"><a href="#1-什么是驱动" class="headerlink" title="1.什么是驱动"></a>1.什么是驱动</h2><p>驱动是内核的应用程序，让cpu认识硬件，给应用层提供一个文件名应用程序一般可以验证驱动的正确性。</p><h2 id="2-什么是模块"><a href="#2-什么是模块" class="headerlink" title="2.什么是模块"></a>2.什么是模块</h2><p>模块是独立功能的驱动程序，可以不编译进内核，但，它编译的时候，需要链接内核。<br>单独加载某个模块insmod，一旦加载了某个模块，该模块就和编译进内核是一样的使用。</p><h2 id="3-模块和应用程序区别"><a href="#3-模块和应用程序区别" class="headerlink" title="3.模块和应用程序区别"></a>3.模块和应用程序区别</h2><table><thead><tr><th></th><th>应用程序</th><th>模块</th></tr></thead><tbody><tr><td>入口</td><td>main</td><td>init_module &#x2F;&#x2F; module_init</td></tr><tr><td>出口</td><td>exit</td><td>cleanup_module &#x2F;&#x2F; module_exit</td></tr><tr><td>程序运行</td><td>.&#x2F;a.out</td><td>sudo insmod **.ko , sudo rmmod **</td></tr><tr><td>函数调用</td><td>c库</td><td>系统调用  内核函数</td></tr><tr><td>打印输出</td><td>printf</td><td>printk</td></tr></tbody></table><h1 id="三、基本开发"><a href="#三、基本开发" class="headerlink" title="三、基本开发"></a>三、基本开发</h1><h2 id="1-开发思路"><a href="#1-开发思路" class="headerlink" title="1.开发思路"></a>1.开发思路</h2><p>开始可以先将驱动代码编译好之后，使用命令进行加载，进行调试，调试无误后可以对内核代码进行修改，添加我们的驱动程序，然后再编译进内核，之后每次开机启动就可以自动加载了</p><h2 id="2-一个简单的驱动程序"><a href="#2-一个简单的驱动程序" class="headerlink" title="2.一个简单的驱动程序"></a>2.一个简单的驱动程序</h2><p><strong>hello.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 驱动入口函数 */</span> </span><br><span class="line"><span class="type">static</span> <span class="type">int</span> __init <span class="title function_">hello_init</span><span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_INFO <span class="string">&quot;-------------init--------------\r\n&quot;</span>);</span><br><span class="line"><span class="comment">/* 入口函数具体内容 */</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 驱动出口函数 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __exit <span class="title function_">hello_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* 出口函数具体内容 */</span> </span><br><span class="line">printk(KERN_INFO <span class="string">&quot;-------------exit-------------\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 将上面两个函数指定为驱动的入口和出口函数 */</span> </span><br><span class="line"><span class="comment">//hello_init hello_exit为函数名可自定义</span></span><br><span class="line">module_init(hello_init);</span><br><span class="line">module_exit(hello_exit);</span><br></pre></td></tr></table></figure><p><strong>Makefile</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ifeq ($(KERNELRELEASE),)</span><br><span class="line">KERNELDIR ?= /lib/modules/$(shell uname -r)/build  </span><br><span class="line">PWD := $(shell pwd)</span><br><span class="line">modules:</span><br><span class="line">$(MAKE) -C $(KERNELDIR) M=$(PWD) modules</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">obj-m := hello.o</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">rm -rf *.o *~ core .depend .*.cmd *.ko *.mod.c .tmp_versions Module* modules*</span><br></pre></td></tr></table></figure><p>Makefile说明</p><ol><li>uname -r查看内核板本号(可以在文件目录&#x2F;lib&#x2F;modules&#x2F; 查看)</li><li>进入源码根目录，执行里面的Makefile — KERNELRELEASE不为空</li><li>回到M&#x3D;??这个路径下，执行make modules</li><li>obj-m +&#x3D; hello.o (如果多个文件可全部写入 hello1.o hello2.o这里以hello驱动程序为例)</li></ol><h2 id="3-编译测试"><a href="#3-编译测试" class="headerlink" title="3.编译测试"></a>3.编译测试</h2><p>虚拟机为ubuntu14.04</p><p>在虚拟机里执行make命令编译驱动程序</p><blockquote><p>注意要在root模式下使用make编译，如果清除生成的文件可使用make clean，可以看到编译通过生成了hello.ko驱动软件</p></blockquote><p><img src="https://img-blog.csdnimg.cn/eef7518332e3442c82fbadff61738234.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>使用insmod命令加载驱动，可用lsmod查看(在&#x2F;proc&#x2F;modules&#x2F; 查找)，也可cat &#x2F;proc&#x2F;modules 命令<br><img src="https://img-blog.csdnimg.cn/350b8f02a4f54ed7bef555f1064d25c5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可用dmesg查看内核打印的信息，可以在加载模块之前使用dmesg -c命令将无用的内核打印的信息清除，便于我们查找我们模块的打印<br>加载驱动模块后，程序会自动执行module_init部分的代码。只执行一遍，类似于模块的初始化<br><img src="https://img-blog.csdnimg.cn/4152ffc352e84fbaaa0b664f1c10ba3b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>卸载模块使用使用rmmod命令，此时只输入文件名就可以了，不需要.ko，然后再使用lsmod命令找不到hello这个模块了，说明卸载成功了<br>使用dmesg命令可以看到打印，显示module_exit 部分的代码，所以卸载时才会执行此处的代码<br><img src="https://img-blog.csdnimg.cn/692130736fc645f092882a7701218c49.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="4-modprode加载"><a href="#4-modprode加载" class="headerlink" title="4.modprode加载"></a>4.modprode加载</h2><p>除了insmod命令可以加载模块，modprode命令也可以加载驱动模块</p><p>insmod 命令不能解决模块的依赖关系，比如 drv.ko 依赖 first.ko 这个模块，就必须先使用 insmod 命令加载 first.ko 这个模块，然后再加载 drv.ko 这个模块， 但是 modprobe 就不会存在这个问题。 modprobe 会分析模块的依赖关系，然后将所有依赖的模块都加载到内核中，因此 modprobe 命令相比 insmod 要智能一些</p><p>modprobe 命令主要智能在提供了模块的依赖性分析、错误检查、错误报告等功能，推荐使用 modprobe 命令来加载驱动。 modprobe 命令默认会去&#x2F;lib&#x2F;modules&#x2F;<kernel-version>目录中查找模块，比如虚拟机 Linux kernel 的版本号为 3.16.0-30-generi，因此 modprobe 命令默认会到&#x2F;lib&#x2F;modules&#x2F;3.16.0-30-generic 这个目录中查找相应的驱动模块，一般自己制作的根文件系统中是不会有这个目录的，所以需要自己手动创建。 </p><p>所以一开始加载的时候就出现下面的文件，找不到hello.ko文件<br><img src="https://img-blog.csdnimg.cn/48ba2bc345e1421f83b19f2037ad2f10.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>正确的方法：</strong></p><ul><li>将hello.ko 移动到 &#x2F;lib&#x2F;modules&#x2F;3.16.0-30-generic 目录下</li><li>用depmod 更新modules.dep文件，此文件是模块直接的关联关系所以必须更新</li><li>然后使用modprobe hello命令加载模块(这里不需要.ko)</li><li>然后就可以看到加载成功使用lsmod命令查看了</li><li>如何卸载则使用modprobe -r hello命令</li></ul><p><img src="https://img-blog.csdnimg.cn/70856cbe976f4274af2631b30eb4ec71.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>卸载成功找不到hello.ko</p><p><img src="https://img-blog.csdnimg.cn/6a07f14f91a24f2b86116ec04409d640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="四、模块传参"><a href="#四、模块传参" class="headerlink" title="四、模块传参"></a>四、模块传参</h1><p>在加载驱动程序的时候，给定义好的某个变量赋值</p><p>一般情况下，先定义全局变量， 接下来调用module_param**进行传参，最后MODULE_PARM_DESC进行描述，在编译好.ko文件后，modinfo查看到当前模块对应的参数</p><p>在加载驱动程序的时候，直接传参<br>例：insmod hello.ko  g_var&#x3D;4  name&#x3D;”zhangSan” array&#x3D;1,2,3,4<br>注意：传参时，’&#x3D;’左右两侧不能有空格</p><h2 id="1-代码部分"><a href="#1-代码部分" class="headerlink" title="1.代码部分"></a>1.代码部分</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/moduleparam.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> g_var = <span class="number">0</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> g_var_444 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">char</span> name[<span class="number">80</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="built_in">array</span>[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> arrayNum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">module_param_array(<span class="built_in">array</span>, <span class="type">int</span>, &amp;arrayNum, <span class="number">0</span>);</span><br><span class="line">MODULE_PARM_DESC(<span class="built_in">array</span>, <span class="string">&quot;Array of the number , array length is 10&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">module_param_string(name, name, <span class="number">80</span>, <span class="number">0400</span>);</span><br><span class="line">MODULE_PARM_DESC(name, <span class="string">&quot;this is device name , less than 80 characters&quot;</span>);</span><br><span class="line"></span><br><span class="line">module_param(g_var, <span class="type">int</span>, <span class="number">0</span>);</span><br><span class="line">MODULE_PARM_DESC(g_var, <span class="string">&quot;this is integer variable, between 0~100 &quot;</span>);</span><br><span class="line"></span><br><span class="line">module_param(g_var_444, <span class="type">int</span>, <span class="number">0444</span>);</span><br><span class="line">MODULE_PARM_DESC(g_var_444, <span class="string">&quot;this is integer variable, between 100~200 &quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> __init <span class="title function_">hello_init</span><span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">printk(KERN_INFO <span class="string">&quot;-------------init--------------g_var=%d, arrayNum=%d\r\n&quot;</span>, g_var, arrayNum);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; arrayNum; i++ )</span><br><span class="line">&#123;</span><br><span class="line">printk( KERN_INFO <span class="string">&quot;arr[%d] = %d\r\n&quot;</span>, i, <span class="built_in">array</span>[i] );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __exit <span class="title function_">hello</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_INFO <span class="string">&quot;-------------exit-------------name = %s\r\n&quot;</span>, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module_init(hello_init);</span><br><span class="line">module_exit(hehe);</span><br><span class="line"></span><br><span class="line"><span class="comment">//模块信息</span></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);</span><br><span class="line">MODULE_AUTHOR(<span class="string">&quot;Ruth Wei &lt;zfq0620@126.com&gt;&quot;</span>); <span class="comment">//作者</span></span><br><span class="line">MODULE_DESCRIPTION(<span class="string">&quot;this is test for hello driver&quot;</span>); <span class="comment">//描述</span></span><br><span class="line">MODULE_VERSION(<span class="string">&quot;1.0.0.1&quot;</span>); <span class="comment">//版本号</span></span><br></pre></td></tr></table></figure><h2 id="2-测试实例"><a href="#2-测试实例" class="headerlink" title="2.测试实例"></a>2.测试实例</h2><p>加载模块的时候传递参数<br><img src="https://img-blog.csdnimg.cn/cc3c59b7b1f348e3b4b14d0e3e95a763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>dmesg可以看到传入参数打印的结果<br><img src="https://img-blog.csdnimg.cn/6113c65e919144de971ef667b30bc3cd.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="五、导出符号"><a href="#五、导出符号" class="headerlink" title="五、导出符号"></a>五、导出符号</h1><h2 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h2><p>当前A模块定义了某些全局变量、函数，另外的B模块想要调用，那需要A模块将这些符号export导出</p><ol><li>编辑A模块的程序，导出符号：可以是全局变量，也可以是函数</li><li>编译A模块，生成Module_symvers</li><li>编辑B模块的程序，使用A模块导出的符号 &#x2F;&#x2F;记得声明哦</li><li>拷贝A模块的Module_symvers到B模块目录下</li><li>编译B模块</li><li>先加载A模块，再加载B模块</li><li>先卸载B模块，再卸载A模块(顺序反了无法卸载，提示模块正在使用)</li></ol><blockquote><p>经过验证：当A模块加载后，会把它导出的符号写入一个文件：&#x2F;proc&#x2F;kallsyms<br>在root权限下，cat &#x2F;proc&#x2F;kallsyms 会看到符号对应的虚拟地址</p></blockquote><h2 id="2-代码"><a href="#2-代码" class="headerlink" title="2.代码"></a>2.代码</h2><p><strong>A模块的程序 hello.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">static</span> <span class="type">int</span> num =<span class="number">5</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">show</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_INFO <span class="string">&quot;show(),num = %d\n&quot;</span>,num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">hello_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_INFO <span class="string">&quot;hello_init&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">hello_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_INFO <span class="string">&quot;hello_exit \n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EXPORT_SYMBOL_GPL(show);</span><br><span class="line">module_init(hello_init);</span><br><span class="line">module_exit(hello_exit);</span><br><span class="line"></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>B模块的程序 show.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">show</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">show_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_INFO <span class="string">&quot;show_init&quot;</span>);</span><br><span class="line">show();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">show_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">printk(KERN_INFO <span class="string">&quot;show_exit \n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">module_init(show_init);</span><br><span class="line">module_exit(show_exit);</span><br><span class="line"></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);</span><br></pre></td></tr></table></figure><p>导出了一个符号show<br><img src="https://img-blog.csdnimg.cn/a4c93ce72f344e1095621b4b95457c3f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>加载模块B可以查看到show打印的结果，打印出了num&#x3D;5<br><img src="https://img-blog.csdnimg.cn/0993c9834ff1466990b633ebed71dbdb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >此篇就是Linux的入门篇，简绍Linux的基本框架的写法，以及如何编译和执行</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux驱动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZYNQ7000系列入门之GPIO点灯</title>
      <link href="/2021/06/18/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ZYNQ7000/1.ZYNQ7000%E7%B3%BB%E5%88%97%E5%85%A5%E9%97%A8%E4%B9%8BGPIO%E7%82%B9%E7%81%AF/"/>
      <url>/2021/06/18/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ZYNQ7000/1.ZYNQ7000%E7%B3%BB%E5%88%97%E5%85%A5%E9%97%A8%E4%B9%8BGPIO%E7%82%B9%E7%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="ZYNQ-AC7020"><a href="#ZYNQ-AC7020" class="headerlink" title="ZYNQ AC7020"></a>ZYNQ AC7020</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>不管学习哪一个开发板，都是从点灯开始，就如同软件起源于hello world一样，这里我使用的是7000系列的AC7020的开发板，今天就说一下7000系列的GPIO的控制</p><blockquote><p>注意这里的GPIO分为三类，GPIOMIO&#x2F;EMIO&#x2F;AXI_GPIO</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210618153629731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="AC7020核心板"></p><h2 id="二-MIO和EMIO-AXI-GPIO"><a href="#二-MIO和EMIO-AXI-GPIO" class="headerlink" title="二.MIO和EMIO&#x2F;AXI_GPIO"></a>二.MIO和EMIO&#x2F;AXI_GPIO</h2><p>下图EMIO和MIO的结构，可以看到</p><ul><li>MIO总共有54个（0-53），</li><li>而EMIO总共有64个（54-117）</li></ul><p>其中MIO分布在BANK0，BANK1，而EMIO则分布在BANK2、BANK3。总的个数为118个GPIO，这118个GPIO都属于PS的资源</p><blockquote><p>Bank0:MI0[31:0]<br>Bank1:MI0[53:32]<br>Bank2:EMI0[31:0]<br>Bank3:EMI0[63:32]</p></blockquote><p><img src="https://img-blog.csdnimg.cn/2021061815411852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="1-MIO"><a href="#1-MIO" class="headerlink" title="1.MIO"></a>1.MIO</h3><p>首先、MIO在zynq上的管脚是固定的，如下图在vivado软件中可以对其进行配置，可以作为USB，SD卡，UART等等外设。</p><blockquote><p>注意：MIO不占用PL的资源，也不需要进行管脚的约束配置，上电后就可以进行加载使用</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210618154946192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-EMIO"><a href="#2-EMIO" class="headerlink" title="2.EMIO"></a>2.EMIO</h3><p>EMIO，是通过PL部分扩展的，所以使用EMIO时候需要在约束文件中分配管脚，所以设计EMIO的程序时，需要生成PL部分的bit文件，烧写到FPGA中</p><blockquote><p>注意：EMIO占用PL的资源</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210618160612869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210618160620663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-AXI-GPIO"><a href="#3-AXI-GPIO" class="headerlink" title="3.AXI_GPIO"></a>3.AXI_GPIO</h3><p>AXI_GPIO是通过AXI总线挂在PS上的GPIO上，AXI_GPIO相当于GPIO的IP核，我们调用时是占用相应AXI总线地址空间，如下图，占用地址为0x41200000和0x41210000<br><img src="https://img-blog.csdnimg.cn/20210618161810798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>注意</strong></p><blockquote><p>EMIO和IP方式在vivado都需要绑定管脚</p></blockquote><h2 id="三-开发板IO口"><a href="#三-开发板IO口" class="headerlink" title="三.开发板IO口"></a>三.开发板IO口</h2><p>再来看一下AC7020的用户可使用的IO口，3组34个IO总共112个</p><ul><li>PL的IO 94个</li><li>PS的IO 8个<br><img src="https://img-blog.csdnimg.cn/20210618162259345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210618162924167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210618162931110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210618162935140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><p>本章的实验是点亮开发板上的LED，先看一LED的电路</p><p><strong>PS LED接到了MIO0</strong></p><p><img src="https://img-blog.csdnimg.cn/20210618163535664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>PL端的LED是接到R19的 （IO_0_34）</strong><br><img src="https://img-blog.csdnimg.cn/2021061816354043.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-裸机开发点灯"><a href="#四-裸机开发点灯" class="headerlink" title="四.裸机开发点灯"></a>四.裸机开发点灯</h2><p>这里控制IO可以直接使用 xgpiops.h库函数，注意PL端需要进行管脚约束</p><h3 id="1-代码部分"><a href="#1-代码部分" class="headerlink" title="1.代码部分"></a>1.代码部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;xil_printf.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;xgpiops.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sleep.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//MIO共有54个，编号从0-53，所以54即是第一个EMIO口</span></span><br><span class="line"><span class="comment">//此宏定义对应于MIO led的编号</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> led1    0  <span class="comment">//电源指示灯</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> led2    54  <span class="comment">//</span></span></span><br><span class="line">XGpioPs gpio_mio;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">MIO_Config</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">XGpioPs_Config *gpioPtr;</span><br><span class="line"><span class="type">int</span> status;</span><br><span class="line"><span class="comment">//每个外设都有一个ID，GPIO的ID在xparameters.h中定义</span></span><br><span class="line">gpioPtr = XGpioPs_LookupConfig(XPAR_PS7_GPIO_0_DEVICE_ID);</span><br><span class="line">status = XGpioPs_CfgInitialize(&amp;gpio_mio, gpioPtr, gpioPtr-&gt;BaseAddr);</span><br><span class="line"><span class="keyword">if</span>(status != XST_SUCCESS)</span><br><span class="line">&#123;</span><br><span class="line">xil_printf(<span class="string">&quot;can&#x27;t config gpio\n\r&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> XST_FAILURE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置led1为输出模式</span></span><br><span class="line">XGpioPs_SetDirectionPin(&amp;gpio_mio, led1, <span class="number">1</span>);</span><br><span class="line">XGpioPs_SetDirectionPin(&amp;gpio_mio, led2, <span class="number">1</span>);</span><br><span class="line"><span class="comment">//输出使能</span></span><br><span class="line">XGpioPs_SetOutputEnablePin(&amp;gpio_mio, led1, <span class="number">1</span>);</span><br><span class="line">XGpioPs_SetOutputEnablePin(&amp;gpio_mio, led2, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置输入模式</span></span><br><span class="line"><span class="comment">//XGpioPs_SetDirectionPin(&amp;gpio_mio, key, 0);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> XST_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写gpio</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">MIO_LED</span><span class="params">(<span class="type">int</span> led, <span class="type">int</span> status)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//写GPIO的输出值</span></span><br><span class="line">XGpioPs_WritePin(&amp;gpio_mio, led, status);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读gpio</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">MIO_KEY</span><span class="params">( <span class="type">int</span> key1 )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//读GPIO的值</span></span><br><span class="line"><span class="type">int</span> value = XGpioPs_ReadPin(&amp;gpio_mio, key1);</span><br><span class="line"><span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    print(<span class="string">&quot;====led test====\n\r&quot;</span>);</span><br><span class="line">    MIO_Config();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    MIO_LED(led1, <span class="number">0</span>);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    MIO_LED(led1, <span class="number">1</span>);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    MIO_LED(led2, <span class="number">0</span>);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    MIO_LED(led2, <span class="number">1</span>);</span><br><span class="line">    sleep(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-测试"><a href="#2-测试" class="headerlink" title="2.测试"></a>2.测试</h3><p>先用SDK添加fsbl生成fsbl.elf文件，然后vivado工程生成bit文件，再用上面代码编译生成led.elf文件三者合成为BOOT.bin文件，放到sd卡，选择sd卡启动就可以看到LED1和lLED2交替闪烁</p><h2 id="五-linux系统GPIO控制"><a href="#五-linux系统GPIO控制" class="headerlink" title="五.linux系统GPIO控制"></a>五.linux系统GPIO控制</h2><p>这里在vivado工程中对GPIO0约束了16个管脚，对GPIO1也约束了16个管脚，配置好linux系统启动文件，进入系统中我们可以在 &#x2F;sys&#x2F;class&#x2F;gpio 目录下看到 3个gpio片 874，890，906<br><img src="https://img-blog.csdnimg.cn/20210618165905412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如何进行对应那，首先gpio号最多能够表示1024个，前面说到PS端MIO有54，EMIO64总共118个</p><ul><li>PS端GPIO 906-1024</li><li>AX_GPIO0对应 16个约束管脚 890-905</li><li>AX_GPIO1对应 16个约束管脚 874-889</li></ul><p>所以MIO0对应的控制号为GPIO906，MIO1就为907，EMIO约束的第一个GPIO号为GPIO890，第一个就为GPIO891</p><blockquote><p>注意：EMIO最多可约束64个，ax_gpio0 32个，ax_gpio1 32个</p></blockquote><p>这里对控制等的程序不做说明，知道gpio号后，linux下应该层控制gpio方法都是一样的，之前文章有做说明。</p><h2 id="六-总结"><a href="#六-总结" class="headerlink" title="六.总结"></a>六.总结</h2><p>这里只是粗略的说明了一下ZYNQ7000系列GPIO在裸机和ubuntu系统下的控制，具体的操作流程没用进行说明</p>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> ZYNQ7000 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC之Tab Control标签控件</title>
      <link href="/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/8.MFC%E4%B9%8BTab%20Control%E6%A0%87%E7%AD%BE%E6%8E%A7%E4%BB%B6/"/>
      <url>/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/8.MFC%E4%B9%8BTab%20Control%E6%A0%87%E7%AD%BE%E6%8E%A7%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>这篇说一下Tab Control标签控件，我们以实际的例子进行说明，实现的功能就是点击不同的标签来切换到不同的画面</p><h2 id="二-操作"><a href="#二-操作" class="headerlink" title="二.操作"></a>二.操作</h2><ol><li>在窗口界面上鼠标右键标签控件，选择添加变量 m_tab，</li><li>定义操作各界面的类变量，这里我们添加3个标签页，3个标签页对应三个窗口界面，注意添加个界面头文件（在含有标签页窗口的.h文件中）</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CT1Dlg m_1Dlg;       <span class="comment">//界面1</span></span><br><span class="line">CT2Dlg m_2Dlg;       <span class="comment">//界面2</span></span><br><span class="line">CT3Dlg m_3Dlg;       <span class="comment">//界面3</span></span><br></pre></td></tr></table></figure><ol start="3"><li>设置表头 在OnInitDialog()初始化函数中人添加如下代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">CRect tabRect;   <span class="comment">// 标签控件客户区的位置和大小   </span></span><br><span class="line">m_tab.InsertItem(<span class="number">0</span>, _T(<span class="string">&quot;标签1&quot;</span>));  <span class="comment">//插入第一个标签</span></span><br><span class="line">m_tab.InsertItem(<span class="number">1</span>, _T(<span class="string">&quot;标签2&quot;</span>));  <span class="comment">//插入第二个标签</span></span><br><span class="line">m_tab.InsertItem(<span class="number">2</span>, _T(<span class="string">&quot;标签3&quot;</span>));  <span class="comment">//插入第三个标签</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// IDD_T1_DIALOG，IDD_T2_DIALOG，IDD_T3_DIALOG为三个窗口的ID </span></span><br><span class="line">m_1Dlg.Create(IDD_T1_DIALOG, &amp;m_tab); <span class="comment">//创建标签第一个标签页</span></span><br><span class="line">m_2Dlg.Create(IDD_T2_DIALOG, &amp;m_tab);  <span class="comment">// 创建第二个标签页   </span></span><br><span class="line">m_3Dlg.Create(IDD_T3_DIALOG, &amp;m_tab);   <span class="comment">// 创建第三个标签页   </span></span><br><span class="line"></span><br><span class="line">m_tab.GetClientRect(&amp;tabRect);    <span class="comment">// 获取标签控件客户区Rect   </span></span><br><span class="line"><span class="comment">// 调整tabRect，使其覆盖范围适合放置标签页   </span></span><br><span class="line">tabRect.left += <span class="number">1</span>;</span><br><span class="line">tabRect.right -= <span class="number">1</span>;</span><br><span class="line">tabRect.top += <span class="number">25</span>;</span><br><span class="line">tabRect.bottom -= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据调整好的tabRect放置m_1Dlg子对话框，并设置显示  </span></span><br><span class="line">m_1Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_SHOWWINDOW);</span><br><span class="line"><span class="comment">// 根据调整好的tabRect放置m_2Dlg子对话框，并设置为隐藏 </span></span><br><span class="line">m_2Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_HIDEWINDOW);</span><br><span class="line"><span class="comment">// 根据调整好的tabRect放置m_3Dlg子对话框，并设置为隐藏 </span></span><br><span class="line">m_3Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_HIDEWINDOW);</span><br></pre></td></tr></table></figure><ol start="4"><li>添加标签控件的回调函数，鼠标左键双击标签控件，在回调函数中添加如下代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">CEmptyDlg::OnTcnSelchangeTab1</span><span class="params">(NMHDR *pNMHDR, LRESULT *pResult)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">*pResult = <span class="number">0</span>;</span><br><span class="line">CRect tabRect;    <span class="comment">// 标签控件客户区的Rect   </span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// 获取标签控件客户区Rect，并对其调整，以适合放置标签页   </span></span><br><span class="line">m_tab.GetClientRect(&amp;tabRect);</span><br><span class="line">tabRect.left += <span class="number">1</span>;</span><br><span class="line">tabRect.right -= <span class="number">1</span>;</span><br><span class="line">tabRect.top += <span class="number">25</span>;</span><br><span class="line">tabRect.bottom -= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> ( m_tab.GetCurSel() )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 显示m_1Dlg，隐藏其他</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">m_1Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_SHOWWINDOW);</span><br><span class="line">m_2Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_HIDEWINDOW);</span><br><span class="line">m_3Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_HIDEWINDOW);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">// 显示m_2Dlg，隐藏其他</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">m_1Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_HIDEWINDOW);</span><br><span class="line">m_2Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_SHOWWINDOW);</span><br><span class="line">m_3Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_HIDEWINDOW);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//显示m_3Dlg，隐藏其他</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">m_1Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_HIDEWINDOW);</span><br><span class="line">m_2Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_HIDEWINDOW);</span><br><span class="line">m_3Dlg.SetWindowPos(<span class="literal">NULL</span>, tabRect.left, tabRect.top, tabRect.Width(), tabRect.Height(), SWP_SHOWWINDOW);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 界面开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STC89C51驱动0.96寸oled避坑教程（I2C）</title>
      <link href="/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STC89C51/1.STC89C51%E9%A9%B1%E5%8A%A80.96%E5%AF%B8oled%E9%81%BF%E5%9D%91%E6%95%99%E7%A8%8B%EF%BC%88I2C%EF%BC%89/"/>
      <url>/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STC89C51/1.STC89C51%E9%A9%B1%E5%8A%A80.96%E5%AF%B8oled%E9%81%BF%E5%9D%91%E6%95%99%E7%A8%8B%EF%BC%88I2C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="51单片机"><a href="#51单片机" class="headerlink" title="51单片机"></a>51单片机</h1><h2 id="一-前言"><a href="#一-前言" class="headerlink" title="一.前言"></a>一.前言</h2><p>说起51，可以说是老古董了，刚开始接触单片机就是从51开始，今天就来用51单片机驱动oled显示屏，oled显示屏采用i2c的接口，因为51的代码看起来更容易理解，在移植到其他平台就可以参考这个代码来写了。顺便也将驱动过程中遇到的坑分享给大家<br><img src="https://img-blog.csdnimg.cn/20210205205554138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-连接方式"><a href="#二-连接方式" class="headerlink" title="二.连接方式"></a>二.连接方式</h2><p>oled和单片机连接如下表所示，管脚定义可以任意选用gpio口，因为写的是软件I2C，所以需要改其他管脚的可以在oled.h文件当中修改</p><table><thead><tr><th>51单片机</th><th>OLED</th></tr></thead><tbody><tr><td>VCC</td><td>VCC(5V)</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>P1^0</td><td>CLK</td></tr><tr><td>P1^1</td><td>DATA</td></tr></tbody></table><h2 id="三-工程代码"><a href="#三-工程代码" class="headerlink" title="三.工程代码"></a>三.工程代码</h2><blockquote><p>先放上代码的连接<br><a href="https://gitee.com/oldzhai/stc89c51/tree/master/oled_i2c">1.gitee 代码</a><br><a href="https://wwi.lanzous.com/iRwqRld2jrc">2.项目下载</a></p></blockquote><p><strong>oled.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span>   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED的显存</span></span><br><span class="line"><span class="comment">//存放格式如下.</span></span><br><span class="line"><span class="comment">//[0]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[1]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[2]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[3]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[4]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[5]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[6]0 1 2 3 ... 127</span></span><br><span class="line"><span class="comment">//[7]0 1 2 3 ... 127   </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************Delay****************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_50ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_50ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> m;</span><br><span class="line"><span class="keyword">for</span>(;Del_50ms&gt;<span class="number">0</span>;Del_50ms--)</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">6245</span>;m&gt;<span class="number">0</span>;m--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_1ms</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> Del_1ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j;</span><br><span class="line"><span class="keyword">while</span>(Del_1ms--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">123</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">//IIC Start</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_SCLK_Set() ;</span><br><span class="line">OLED_SDIN_Set();</span><br><span class="line">OLED_SDIN_Clr();</span><br><span class="line">OLED_SCLK_Clr();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">//IIC Stop</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Stop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_SCLK_Set() ;</span><br><span class="line">OLED_SDIN_Clr();</span><br><span class="line">OLED_SDIN_Set();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IIC_Wait_Ack</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_SCLK_Set() ;</span><br><span class="line">OLED_SCLK_Clr();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write byte</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Byte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Byte)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> m,da;</span><br><span class="line">da=IIC_Byte;</span><br><span class="line">OLED_SCLK_Clr();</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">m=da;</span><br><span class="line"><span class="comment">//OLED_SCLK_Clr();</span></span><br><span class="line">m=m&amp;<span class="number">0x80</span>;</span><br><span class="line"><span class="keyword">if</span>(m==<span class="number">0x80</span>)</span><br><span class="line">&#123;OLED_SDIN_Set();&#125;</span><br><span class="line"><span class="keyword">else</span> OLED_SDIN_Clr();</span><br><span class="line">da=da&lt;&lt;<span class="number">1</span>;</span><br><span class="line">OLED_SCLK_Set();</span><br><span class="line">OLED_SCLK_Clr();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Command</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Command</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Command)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_Start();</span><br><span class="line">   Write_IIC_Byte(<span class="number">0x78</span>);            <span class="comment">//Slave address,SA0=0</span></span><br><span class="line">IIC_Wait_Ack();</span><br><span class="line">   Write_IIC_Byte(<span class="number">0x00</span>);<span class="comment">//write command</span></span><br><span class="line">IIC_Wait_Ack();</span><br><span class="line">   Write_IIC_Byte(IIC_Command); </span><br><span class="line">IIC_Wait_Ack();</span><br><span class="line">   IIC_Stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">// IIC Write Data</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_IIC_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> IIC_Data)</span></span><br><span class="line">&#123;</span><br><span class="line">   IIC_Start();</span><br><span class="line">   Write_IIC_Byte(<span class="number">0x78</span>);<span class="comment">//D/C#=0; R/W#=0</span></span><br><span class="line"> IIC_Wait_Ack();</span><br><span class="line">   Write_IIC_Byte(<span class="number">0x40</span>);<span class="comment">//write data</span></span><br><span class="line"> IIC_Wait_Ack();</span><br><span class="line">   Write_IIC_Byte(IIC_Data);</span><br><span class="line"> IIC_Wait_Ack();</span><br><span class="line">   IIC_Stop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(<span class="type">unsigned</span> dat,<span class="type">unsigned</span> cmd)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cmd)</span><br><span class="line">&#123;</span><br><span class="line">Write_IIC_Data(dat);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">Write_IIC_Command(dat);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************</span></span><br><span class="line"><span class="comment">// fill_Picture</span></span><br><span class="line"><span class="comment">********************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_picture</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> fill_Data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> m,n;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xb0</span>+m,<span class="number">0</span>);<span class="comment">//page0-page1</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,<span class="number">0</span>);<span class="comment">//low column start address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,<span class="number">0</span>);<span class="comment">//high column start address</span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(fill_Data,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//坐标设置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x, <span class="type">unsigned</span> <span class="type">char</span> y)</span> </span><br><span class="line">&#123; OLED_WR_Byte(<span class="number">0xb0</span>+y,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(((x&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>)|<span class="number">0x10</span>,OLED_CMD);</span><br><span class="line">OLED_WR_Byte((x&amp;<span class="number">0x0f</span>),OLED_CMD); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//开启OLED显示    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X14</span>,OLED_CMD);  <span class="comment">//DCDC ON</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAF</span>,OLED_CMD);  <span class="comment">//DISPLAY ON</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭OLED显示     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0X10</span>,OLED_CMD);  <span class="comment">//DCDC OFF</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0XAE</span>,OLED_CMD);  <span class="comment">//DISPLAY OFF</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">0</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_On</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">u8 i,n;    </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">1</span>,OLED_DATA); </span><br><span class="line">&#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//mode:0,反白显示;1,正常显示 </span></span><br><span class="line"><span class="comment">//size:选择字体 16/12 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 Char_Size)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> c=<span class="number">0</span>,i=<span class="number">0</span>;</span><br><span class="line">c=chr-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值</span></span><br><span class="line"><span class="keyword">if</span>(x&gt;Max_Column<span class="number">-1</span>)&#123;x=<span class="number">0</span>;y=y+<span class="number">2</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(Char_Size ==<span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i],OLED_DATA);</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">OLED_WR_Byte(F8X16[c*<span class="number">16</span>+i+<span class="number">8</span>],OLED_DATA);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">OLED_WR_Byte(F6x8[c][i],OLED_DATA);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line">u32 <span class="title function_">oled_pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>; </span><br><span class="line"><span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示2个数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标 </span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:模式0,填充模式;1,叠加模式</span></span><br><span class="line"><span class="comment">//num:数值(0~4294967295);   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size2)</span></span><br><span class="line">&#123;         </span><br><span class="line">u8 t,temp;</span><br><span class="line">u8 enshow=<span class="number">0</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/oled_pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,<span class="string">&#x27; &#x27;</span>,size2);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> enshow=<span class="number">1</span>; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"> OLED_ShowChar(x+(size2/<span class="number">2</span>)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size2); </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//显示一个字符号串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 Char_Size)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;OLED_ShowChar(x,y,chr[j],Char_Size);</span><br><span class="line">x+=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;<span class="number">120</span>)&#123;x=<span class="number">0</span>;y+=<span class="number">2</span>;&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowCHinese</span><span class="params">(u8 x,u8 y,u8 no)</span></span><br><span class="line">&#123;          </span><br><span class="line">u8 t,adder=<span class="number">0</span>;</span><br><span class="line">OLED_Set_Pos(x,y);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(Hzk[<span class="number">2</span>*no][t],OLED_DATA);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">OLED_Set_Pos(x,y+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">16</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(Hzk[<span class="number">2</span>*no+<span class="number">1</span>][t],OLED_DATA);</span><br><span class="line">adder+=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7*****************/</span></span><br><span class="line"><span class="comment">//和之前显示图片的参数不同</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> x0, <span class="type">unsigned</span> <span class="type">char</span> y0,<span class="type">unsigned</span> <span class="type">char</span> x1, <span class="type">unsigned</span> <span class="type">char</span> y1,<span class="type">unsigned</span> <span class="type">char</span> BMP[])</span></span><br><span class="line">&#123; </span><br><span class="line"> <span class="type">unsigned</span> <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line"> <span class="type">unsigned</span> <span class="type">char</span> x,y;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(y1%<span class="number">8</span>==<span class="number">0</span>) y=y1/<span class="number">8</span>;      </span><br><span class="line">  <span class="keyword">else</span> y=y1/<span class="number">8</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(y=y0;y&lt;y1;y++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_Set_Pos(x0,y);</span><br><span class="line">    <span class="keyword">for</span>(x=x0;x&lt;x1;x++)</span><br><span class="line">    &#123;      </span><br><span class="line">    OLED_WR_Byte(BMP[j++],OLED_DATA);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化SSD1306    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line"> </span><br><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--display off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//---set low column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//---set high column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//--set start line address  </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xB0</span>,OLED_CMD);<span class="comment">//--set page address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD); <span class="comment">// contract control</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xFF</span>,OLED_CMD);<span class="comment">//--128   </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);<span class="comment">//set segment remap </span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//--normal / reverse</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD);<span class="comment">//--set multiplex ratio(1 to 64)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x3F</span>,OLED_CMD);<span class="comment">//--1/32 duty</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//Com scan direction</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD);<span class="comment">//-set display offset</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD5</span>,OLED_CMD);<span class="comment">//set osc division</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x80</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD8</span>,OLED_CMD);<span class="comment">//set area color mode off</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x05</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD);<span class="comment">//Set Pre-Charge Period</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xF1</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD);<span class="comment">//set com pin configuartion</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD);<span class="comment">//set Vcomh</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x30</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//set charge pump enable</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//--turn on oled panel</span></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="四-避坑环节"><a href="#四-避坑环节" class="headerlink" title="四.避坑环节"></a>四.避坑环节</h2><p>遇到的坑无非就是编译的问题，因为51的内部rom比较小，而oled驱动显示，字符和图片啥的都是取的模，定义的全局变量，所以编译出来的hex超过了rom的容量就报错，无法产生hex文件</p><blockquote><p>51单片机仅有128 Byte内部RAM<br>52单片机有256 Byte内部RAM</p></blockquote><p><strong>解决办法</strong></p><ul><li>将数据保存到外部ROM当中，在keil5中如下设置（当然keil4也是一样的）<br><img src="https://img-blog.csdnimg.cn/20210205211153945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>在取模汉字或者图片数组前面加 code</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//汉字取模</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Hzk[][<span class="number">32</span>]=&#123;</span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0xBF</span>,<span class="number">0x64</span>,<span class="number">0x24</span>,<span class="number">0x34</span>,<span class="number">0x28</span>,<span class="number">0x24</span>,<span class="number">0x22</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x3F</span>,<span class="number">0x45</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x42</span>,<span class="number">0x42</span>,<span class="number">0x42</span>,<span class="number">0x41</span>,<span class="number">0x78</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;老&quot;,0*/</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x22</span>,<span class="number">0x26</span>,<span class="number">0x1A</span>,<span class="number">0x92</span>,<span class="number">0x02</span>,<span class="number">0x7E</span>,<span class="number">0x80</span>,<span class="number">0x22</span>,<span class="number">0x26</span>,<span class="number">0x1A</span>,<span class="number">0x12</span>,<span class="number">0x02</span>,<span class="number">0x7E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0xFF</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x7F</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x41</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;翟&quot;,1*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> STC89C51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC之编辑框和静态文本框</title>
      <link href="/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/7.MFC%E4%B9%8B%E7%BC%96%E8%BE%91%E6%A1%86%E5%92%8C%E9%9D%99%E6%80%81%E6%96%87%E6%9C%AC%E6%A1%86/"/>
      <url>/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/7.MFC%E4%B9%8B%E7%BC%96%E8%BE%91%E6%A1%86%E5%92%8C%E9%9D%99%E6%80%81%E6%96%87%E6%9C%AC%E6%A1%86/</url>
      
        <content type="html"><![CDATA[<h1 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h1><h2 id="一-编辑框Edit-Control"><a href="#一-编辑框Edit-Control" class="headerlink" title="一.编辑框Edit Control"></a>一.编辑框Edit Control</h2><p>编辑框有两种状态，一个是用户可输入操作，一个是只能读，可在组件属性中找到Read Only 设置为TRUE则只能读用户无法操作</p><h3 id="1-编辑框显示"><a href="#1-编辑框显示" class="headerlink" title="1.编辑框显示"></a>1.编辑框显示</h3><p>操作控件的两种方式前面说过了，后面都是以变量的方式进行操作<br><code>CEdit m_edit</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edit.SetWindowText(_T(<span class="string">&quot;编辑框&quot;</span>)); <span class="comment">//参数为CString 类型</span></span><br></pre></td></tr></table></figure><h3 id="2-获取编辑框内容"><a href="#2-获取编辑框内容" class="headerlink" title="2.获取编辑框内容"></a>2.获取编辑框内容</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CString edit_path;</span><br><span class="line">edit.GetWindowText( edit_path );</span><br></pre></td></tr></table></figure><h3 id="3-内容更新"><a href="#3-内容更新" class="headerlink" title="3.内容更新"></a>3.内容更新</h3><p>控件的内容更新到变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UpdateData(TRUE); </span><br></pre></td></tr></table></figure><p>变量的内容更新到控件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UpdateData(FALSE); </span><br></pre></td></tr></table></figure><h2 id="二-静态文本框-Static-Text"><a href="#二-静态文本框-Static-Text" class="headerlink" title="二.静态文本框 Static Text"></a>二.静态文本框 Static Text</h2><p>静态文本框就是简单的显示文本内容，可以在属性中设置显示的内容，静态文本框无法创建成员变量，就用句柄来操作</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetDlgItem(IDC_STATIC)-&gt;SetWindowText(<span class="string">&quot;静态文本框&quot;</span>); <span class="comment">//IDC_STATIC静态文本框ID</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 界面开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC之Button按键控件</title>
      <link href="/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/6.MFC%E4%B9%8BButton%E6%8C%89%E9%94%AE%E6%8E%A7%E4%BB%B6/"/>
      <url>/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/6.MFC%E4%B9%8BButton%E6%8C%89%E9%94%AE%E6%8E%A7%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h1><h2 id="一-操作控件的方式"><a href="#一-操作控件的方式" class="headerlink" title="一.操作控件的方式"></a>一.操作控件的方式</h2><h3 id="1-获取控件的句柄操作"><a href="#1-获取控件的句柄操作" class="headerlink" title="1.获取控件的句柄操作"></a>1.获取控件的句柄操作</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetDlgItem(IDC_BUTTON); <span class="comment">//IDC_BUTTON 控件的ID</span></span><br></pre></td></tr></table></figure><h3 id="2-设置变量控制"><a href="#2-设置变量控制" class="headerlink" title="2.设置变量控制"></a>2.设置变量控制</h3><p>可直接右键点击控件，选择添加变量，完成后就会在文件中自己生成相应的代码<br>在类当中会声明成员变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CButton m_btn1;</span><br></pre></td></tr></table></figure><p>在cpp文件中会添加ID的对应关系</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">CinterfaceDlg::DoDataExchange</span><span class="params">(CDataExchange* pDX)</span></span><br><span class="line">&#123;</span><br><span class="line">CDialogEx::DoDataExchange(pDX);</span><br><span class="line">DDX_Control(pDX, IDC_BUTTON, m_btn1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后面就可以进行操作了</p><h2 id="二-按键的各操作"><a href="#二-按键的各操作" class="headerlink" title="二.按键的各操作"></a>二.按键的各操作</h2><p><img src="https://img-blog.csdnimg.cn/20210128115014662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="1-设置按键文字"><a href="#1-设置按键文字" class="headerlink" title="1.设置按键文字"></a>1.设置按键文字</h3><ul><li><p>可以右键按键，在属性中找到 Caption，输入按键上要显示的内容就可以了</p><blockquote><p>有时候显示出来是好多？问号，需要在将整个窗口界面的语言设置为中午简体(在资源视图Dialog下找到含按键的视图，右键属性最后一项进行设置)</p></blockquote></li><li><p>用下面代码进行设置</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m_btn1.SetWindowText(<span class="string">&quot;按键&quot;</span>);</span><br><span class="line">GetDlgItem(IDC_BUTTON)-&gt;SetWindowText(<span class="string">&quot;按键&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-设置大小和位置"><a href="#2-设置大小和位置" class="headerlink" title="2.设置大小和位置"></a>2.设置大小和位置</h3><p>设置大小和位置可以用鼠标在窗口界面拖拉的方式操作，也可以通过下面函数操作</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m_btn.SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>, SWP_SHOWWINDW);</span><br><span class="line">GetDlgItem(IDC_BUTTON)-&gt;SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>, SWP_SHOWWINDW);</span><br></pre></td></tr></table></figure><p>SetWindowPos函数之前有说过，2,3参数设置位置，4,5参数设置大小 SetWindowPos函数也可以操作</p><blockquote><p>不明白可以看这篇：<a href="https://blog.csdn.net/weixin_45631738/article/details/113057786">MFC组件大小设置</a></p></blockquote><h3 id="3-设置按键使能"><a href="#3-设置按键使能" class="headerlink" title="3.设置按键使能"></a>3.设置按键使能</h3><p>可以控制按键可不可以被按下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不能按下</span></span><br><span class="line">m_btn1.EnableWindow(FALSE);</span><br><span class="line">GetDlgItem(IDC_BUTTON)-&gt;EnableWindow(FALSE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以进行操作</span></span><br><span class="line">m_btn1.EnableWindow(TRUE);</span><br><span class="line">GetDlgItem(IDC_BUTTON)-&gt;EnableWindow(TRUE);</span><br></pre></td></tr></table></figure><h3 id="4-按键回调函数"><a href="#4-按键回调函数" class="headerlink" title="4.按键回调函数"></a>4.按键回调函数</h3><p>在界面视图中，左键双击按键，就会生成相应的按键回调函数，当软件运行按键被按下就会执行回调函数<br>具体生成了如下代码</p><ul><li>在窗口类中添加了成员函数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">public:</span><br><span class="line">afx_msg <span class="type">void</span> <span class="title function_">OnBnClickedButton</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><ul><li>在cpp文件中创建消息映射</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BEGIN_MESSAGE_MAP(CinterfaceDlg, CDialogEx</span><br><span class="line">ON_BN_CLICKED(IDC_BUTTON, &amp;CinterfaceDlg::OnBnClickedButton)</span><br><span class="line">END_MESSAGE_MAP()</span><br></pre></td></tr></table></figure><ul><li>cpp中添加回调函数的实现</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">CinterfaceDlg::OnBnClickedButton</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加控件通知处理程序代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 界面开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC新建工程基本配置</title>
      <link href="/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/5.MFC%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/01/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/5.MFC%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h1><h2 id="一-新建工程"><a href="#一-新建工程" class="headerlink" title="一.新建工程"></a>一.新建工程</h2><p>这里我用VS2010为例新建工程</p><ol><li>打开vs2010，点击文件新建工程，也可以在起始页直接点击新建项目<br><img src="https://img-blog.csdnimg.cn/20210128102554326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>选择MFC应用程序，输入项目名称<br><img src="https://img-blog.csdnimg.cn/20210128102850459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>第一个界面直接下一步<br><img src="https://img-blog.csdnimg.cn/2021012810354880.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>第二个界面设置基于对话框，MFC的使用这块选择在静态库中使用MFC，这两个的区别在于如下</li></ol><ul><li>在共享DLL中使用生成的exe比较小，但是在其他机器上需要有相应的库，否则无法正常使用</li><li>在静态库中使用，生成的exe比较大，但是到其他机器上不用移植库<br><img src="https://img-blog.csdnimg.cn/20210128103807647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><ol start="5"><li>用户界面功能，根据需求选择，然后直接点击完成就可以了，后面默认设置就好了</li></ol><ul><li>粗框架 窗口边框可调</li><li>最小化框 在主窗口中含最小化框</li><li>最大化框 在主窗口中含最大化框</li><li>最小化 打开软件后以图标显示</li><li>最大化 打开软件后铺满屏幕</li><li>系统菜单 窗口含系统菜单</li><li>关于窗口 对话框不显示关于窗口<br><img src="https://img-blog.csdnimg.cn/20210128104939211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h2 id="二-工程配置"><a href="#二-工程配置" class="headerlink" title="二.工程配置"></a>二.工程配置</h2><p>新建项目向导的内容，在项目属性中是可以修改的，鼠标右键项目名称，点击属性</p><h3 id="1-字符集修改"><a href="#1-字符集修改" class="headerlink" title="1.字符集修改"></a>1.字符集修改</h3><p>这里设为为多字节字符集，在写代码的过程中，就不用在意数据类型的转换，比如char* 和CString 等等，都会自己转换，很方便。</p><p><img src="https://img-blog.csdnimg.cn/20210128110118225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里要注意一点，配置的活动要和外面编译的一致<br><img src="https://img-blog.csdnimg.cn/20210201160524612.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-使用其他库添加依赖"><a href="#2-使用其他库添加依赖" class="headerlink" title="2.使用其他库添加依赖"></a>2.使用其他库添加依赖</h3><p>在解决方案项目属性中，找到链接器下的输入，如下图进行添加<img src="https://img-blog.csdnimg.cn/20210128111312521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 界面开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266相互通讯（ESP-NOW）</title>
      <link href="/2021/01/25/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/14.ESP8266%E7%9B%B8%E4%BA%92%E9%80%9A%E8%AE%AF%EF%BC%88ESP-NOW%EF%BC%89/"/>
      <url>/2021/01/25/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/14.ESP8266%E7%9B%B8%E4%BA%92%E9%80%9A%E8%AE%AF%EF%BC%88ESP-NOW%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>这篇给大家分享一下多个ESP8266直接相互通讯，因为想做智能家居系统，但是想了一下，不止一个产品，比如测量温湿度的，检测人体的各种传感器，而且所处的位置也不一样，最后想到这个办法，可以用一个ESP8266模块作为一个总的控制，就像一个管家，来和其他ESP8266通讯，来实现我们想要的功能。</p><blockquote><p>先说一下ESP-NOW，它是Espressif开发的一种协议，它使多个设备无需使用Wi-Fi即可相互通信。该协议类似于低功率的2.4GHz无线连接。设备之间需要进行配对，然后才能进行通信。配对完成后，连接安全且点对点，无需握手。”这意味着在将设备彼此配对后，连接将保持不变。换句话说，如果您的一块板突然断电或重置，则在重新启动时，它将自动连接到其对等端以继续通信。<br>简而言之，ESP-NOW是一种快速通信协议，可用于在ESP8266板之间交换小消息（最大250字节）。</p></blockquote><p><strong>ESP-NOW有多种用途</strong></p><ul><li>可以在不同的设置中进行单向或双向通信</li><li>一个 主 ESP8266向多个ESP8266 从 发送数据<br>一块ESP8266板向不同的ESP8266板发送相同或不同的命令。此配置是构建遥控器之类的理想选择</li><li>一个ESP8266从站从多个主站接收数据<br>如果要将多个传感器节点的数据收集到一个ESP8266板中，则此配置非常理想</li><li>ESP-NOW双向通讯<br>使用ESP-NOW，每个板可以同时是发送者和接收者。因此，您可以在板之间建立双向通信。</li></ul><p>总而言之，ESP-NOW是构建网络的理想选择，在该网络中，您可以有多个ESP8266板相互交换数据，这篇只是测试单方向的发送数据和接受数据</p><blockquote><p>代码地址<br><a href="https://gitee.com/oldzhai/esp8266_arduino/tree/master/ESP8266%E7%9B%B8%E4%BA%92%E9%80%9A%E8%AE%AF">ESP8266相互通讯</a></p></blockquote><h2 id="二-获取MAC"><a href="#二-获取MAC" class="headerlink" title="二.获取MAC"></a>二.获取MAC</h2><p>首先获取MAC地址，将下列程序烧入开发板，然后打开窗口，按ESP8266的复位按键，在串口助手就会打印MAC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span>&#123;</span><br><span class="line">Serial.begin(<span class="number">115200</span>);</span><br><span class="line">Serial.println();</span><br><span class="line">Serial.print(<span class="string">&quot;ESP8266 Board MAC Address: &quot;</span>);</span><br><span class="line">Serial.println(WiFi.macAddress());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>烧录程序时候也会显示该ESP8266的MAC<br><img src="https://img-blog.csdnimg.cn/20210125204010481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-发送端代码"><a href="#三-发送端代码" class="headerlink" title="三.发送端代码"></a>三.发送端代码</h2><p>MAC需要改为接受的ESP8266的MAC</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;espnow.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//接收方MAC地址 根据自己的板子修改</span></span><br><span class="line"><span class="type">uint8_t</span> broadcastAddress[] = &#123;<span class="number">0x50</span>, <span class="number">0x02</span>, <span class="number">0x91</span>, <span class="number">0x67</span>, <span class="number">0xF5</span>, <span class="number">0xF4</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送数据的结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">struct_message</span> &#123;</span></span><br><span class="line">  <span class="type">char</span> a[<span class="number">32</span>];</span><br><span class="line">  <span class="type">int</span> b;</span><br><span class="line">  <span class="type">float</span> c;</span><br><span class="line">  String d;</span><br><span class="line">  <span class="type">bool</span> e;</span><br><span class="line">&#125; struct_message;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个新的类型变量</span></span><br><span class="line">struct_message myData;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一个回调函数，将在发送消息时执行。</span></span><br><span class="line"><span class="comment">//在这种情况下，无论是否成功发送该消息，都会简单地打印出来</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OnDataSent</span><span class="params">(<span class="type">uint8_t</span> *mac_addr, <span class="type">uint8_t</span> sendStatus)</span> &#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;Last Packet Send Status: &quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (sendStatus == <span class="number">0</span>)&#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Delivery success&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Delivery fail&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//初始化串行监视器以进行调试</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//将设备设置为Wi-Fi站点</span></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//立即初始化ESP</span></span><br><span class="line">  <span class="keyword">if</span> (esp_now_init() != <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Error initializing ESP-NOW&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//设置ESP8266角色  ESP_NOW_ROLE_CONTROLLER， ESP_NOW_ROLE_SLAVE， </span></span><br><span class="line">  <span class="comment">//ESP_NOW_ROLE_COMBO， ESP_NOW_ROLE_MAX。</span></span><br><span class="line">  esp_now_set_self_role(ESP_NOW_ROLE_CONTROLLER);</span><br><span class="line">  <span class="comment">//先前创建的功能。</span></span><br><span class="line">  esp_now_register_send_cb(OnDataSent);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//与另一个ESP-NOW设备配对以发送数据</span></span><br><span class="line">  esp_now_add_peer(broadcastAddress, ESP_NOW_ROLE_SLAVE, <span class="number">1</span>, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//配置要发送的值</span></span><br><span class="line">  <span class="built_in">strcpy</span>(myData.a, <span class="string">&quot;THIS IS A CHAR&quot;</span>);</span><br><span class="line">  myData.b = random(<span class="number">1</span>,<span class="number">20</span>); <span class="comment">//随机数</span></span><br><span class="line">  myData.c = <span class="number">1.2</span>;</span><br><span class="line">  myData.d = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">  myData.e = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//发送消息</span></span><br><span class="line">  esp_now_send(broadcastAddress, (<span class="type">uint8_t</span> *) &amp;myData, <span class="keyword">sizeof</span>(myData));</span><br><span class="line">  <span class="comment">//延时两秒</span></span><br><span class="line">  delay(<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四-接受端代码"><a href="#四-接受端代码" class="headerlink" title="四.接受端代码"></a>四.接受端代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接收</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;espnow.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//接收数据保存的结构体和发送方一致</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">struct_message</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> a[<span class="number">32</span>];</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="type">float</span> c;</span><br><span class="line">    String d;</span><br><span class="line">    <span class="type">bool</span> e;</span><br><span class="line">&#125; struct_message;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建结构体变量</span></span><br><span class="line">struct_message myData;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个回调函数作为接收数据后的串口显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OnDataRecv</span><span class="params">(<span class="type">uint8_t</span> * mac, <span class="type">uint8_t</span> *incomingData, <span class="type">uint8_t</span> len)</span> &#123;</span><br><span class="line">  <span class="built_in">memcpy</span>(&amp;myData, incomingData, <span class="keyword">sizeof</span>(myData));</span><br><span class="line">  Serial.print(<span class="string">&quot;Bytes received: &quot;</span>);</span><br><span class="line">  Serial.println(len);</span><br><span class="line">  Serial.print(<span class="string">&quot;Char: &quot;</span>);</span><br><span class="line">  Serial.println(myData.a);</span><br><span class="line">  Serial.print(<span class="string">&quot;Int: &quot;</span>);</span><br><span class="line">  Serial.println(myData.b);</span><br><span class="line">  Serial.print(<span class="string">&quot;Float: &quot;</span>);</span><br><span class="line">  Serial.println(myData.c);</span><br><span class="line">  Serial.print(<span class="string">&quot;String: &quot;</span>);</span><br><span class="line">  Serial.println(myData.d);</span><br><span class="line">  Serial.print(<span class="string">&quot;Bool: &quot;</span>);</span><br><span class="line">  Serial.println(myData.e);</span><br><span class="line">  Serial.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//初始化窗口</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//设置ESP8266模式</span></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//初始化 ESP-NOW</span></span><br><span class="line">  <span class="keyword">if</span> (esp_now_init() != <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Error initializing ESP-NOW&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//设置ESP8266角色：</span></span><br><span class="line">  esp_now_set_self_role(ESP_NOW_ROLE_SLAVE);</span><br><span class="line">  <span class="comment">//先前创建的功能 测试ESP-NOW通信</span></span><br><span class="line">  esp_now_register_recv_cb(OnDataRecv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span>&#123;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五-调试结果"><a href="#五-调试结果" class="headerlink" title="五.调试结果"></a>五.调试结果</h2><p>将两个ESP8266上电，打开接受端的串口助手，看一看到每隔2s会受到一组数据，和我们发送端发送的数据一样，说明通讯成功，这只是一个小的测试，两个相互通讯，或者一对多，多对一需要大家去尝试修改测试<br><img src="https://img-blog.csdnimg.cn/2021012520544061.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC定时器的使用</title>
      <link href="/2021/01/25/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/3.MFC%E5%AE%9A%E6%97%B6%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/01/25/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/3.MFC%E5%AE%9A%E6%97%B6%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>这篇说一下在MFC开发过程当中定时器的使用，我们以在界面上显示系统的时间，让定时器工作，每隔1s时间更新一次<br><img src="https://img-blog.csdnimg.cn/20210125100248755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-使用"><a href="#二-使用" class="headerlink" title="二.使用"></a>二.使用</h2><h3 id="1-启动定时器"><a href="#1-启动定时器" class="headerlink" title="1.启动定时器"></a>1.启动定时器</h3><p>在我们项目的初始化函数当中，添加初始化代码（OnInitDialog）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetTimer(<span class="number">1</span>,<span class="number">100</span>,<span class="literal">NULL</span>);   <span class="comment">//编号为1,时间周期为100ms,第三个参数回调函数，设为NULL即可</span></span><br></pre></td></tr></table></figure><h3 id="2-添加定时器消息"><a href="#2-添加定时器消息" class="headerlink" title="2.添加定时器消息"></a>2.添加定时器消息</h3><p>这里我们在资源视图，找到我们的软件编辑界面，鼠标右键，点击属性，在消息中找到VM_TIMER，点击右边向下的箭头添加消息处理函数，也可以在类向导中添加，都是一样的<br><img src="https://img-blog.csdnimg.cn/20210125100840952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个时候就会自动生成相关的代码，在OnTimer(UINT_PTR nIDEvent) 消息处理函数中添加需要操作的内容，这里一系统时间显示为例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">CinterfaceDlg::OnTimer</span><span class="params">(UINT_PTR nIDEvent)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line"></span><br><span class="line">CDialogEx::OnTimer(nIDEvent);</span><br><span class="line"><span class="keyword">switch</span>(nIDEvent)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:  <span class="comment">//编号一的定时器</span></span><br><span class="line">SYSTEMTIME st;</span><br><span class="line">CString strDate, strTime;</span><br><span class="line"><span class="comment">//获取系统时间</span></span><br><span class="line">GetLocalTime( &amp;st );</span><br><span class="line">strDate.Format(<span class="string">&quot;%4d-%2d-%2d&quot;</span>, st.wYear, st.wMonth, st.wDay);</span><br><span class="line">strTime.Format(<span class="string">&quot;%2d:%2d:%2d&quot;</span>, st.wHour, st.wMinute, st.wSecond);</span><br><span class="line">CString show_time = strDate +<span class="string">&quot;  &quot;</span>+ strTime;</span><br><span class="line"><span class="comment">//设置字体</span></span><br><span class="line">CFont m_editFont;</span><br><span class="line">m_editFont.CreatePointFont(<span class="number">120</span>, _T(<span class="string">&quot;宋体&quot;</span>), <span class="literal">NULL</span>);</span><br><span class="line">m_time.SetFont( &amp;m_editFont, TRUE);   <span class="comment">//m_times 为显示控件的变量名</span></span><br><span class="line">m_time.SetWindowText( show_time );</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-销毁定时器"><a href="#3-销毁定时器" class="headerlink" title="3.销毁定时器"></a>3.销毁定时器</h3><p>在程序退出前需要销毁定时器，添加下面代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KillTimer(<span class="number">1</span>); <span class="comment">//1为定时器的编号</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 界面开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC模态对话框和非模态对话框使用</title>
      <link href="/2021/01/25/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/4.MFC%E6%A8%A1%E6%80%81%E5%AF%B9%E8%AF%9D%E6%A1%86%E5%92%8C%E9%9D%9E%E6%A8%A1%E6%80%81%E5%AF%B9%E8%AF%9D%E6%A1%86%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/01/25/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/4.MFC%E6%A8%A1%E6%80%81%E5%AF%B9%E8%AF%9D%E6%A1%86%E5%92%8C%E9%9D%9E%E6%A8%A1%E6%80%81%E5%AF%B9%E8%AF%9D%E6%A1%86%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>MFC中对话框有两种形式，一个是模态对话框（model dialog box），一个是非模态对话框（modeless dialog box）。二者的区别在于当对话框打开时，是否允许用户进行其他对象的操作。这篇我们以在主界面添加一个按键，点击按键后弹出对话框</p><p><img src="https://img-blog.csdnimg.cn/20210125105635791.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><ol><li>首先我们在主界面添加一个按键，这个就不多说了</li><li>在资源视图添加第二个界面，命名为IDD_TEST_DIALOG<br><img src="https://img-blog.csdnimg.cn/20210125133806397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>为新创建的窗口添加类，添加完成后，在解决方案下会创建TestDlg.c和TestDlg.h两个文件<br><img src="https://img-blog.csdnimg.cn/20210125133937751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><h2 id="三-模态对话框"><a href="#三-模态对话框" class="headerlink" title="三.模态对话框"></a>三.模态对话框</h2><p>在程序运行的过程中，若出现了模态对话框，那么主窗口将无法发送消息，不能进行操作，直到模态对话框退出才可以发送。点击模态对话框中的OK按钮，模态对话框会被销毁。</p><p><strong>创建模态对话框</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个模态对话框  </span></span><br><span class="line">CTestDlg td;  <span class="comment">//CTestDlg 为模态对话框的类名,也就是新添加的界面</span></span><br><span class="line">td.DoModal();   </span><br></pre></td></tr></table></figure><p>注意：在主程序的头文件(interfaceDlg.h interface为项目名称)中添加模态对话框类的头文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;TestDlg.h&quot;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>可以创建一个布局模态对话框类变量，不用担心它会随着所在函数返回而被销毁。因为DoModal()函数的一个功能是，当前只能运行此模态对话框，且停止主窗口的运行，直到模态对话框退出，才允许主窗口运行。<br>DoModal()函数也有显示对话框的功能，所以也无需调用其他函数来显示对话框。</p></blockquote><h2 id="三-非模态对话框"><a href="#三-非模态对话框" class="headerlink" title="三.非模态对话框"></a>三.非模态对话框</h2><p>在程序运行的过程中，若出现了非模态对话框，主窗口还可以发送消息。</p><p><strong>创建模态对话框</strong><br>要建立非模态对话框需要调用两个函数Create()和ShowWindow()。</p><ul><li>和上面一样的方法创建</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CTestDlg t;  </span><br><span class="line">t.Create(IDD_TEST_DIALOG); <span class="comment">//创建一个非模态对话框  </span></span><br><span class="line">t.ShowWindow(SW_SHOWNORMAL); <span class="comment">//显示非模态对话框  </span></span><br></pre></td></tr></table></figure><blockquote><p>IDD_TEST_DIALOG：要显示界面的ID，在界面属性中查看<br>SW_SHOWNORMAL ：宏为界面显示</p></blockquote><p>会发现，运行时我们的界面无法显示，因为声明的对话框变量t是局部变量，但这个函数返回时，t也被析构了，所以无法显示此对话框。</p><ul><li>采用局部变量创建一个非模态对话框</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//采用局部变量创建一个非模态对话框  </span></span><br><span class="line">CTestDlg *pT = new CTestDlg();  </span><br><span class="line">pT-&gt;Create(IDD_TEST_DIALOG); <span class="comment">//创建一个非模态对话框  </span></span><br><span class="line">pT-&gt;ShowWindow(SW_SHOWNORMAL); <span class="comment">//显示非模态对话框  </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为指针在声明的时候是被放在堆栈中，只有整个应用程序关闭后才会被销毁，所以可以正常显示对话框。这种方法虽然不影响程序的运行，但是指针pT所指向的内存却导致不可用，</p><ul><li>采用成员变量创建一个非模态对话框<br>首先在主程序类中声明一个对话框的指针变量</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">private:  </span><br><span class="line"> CTestDlg *pT;  </span><br></pre></td></tr></table></figure><p>然后再主界面中双击按键，就会自己添加按键消息的处理函数，在按键函数中添加如下代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//采用成员变量创建一个非模态对话框  </span></span><br><span class="line"> pT = new CTestDlg(); <span class="comment">//给指针分配内存  </span></span><br><span class="line"> pT-&gt;Create(IDD_TEST_DIALOG); <span class="comment">//创建一个非模态对话框  </span></span><br><span class="line"> pT-&gt;ShowWindow(SW_SHOWNORMAL); <span class="comment">//显示非模态对话框  </span></span><br></pre></td></tr></table></figure><p>记住要在所在类的析构函数中收回pT所指向的内存</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete pT;  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 界面开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下教你破解2G写文件大小限制</title>
      <link href="/2021/01/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/6.Linux%E4%B8%8B%E6%95%99%E4%BD%A0%E7%A0%B4%E8%A7%A32G%E5%86%99%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6/"/>
      <url>/2021/01/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/6.Linux%E4%B8%8B%E6%95%99%E4%BD%A0%E7%A0%B4%E8%A7%A32G%E5%86%99%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>在做文件读写速度测试的时候，发现一个问题我用fwrite 对文件进行写操作时，写到2G大小后，再去写就写不进去了，然后我就想着用write函数测试，结果还是只能写2G大小,最好查了一下将这个问题解决了</p><h2 id="二-方法"><a href="#二-方法" class="headerlink" title="二.方法"></a>二.方法</h2><p>我们在编译程序的时候加上 <code>-D_FILE_OFFSET_BITS=64</code>就可以了，注意没有空格，如下的编译</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -g test.c -o test -D_FILE_OFFSET_BITS=<span class="number">64</span> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC窗口及组件大小设置</title>
      <link href="/2021/01/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/2.MFC%E7%AA%97%E5%8F%A3%E5%8F%8A%E7%BB%84%E4%BB%B6%E5%A4%A7%E5%B0%8F%E8%AE%BE%E7%BD%AE/"/>
      <url>/2021/01/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/2.MFC%E7%AA%97%E5%8F%A3%E5%8F%8A%E7%BB%84%E4%BB%B6%E5%A4%A7%E5%B0%8F%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h1><h2 id="一-桌面分辨率获取"><a href="#一-桌面分辨率获取" class="headerlink" title="一.桌面分辨率获取"></a>一.桌面分辨率获取</h2><p>1.获取桌面的大小，不包括状态栏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cxx = GetSystemMetrics(SM_CXFULLSCREEN);</span><br><span class="line">cyy = GetSystemMetrics(SM_CYFULLSCREEN);  </span><br></pre></td></tr></table></figure><p>2.获取桌面的大小，包括状态栏 正真屏幕大小</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cxx = GetSystemMetrics(SM_CXSCREEN);</span><br><span class="line">cyy = GetSystemMetrics(SM_CYSCREEN);  </span><br></pre></td></tr></table></figure><h2 id="二-软件各尺寸获取"><a href="#二-软件各尺寸获取" class="headerlink" title="二.软件各尺寸获取"></a>二.软件各尺寸获取</h2><p>1.获取软件的大小</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CRect oWindowRect; </span><br><span class="line">GetWindowRect( &amp;oWindowRect );</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.获取客户区的大小（除去边框）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CRect oClientRect; </span><br><span class="line">GetClientRect( &amp;oClientRect );<span class="comment">//获取客户区的大小 </span></span><br></pre></td></tr></table></figure><p>3.获取边框的大小</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ULONG cx = oWindowRect.Width() - oClientRect.Width();<span class="comment">//窗口的宽 （边框）</span></span><br><span class="line">ULONG cy = oWindowRect.Height() - oClientRect.Height();<span class="comment">//窗口的高（边框）</span></span><br></pre></td></tr></table></figure><h2 id="三-设置软件界面"><a href="#三-设置软件界面" class="headerlink" title="三.设置软件界面"></a>三.设置软件界面</h2><h3 id="1-MoveWindow函数"><a href="#1-MoveWindow函数" class="headerlink" title="1.MoveWindow函数"></a>1.MoveWindow函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">MoveWindow</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> nWidth, <span class="type">int</span> nHeight, BOOL bRepaint = TRUE)</span>;</span><br></pre></td></tr></table></figure><p>（x,y）：设置窗口移动的位置，<br>(nWidth,nHeight)：设置窗口的大小</p><ul><li>使用方法1<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetDlgItem(IDC_BUTTON)-&gt;MoveWindow(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>);</span><br></pre></td></tr></table></figure></li><li>使用方法2<br>定义控件的变量 m_btn<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_btn.MoveWindow(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>);</span><br></pre></td></tr></table></figure></li><li>设置软件主界面的大小，在初始化函数OnInitDialog 添加如下代码</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this-&gt;MoveWindow(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>);</span><br></pre></td></tr></table></figure><h3 id="2-SetWindowPos函数"><a href="#2-SetWindowPos函数" class="headerlink" title="2.SetWindowPos函数"></a>2.SetWindowPos函数</h3><p>SetWindowPos功能比较全，包含了MoveWindow的全部功能，设置组件和设置屏幕大小是一样的</p><ul><li><p>使用方法1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetDlgItem(IDC_BUTTON)-&gt;SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>, SWP_SHOWWINDW);</span><br></pre></td></tr></table></figure></li><li><p>使用方法2<br>定义控件的变量 m_btn</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_btn.SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>, SWP_SHOWWINDW);</span><br></pre></td></tr></table></figure></li><li><p>设置软件主界面的大小，在初始化函数OnInitDialog 添加如下代码</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this-&gt;SetWindowPos(<span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>, SWP_SHOWWINDW);</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetWindowPos(&amp;CWnd::wndTop, <span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">80</span>, SWP_SHOWWINDW);</span><br></pre></td></tr></table></figure><p>定位的标志</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> SWP_NOSIZE          0x0001    不改变尺寸(忽略cx,cy)</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_NOMOVE          0x0002    不移动窗口位置(忽略x,y)</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_NOZORDER        0x0004    维持当前Z序（忽略hWndlnsertAfter参数）</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_NOREDRAW        0x0008    </span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_NOACTIVATE      0x0010</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_FRAMECHANGED    0x0020  <span class="comment">/* The frame changed: send WM_NCCALCSIZE */</span></span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_SHOWWINDOW      0x0040    显示窗口</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_HIDEWINDOW      0x0080    隐藏窗口</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_NOCOPYBITS      0x0100</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_NOOWNERZORDER   0x0200  <span class="comment">/* Don&#x27;t do owner Z ordering */</span></span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_NOSENDCHANGING  0x0400  <span class="comment">/* Don&#x27;t send WM_WINDOWPOSCHANGING */</span></span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_DRAWFRAME       SWP_FRAMECHANGED</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_NOREPOSITION    SWP_NOOWNERZORDER</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_DEFERERASE      0x2000</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> SWP_ASYNCWINDOWPOS  0x4000</span></span><br></pre></td></tr></table></figure><ul><li>如果窗口设置隐藏可以使用ShowWindow函数操作   <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m_btn.ShowWindow(TRUE)</span><br></pre></td></tr></table></figure>或者</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetDlgItem(IDC_BUTTON)-&gt;ShowWindow(TRUE)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 界面开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux关于TCP通讯协议的测试</title>
      <link href="/2021/01/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/7.Linux%E5%85%B3%E4%BA%8ETCP%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%B5%8B%E8%AF%95/"/>
      <url>/2021/01/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/7.Linux%E5%85%B3%E4%BA%8ETCP%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>这篇我们说一下，tcp通讯协议的使用，这里我们用AC7020开发板作为服务器，然后用windows下虚拟机作为客户端，两者连接到局域网当中，进行测试，首先开启服务器，然后再打开客户端程序，发送数据，服务器就会将发送的数据进行回传显示。</p><p>我们都知道tcp相对于udp比较可靠，可以理解一下 三次握手 四次挥手<br><strong>三次握手</strong><br><img src="https://img-blog.csdnimg.cn/20210123142123193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>四次挥手</strong><br><img src="https://img-blog.csdnimg.cn/20210123142245820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-程序"><a href="#二-程序" class="headerlink" title="二.程序"></a>二.程序</h2><blockquote><p>我测试的局域网处于零网段的所以ip地址为 192.168.0.103，如果是两根网线直连我们只要保持在同一网段就可以通讯，如果在一台主机上测试用 127.0.0.1 是内网ip </p></blockquote><h3 id="1-服务器"><a href="#1-服务器" class="headerlink" title="1.服务器"></a>1.服务器</h3><p><strong>tcsocket—&gt;bind—&gt;listen—–&gt;accept—&gt;io函数（send&#x2F;recv read&#x2F;write）</strong></p><ol><li><p>创建一个网络的软通道—–》socket 函数 （造作系统提供的）（流式套接字）<br>创建成功：返回文件描述符<br>socket 函数<br>参数 一  ：协议域  （ipv4）AF_INET  网络通道<br>  二  ： 类型   （流逝套接字） SOCK_STREAM<br>三  ：0  （自动匹配相关协议）<br>返回值：<br>成功：返回文件描述符 （fd）—–（询问的通道）<br>失败： -1；</p></li><li><p>绑定一个网络的终端 —》bind  （配置自己的网络）<br>bind函数<br>参数一：文件描述符<br>二：绑定的地址<br>三： 结构体的长度<br>返回值： 成功 0</p></li><li><p>网络监听 listen<br>listen 函数<br>参数一： 文件描述符<br> 二： 真听的最大个数 （默认 5）<br>返回值： 成功  0<br>  失败 -1</p></li><li><p>接收客户端连接请求 accept   （接收后保存客户端的网络地址）<br>accept函数<br>参数一 ：文件描述符（套接字）<br>二 ： 用于保存客户端的地址<br>三 ：地址的长度<br>返回值：<br>成功： 非负整数  新的文件描述符   （进行正文数据的收发）<br>失败： -1</p></li><li><p>收发（io函数收发） （send&#x2F;recv）（read&#x2F;write）<br>recv 函数<br>参数一： 新的文件描述符<br>二： 定义的数组的  buff<br>三：buf的大小 （最大能收多少）<br>四： flags     0  （阻塞接收）<br>返回值： 成功：实际接收的字节数<br>失败   -1<br>send 函数 （发送）<br>参数一： 新的文件描述符<br>二： 定义的数组的  buff<br>三：buf的大小 （最大能收多少）<br>四： flags     0  （阻塞接收）<br>返回值： 成功：实际发送的字节数<br>失败   -1</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span>        </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BUF_SIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//创建一个网络通道</span></span><br><span class="line"><span class="type">int</span> iserver = socket( AF_INET, SOCK_STREAM, <span class="number">0</span> );</span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == iserver )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;create socket fail\r\n&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;create socket success\r\n&quot;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置端口号重复使用</span></span><br><span class="line"><span class="type">int</span> on = <span class="number">1</span>;</span><br><span class="line">setsockopt(iserver, SOL_SOCKET, SO_REUSEADDR, &amp;on, <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//绑定一个网络终端</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">stServer</span>;</span></span><br><span class="line">stServer.sin_family = AF_INET;</span><br><span class="line">stServer.sin_port = htons(<span class="number">8888</span>);</span><br><span class="line">inet_pton(AF_INET, <span class="string">&quot;192.168.0.10&quot;</span>, &amp;stServer.sin_addr);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = bind( iserver, (<span class="keyword">struct</span> sockaddr *)&amp;stServer, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr) );</span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == ret )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;bind fail\r\n&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;bind success\r\n&quot;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//网络的监听</span></span><br><span class="line">ret = listen( iserver, <span class="number">5</span> );</span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == ret )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;listen success\r\n&quot;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//接受客户端请求</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">stclient</span>;</span></span><br><span class="line"><span class="comment">//结构体的大小</span></span><br><span class="line"><span class="type">socklen_t</span> len = <span class="keyword">sizeof</span>( stclient );</span><br><span class="line"><span class="type">char</span> buf[BUF_SIZE];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="built_in">memset</span>( buf, <span class="number">0</span>, BUF_SIZE );</span><br><span class="line"><span class="built_in">memset</span>( &amp;stclient, <span class="number">0</span>, <span class="keyword">sizeof</span>( stclient ) );</span><br><span class="line"><span class="type">int</span> iclient = accept( iserver, (<span class="keyword">struct</span> sockaddr *)&amp;stclient, &amp;len );</span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == iclient )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;accept success iclient = %d\r\n&quot;</span>, iclient );</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收</span></span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;waiting for data.......\r\n&quot;</span> );</span><br><span class="line">ret = recv( iclient, buf, BUF_SIZE, <span class="number">0</span> );</span><br><span class="line"><span class="keyword">if</span> ( ret &lt;= <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">close(iclient);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;recv ok  ret = %d\r\n&quot;</span>, ret );</span><br><span class="line"><span class="comment">//发送给客户端</span></span><br><span class="line">send( iclient, buf, ret, <span class="number">0</span> );</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;send %d data ok\r\n&quot;</span>, ret );</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭文件描述符</span></span><br><span class="line">close(iclient);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-客户端"><a href="#2-客户端" class="headerlink" title="2.客户端"></a>2.客户端</h3><p><strong>socket—&gt;connect—&gt;io函数（send&#x2F;recv read&#x2F;write）</strong></p><ol><li>socket 创建套接字（流式套接字）</li><li>connect  建立连接<br>connect函数<br>参数一： 文件描述符<br>二：  服务器的地址<br>三：  地址结构体的长度<br>返回值：  成功   0<br>  失败  -1 </li><li>io 函数  （收发函数）<br>send 发送  recv接收<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span>        </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BUF_SIZE 20</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//创建一个网络通道</span></span><br><span class="line"><span class="type">int</span> iclient = socket( AF_INET, SOCK_STREAM, <span class="number">0</span> );</span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == iclient )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;create socket fail\r\n&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;create socket success\r\n&quot;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//建立连接</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">stServer</span>;</span></span><br><span class="line">stServer.sin_family = AF_INET;</span><br><span class="line">stServer.sin_port = htons(<span class="number">8888</span>);</span><br><span class="line">inet_pton(AF_INET, <span class="string">&quot;192.168.0.103&quot;</span>, &amp;stServer.sin_addr);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = connect( iclient, (<span class="keyword">struct</span> sockaddr *)&amp;stServer, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr) );</span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-1</span> == ret )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;connect fail\r\n&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;connect success\r\n&quot;</span> );</span><br><span class="line"></span><br><span class="line"><span class="comment">//发消息</span></span><br><span class="line"><span class="type">char</span> buf[BUF_SIZE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input data\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">fscanf</span>( <span class="built_in">stdin</span>, <span class="string">&quot;%s&quot;</span> , buf );</span><br><span class="line">ret = send( iclient, buf, <span class="built_in">strlen</span>(buf), <span class="number">0</span> );</span><br><span class="line"><span class="keyword">if</span> ( ret &lt;= <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;send data fail\r\n&quot;</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;send %d data ok\r\n&quot;</span>, ret );</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, BUF_SIZE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//接受数据</span></span><br><span class="line">ret = recv( iclient, buf, BUF_SIZE, <span class="number">0</span> );</span><br><span class="line"><span class="keyword">if</span> ( ret &lt;= <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;recv error\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">&quot;recv %d data data = %s\r\n&quot;</span>, ret, buf );</span><br><span class="line"><span class="built_in">memset</span>( buf, <span class="number">0</span>, BUF_SIZE );</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭</span></span><br><span class="line">close( iclient );</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="三-测试结果"><a href="#三-测试结果" class="headerlink" title="三.测试结果"></a>三.测试结果</h2><p>客户端<br><img src="https://img-blog.csdnimg.cn/20210123140358175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>服务器端<br><img src="https://img-blog.csdnimg.cn/20210123140613971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件读写速度测试</title>
      <link href="/2021/01/20/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/5.%E4%BD%A0%E7%9F%A5%E9%81%93Linux%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E9%80%9F%E5%BA%A6%E6%9C%80%E5%BF%AB%E8%B7%91%E5%A4%9A%E5%B0%91%EF%BC%9F/"/>
      <url>/2021/01/20/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/5.%E4%BD%A0%E7%9F%A5%E9%81%93Linux%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E9%80%9F%E5%BA%A6%E6%9C%80%E5%BF%AB%E8%B7%91%E5%A4%9A%E5%B0%91%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>最近由于项目的需求，想要测试一下linux开发板下的文件读写速度，所以我就大小写一个小程序来测试一下，这里我用了三种方法分别对文件进行读出来，然后写入到另一个文件中，类似于复制文件操作</p><h2 id="二-代码部分"><a href="#二-代码部分" class="headerlink" title="二.代码部分"></a>二.代码部分</h2><p>这也就是最简单的文件操作了，先计算出文件的大小，然后测出文件读写完成所需要的时间，相除就能知道速度了，不足的是只能测试读和写的共同时间，如何单测读或写需要屏蔽代码进行测试</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//linux文件读写速度测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span> <span class="comment">//stat,access</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span> <span class="comment">//open</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/time.h&gt;</span> <span class="comment">//gettimeofday</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> <span class="comment">//system</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span> <span class="comment">//strlen</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;error.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*----------------------获取文件大小(单位为字节B)--------------------</span></span><br><span class="line"><span class="comment"> *单位换算 1024B=1KB为千字节，1024K=1M为兆字节, 1024M=1G千兆字节</span></span><br><span class="line"><span class="comment"> *参数：1.文件的路径</span></span><br><span class="line"><span class="comment"> *返回值：成功 返回获得文件的大小单位为 字节B</span></span><br><span class="line"><span class="comment">   失败 返回0</span></span><br><span class="line"><span class="comment"> *--------------------------------------------------------------------*/</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">get_filebytes</span><span class="params">( <span class="type">const</span> <span class="type">char</span> *filename )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">size_t</span> flag;</span><br><span class="line">    <span class="type">size_t</span> file_size = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">statbuf</span>;</span></span><br><span class="line">    flag = stat(filename, &amp;statbuf); <span class="comment">//使用stat()获取文件信息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( flag != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Get file information err\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    file_size = statbuf.st_size; <span class="comment">//获取文件大小</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> file_size;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//标准io库函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">file_fread_way</span><span class="params">( <span class="type">char</span> *file_path)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">102400</span>];</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开文件</span></span><br><span class="line">FILE *pfr = fopen(file_path, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == pfr)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">FILE *pfw = fopen(<span class="string">&quot;./copy_file1.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读写文件操作</span></span><br><span class="line"><span class="keyword">while</span>( fread(buf, <span class="keyword">sizeof</span>(buf), <span class="number">1</span>, pfr) )</span><br><span class="line">&#123;</span><br><span class="line">fwrite(buf,<span class="keyword">sizeof</span>(buf), <span class="number">1</span>, pfw);</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line">&#125;</span><br><span class="line">fwrite(buf,<span class="built_in">strlen</span>(buf), <span class="number">1</span>, pfw);</span><br><span class="line">fclose(pfr);</span><br><span class="line">fclose(pfw);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件io函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">file_read_way</span><span class="params">( <span class="type">char</span> *file_path )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"><span class="type">int</span> fdr = open(file_path, O_RDONLY);</span><br><span class="line"><span class="keyword">if</span>( fdr &lt; <span class="number">1</span> )</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> fdw = open(<span class="string">&quot;./copy_file2.txt&quot;</span>, O_WRONLY | O_CREAT, <span class="number">0666</span>);</span><br><span class="line"><span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读写文件操作 读到末尾返回0</span></span><br><span class="line"><span class="keyword">while</span>( ret = read(fdr, buf, <span class="keyword">sizeof</span>(buf)) )</span><br><span class="line">&#123;</span><br><span class="line">write(fdw, buf, ret);</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="number">0</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(fdr);</span><br><span class="line">close(fdw);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件映射成虚内存</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">file_mmap_way</span><span class="params">( <span class="type">char</span> *file_path )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"><span class="type">long</span> len_r = <span class="number">0</span>, len_w = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> fdr = open(file_path, O_RDONLY);</span><br><span class="line"><span class="type">int</span> fdw = open(<span class="string">&quot;./copy_file3.txt&quot;</span>, O_RDWR | O_CREAT, <span class="number">0666</span>);</span><br><span class="line"><span class="keyword">if</span>( fdr == <span class="number">-1</span> )</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;open file err:&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">len_r = get_filebytes(file_path); </span><br><span class="line"><span class="comment">//参数 1.那个地址开始映射（NULL 系统指定） 2.映射地址空间大小 3.内存保护模式 </span></span><br><span class="line"><span class="comment">//4.映射模式 5.文件描述符  7.定位到文件那个位置开始往后映射</span></span><br><span class="line"><span class="type">char</span> *pr = (<span class="type">char</span> *)mmap(<span class="literal">NULL</span>, len_r, PROT_READ, MAP_SHARED, fdr, SEEK_SET);</span><br><span class="line"><span class="keyword">if</span>( pr == MAP_FAILED )</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;pr map err:&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">close(fdr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置新建文件长度</span></span><br><span class="line">ftruncate(fdw, len_r);</span><br><span class="line"><span class="type">char</span> *pw = (<span class="type">char</span> *)mmap(<span class="literal">NULL</span>, len_r, PROT_WRITE, MAP_SHARED, fdw, SEEK_SET);</span><br><span class="line"><span class="keyword">if</span>( pw == MAP_FAILED )</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;pw map err:&quot;</span>);</span><br><span class="line">close(fdw);</span><br><span class="line">munmap(pr, len_r);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">close(fdw);</span><br><span class="line"></span><br><span class="line"><span class="comment">//内存数据写入文件</span></span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">memcpy</span>( pw, pr, len_r) == <span class="literal">NULL</span> )</span><br><span class="line">&#123;</span><br><span class="line">munmap(pr, len_r);</span><br><span class="line">munmap(pw, len_r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件内容写入磁盘</span></span><br><span class="line"><span class="comment">//msync(pw,len_r,MS_SYNC);</span></span><br><span class="line"></span><br><span class="line">munmap(pr, len_r);</span><br><span class="line">munmap(pw, len_r);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*---------------------------文件读写函数------------------------------</span></span><br><span class="line"><span class="comment">*参数：1.char *path 文件路径</span></span><br><span class="line"><span class="comment">   2.int way 测试文件读写的方式 </span></span><br><span class="line"><span class="comment">*返回值：成功：返回测试读写的速度</span></span><br><span class="line"><span class="comment">* 失败：返回-1;</span></span><br><span class="line"><span class="comment">----------------------------------------------------------------------*/</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">file_read_write_test</span><span class="params">( <span class="type">char</span> *path, <span class="type">int</span> way )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> speed = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> file = access(path, <span class="number">0</span>);</span><br><span class="line"><span class="type">long</span> file_size = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">if</span>( <span class="number">0</span> != file ) <span class="comment">//不存在</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">file_size = get_filebytes(path); </span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器开始计时</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tpstart</span>,<span class="title">tpend</span>;</span></span><br><span class="line"><span class="type">float</span> timeuse;</span><br><span class="line">gettimeofday(&amp;tpstart,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试方式</span></span><br><span class="line"><span class="keyword">switch</span>(way)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//方法1 fread 和 fwrite</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">file_fread_way( path );</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2 read 和 read</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">file_read_way( path );</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//方法3 地址映射</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">file_mmap_way( path );</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器显示时间</span></span><br><span class="line">gettimeofday(&amp;tpend,<span class="literal">NULL</span>);</span><br><span class="line">timeuse = <span class="number">1000000</span> * (tpend.tv_sec - tpstart.tv_sec) + </span><br><span class="line">   (tpend.tv_usec - tpstart.tv_usec);</span><br><span class="line">timeuse/=<span class="number">1000000</span>; <span class="comment">//转化为秒</span></span><br><span class="line"></span><br><span class="line">speed = (<span class="type">float</span>)(file_size/(<span class="number">1024</span>*<span class="number">1024</span>)) / timeuse;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;sync&quot;</span>); <span class="comment">//同步数据到磁盘</span></span><br><span class="line"><span class="keyword">return</span> speed;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> *buf = <span class="string">&quot;./data.txt&quot;</span>;</span><br><span class="line"><span class="type">float</span> result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">result = file_read_write_test( buf, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fwrite speed = %.3fM/s\r\n&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">result = file_read_write_test( buf, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;write  speed = %.3fM/s\r\n&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">result = file_read_write_test( buf, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;mmap   speed = %.3fM/s\r\n&quot;</span>, result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三-测试结果"><a href="#三-测试结果" class="headerlink" title="三.测试结果"></a>三.测试结果</h2><p>1.首先我是在虚拟机直接来测试的，测试的文件大小为90M，应为比较方便，测试结果如下</p><blockquote><p>感觉测试的结果不准确，测试多次差距比较大，我猜测是因为缓存机制造成的，个人理解，如果哪位朋友懂得话，欢迎留言共同学习</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210120145956480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.在开发板上测试，这里我使用的是 zynq AC7020的开发板，测试结果如下</p><p>这个是刚上电测试的结果<br><img src="https://img-blog.csdnimg.cn/2021012015063282.png" alt="在这里插入图片描述"><br>这是多次测试结果<br><img src="https://img-blog.csdnimg.cn/20210120151834285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-扩展测试"><a href="#三-扩展测试" class="headerlink" title="三.扩展测试"></a>三.扩展测试</h2><p>最后想了一个单独进行文件读或者写的测试，看看测试的速度</p><p>1.先附上代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//linux文件读写速度测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span> <span class="comment">//stat,access</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span> <span class="comment">//open</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/time.h&gt;</span> <span class="comment">//gettimeofday</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> <span class="comment">//system</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span> <span class="comment">//strlen</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;error.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取文件大小</span></span><br><span class="line"><span class="type">long</span> <span class="title function_">get_filebytes</span><span class="params">( <span class="type">const</span> <span class="type">char</span> *filename )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">size_t</span> flag;</span><br><span class="line">    <span class="type">size_t</span> file_size = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stat</span> <span class="title">statbuf</span>;</span></span><br><span class="line">    flag = stat(filename, &amp;statbuf); <span class="comment">//使用stat()获取文件信息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( flag != <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;you do not have file\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    file_size = statbuf.st_size; <span class="comment">//获取文件大小</span></span><br><span class="line"><span class="keyword">return</span> file_size;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">//标准io库函数 写数据</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">file_fwrite</span><span class="params">( <span class="type">char</span> *file_path, <span class="type">int</span> size, <span class="type">int</span> num )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> buf[size];</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="string">&#x27;a&#x27;</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开文件</span></span><br><span class="line">FILE *pfw = fopen(file_path, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == pfw)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器开始计时</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tpstart</span>,<span class="title">tpend</span>;</span></span><br><span class="line"><span class="type">float</span> timeuse;</span><br><span class="line">gettimeofday(&amp;tpstart,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读写文件操作 读到末尾返回0</span></span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">fwrite(buf, size, <span class="number">1</span>, pfw);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system(<span class="string">&quot;sync&quot;</span>); <span class="comment">//同步数据到磁盘</span></span><br><span class="line">fclose(pfw);</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器显示时间</span></span><br><span class="line">gettimeofday(&amp;tpend,<span class="literal">NULL</span>);</span><br><span class="line">timeuse = <span class="number">1000000</span> * (tpend.tv_sec - tpstart.tv_sec) + </span><br><span class="line">   (tpend.tv_usec - tpstart.tv_usec);</span><br><span class="line">timeuse/=<span class="number">1000000</span>; <span class="comment">//转化为秒</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> speed =  ((size *num)/(<span class="number">1024</span>*<span class="number">1024</span>)) / timeuse;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//标准io库函数 读数据</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">file_fread</span><span class="params">( <span class="type">char</span> *file_path, <span class="type">int</span> size)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> buf[size];</span><br><span class="line"><span class="type">long</span> file_size = get_filebytes( file_path );</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开文件</span></span><br><span class="line">FILE *pfr = fopen(file_path, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span> == pfr)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please first fwrite file\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器开始计时</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tpstart</span>,<span class="title">tpend</span>;</span></span><br><span class="line"><span class="type">float</span> timeuse;</span><br><span class="line">gettimeofday(&amp;tpstart,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读写文件操作 读到末尾返回0</span></span><br><span class="line"><span class="keyword">while</span>( fread(buf, size, <span class="number">1</span>, pfr))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器显示时间</span></span><br><span class="line">gettimeofday(&amp;tpend,<span class="literal">NULL</span>);</span><br><span class="line">timeuse = <span class="number">1000000</span> * (tpend.tv_sec - tpstart.tv_sec) + </span><br><span class="line">   (tpend.tv_usec - tpstart.tv_usec);</span><br><span class="line">timeuse/=<span class="number">1000000</span>; <span class="comment">//转化为秒</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> speed =  (file_size/(<span class="number">1024</span>*<span class="number">1024</span>)) / timeuse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//写数据</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">file_write</span><span class="params">( <span class="type">char</span> *file_path, <span class="type">int</span> size, <span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> buf[size];</span><br><span class="line"><span class="built_in">memset</span>(buf, <span class="string">&#x27;a&#x27;</span>, <span class="keyword">sizeof</span>(buf));</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开文件</span></span><br><span class="line"><span class="type">int</span> fd = open(file_path, O_WRONLY | O_CREAT, <span class="number">0666</span>);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器开始计时</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tpstart</span>,<span class="title">tpend</span>;</span></span><br><span class="line"><span class="type">float</span> timeuse;</span><br><span class="line">gettimeofday(&amp;tpstart,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读写文件操作 读到末尾返回0</span></span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">write(fd, buf, size);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;sync&quot;</span>); <span class="comment">//同步数据到磁盘</span></span><br><span class="line">close(fd);</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器显示时间</span></span><br><span class="line">gettimeofday(&amp;tpend,<span class="literal">NULL</span>);</span><br><span class="line">timeuse = <span class="number">1000000</span> * (tpend.tv_sec - tpstart.tv_sec) + </span><br><span class="line">   (tpend.tv_usec - tpstart.tv_usec);</span><br><span class="line">timeuse/=<span class="number">1000000</span>; <span class="comment">//转化为秒</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> speed =  ((size *num)/(<span class="number">1024</span>*<span class="number">1024</span>)) / timeuse;</span><br><span class="line"><span class="keyword">return</span> speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//标准io库函数 读数据</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">file_read</span><span class="params">( <span class="type">char</span> *file_path, <span class="type">int</span> size )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> buf[size];</span><br><span class="line"><span class="type">long</span> file_size = get_filebytes( file_path );</span><br><span class="line"><span class="comment">//打开文件</span></span><br><span class="line"><span class="type">int</span> fd = open(file_path, O_RDONLY);</span><br><span class="line"><span class="keyword">if</span>( fd == <span class="number">-1</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please first write file\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计时器开始计时</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tpstart</span>,<span class="title">tpend</span>;</span></span><br><span class="line"><span class="type">float</span> timeuse;</span><br><span class="line">gettimeofday(&amp;tpstart,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读写文件操作 读到末尾返回0</span></span><br><span class="line"><span class="keyword">while</span>( read(fd, buf, size))</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器显示时间</span></span><br><span class="line">gettimeofday(&amp;tpend,<span class="literal">NULL</span>);</span><br><span class="line">timeuse = <span class="number">1000000</span> * (tpend.tv_sec - tpstart.tv_sec) + </span><br><span class="line">   (tpend.tv_usec - tpstart.tv_usec);</span><br><span class="line">timeuse/=<span class="number">1000000</span>; <span class="comment">//转化为秒</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> speed =  (file_size/(<span class="number">1024</span>*<span class="number">1024</span>)) / timeuse;</span><br><span class="line"><span class="keyword">return</span> speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> way = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> size = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> result = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *buf = <span class="string">&quot;./data.bin&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;===========test_start============\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1.fwrite\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2.fread\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3.write\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4.read\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;5.exit\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input test way: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;way);</span><br><span class="line"><span class="keyword">if</span>( way == <span class="number">5</span> )</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1048576 = 1M 1024 = 1k\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input lump size byte: &quot;</span>); <span class="comment">//设置块的大小 字节</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;size);</span><br><span class="line"><span class="keyword">if</span>( way == <span class="number">1</span> || way == <span class="number">3</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input loop number: &quot;</span>); <span class="comment">//设置循环次数</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (way)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">result = file_fwrite( buf, size, num );</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">result = file_fread( buf, size);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">result = file_write( buf, size, num);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">result = file_read( buf, size);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( result != <span class="number">0</span> )</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;test resule = %.3fM/s\r\n&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.上面测试程序在设置参数是需要字节计算大小和单位的换算，设置的基本单位为字节，块的大小为1次写入的个数，块的大小乘以循环的次数就是文件的大小</p><p>3.在Zynq AC7020开发板测试的结果如下</p><table><thead><tr><th>方式</th><th>块大小</th><th>循环次数</th><th>速度</th></tr></thead><tbody><tr><td>fwrite</td><td>1M</td><td>1024</td><td>19.741M&#x2F;s</td></tr><tr><td>fread</td><td>1M</td><td>1024</td><td>21.914M&#x2F;s</td></tr><tr><td>write</td><td>1M</td><td>1024</td><td>19.707M&#x2F;s</td></tr><tr><td>read</td><td>1M</td><td>1024</td><td>21.944M&#x2F;s</td></tr><tr><td>fwrite</td><td>4字节</td><td>268435456</td><td>13.816M&#x2F;s</td></tr><tr><td>fread</td><td>4字节</td><td>268435456</td><td>13.345M&#x2F;s</td></tr></tbody></table><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>根据测试的结果，由于多次测试结果变化比较大，无法判断具体哪种方式快，只能说明地址映射mmap的方式最快，后面我测试了输入cp命令来复制文件，速度挺快的基本就是秒操作，至于说多次操作的多个结果，原因还未查明，哪位朋友知道，感谢留言交流，后面补充的测试方式感觉还可以，可以作为参考。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266+0.96OLED驱动显示（I2C）</title>
      <link href="/2021/01/19/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/13.ESP8266+0.96OLED%E9%A9%B1%E5%8A%A8%E6%98%BE%E7%A4%BA%EF%BC%88I2C%EF%BC%89/"/>
      <url>/2021/01/19/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/13.ESP8266+0.96OLED%E9%A9%B1%E5%8A%A8%E6%98%BE%E7%A4%BA%EF%BC%88I2C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>这篇我们说一下ESP8266来驱动OLED显示屏显示，这里使用的是I2C的屏幕，像Arduino中有好几个库可以驱动屏幕，但是都是封装好的像I2C的两个控制管脚都封进去了，不能理解，这样移植性就特别差了，今天我给大家分享一下的该的，很好理解，移植性很强，相信大家和我一样都希望同一代码可以在多个平台下使用。</p><p>我的测试环境具体的环境如下</p><ul><li>开发环境：Arduino IDE</li><li>开发板    ：ESP8266-12F</li><li>屏幕：0.96寸OLED（4针I2C）<br><img src="https://img-blog.csdnimg.cn/20210119191504154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h2 id="二-管脚定义"><a href="#二-管脚定义" class="headerlink" title="二.管脚定义"></a>二.管脚定义</h2><p>I2C接口，这里使用的是软件I2C，SCL时钟管脚为D0，SDA数据管脚为D1，当然这里你可以自己定义，只要是普通IO口都是可可以的</p><table><thead><tr><th>OLED</th><th>ESP8266</th></tr></thead><tbody><tr><td>VCC</td><td>VCC(3.3V)</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>SCL</td><td>D0(GPIO16)</td></tr><tr><td>SDA</td><td>D1(GPIO5)</td></tr></tbody></table><h2 id="三-代码"><a href="#三-代码" class="headerlink" title="三.代码"></a>三.代码</h2><p>代码为Arduino环境下的代码，在其他平台如51单片机，可以将控制IO的宏定义函数修改就可以了，测试工程代码还包括字库oledfont.h，这里使用中景园的，说的没有多注释很详细，重点看程序</p><blockquote><p>代码比较长，方便大家测试和浏览我将工程下载路径放在下面<br><a href="https://gitee.com/oldzhai/esp8266_arduino.git">下载地址：OLED_I2C驱动</a></p></blockquote><p><strong>OLED.ino</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//////////////////////////////////////////////////////////////////////////////////   </span></span><br><span class="line"><span class="comment">//本程序只供学习使用，未经作者许可，不得用于其它任何用途</span></span><br><span class="line"><span class="comment">//  文 件 名   : oled.c</span></span><br><span class="line"><span class="comment">//  作    者   : oldzhai</span></span><br><span class="line"><span class="comment">//  生成日期   : 2021-1-18</span></span><br><span class="line"><span class="comment">//  功能描述   : ESP8266 OLED显示屏I2C驱动显示</span></span><br><span class="line"><span class="comment">//              说明: </span></span><br><span class="line"><span class="comment">//              ----------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//              GND  电源地</span></span><br><span class="line"><span class="comment">//              VCC  3.3v电源</span></span><br><span class="line"><span class="comment">//              D0   GPIO16（SCL）</span></span><br><span class="line"><span class="comment">//              D1   GPIO5 （SDA）  </span></span><br><span class="line"><span class="comment">//              ----------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//******************************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span> <span class="comment">//字库</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//I2C管脚的定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCL D0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SDA D1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输出电平的宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SCL_L digitalWrite(SCL,LOW)<span class="comment">//SCL</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SCL_H digitalWrite(SCL,HIGH)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SDA_L digitalWrite(SDA,LOW)<span class="comment">//SDA</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SDA_H digitalWrite(SDA,HIGH)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//管脚模式的宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCL_IN   pinMode(SCL, INPUT)   </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCL_OUT  pinMode(SCL, OUTPUT) <span class="comment">//SCL</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SDA_IN   pinMode(SDA, INPUT) </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SDA_OUT  pinMode(SDA, OUTPUT) <span class="comment">//SDA</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CMD  0  <span class="comment">//写命令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DATA 1 <span class="comment">//写数据</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  OLED_Init();</span><br><span class="line">  OLED_ColorTurn(<span class="number">0</span>);<span class="comment">//0正常显示 1反色显示</span></span><br><span class="line">  OLED_DisplayTurn(<span class="number">0</span>);<span class="comment">//0正常显示 1翻转180度显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  OLED_DrawBMP(<span class="number">0</span>,<span class="number">0</span>,<span class="number">128</span>,<span class="number">64</span>,BMP1); <span class="comment">//显示图片</span></span><br><span class="line">  delay(<span class="number">1000</span>); <span class="comment">//延时1秒</span></span><br><span class="line">  OLED_Clear();<span class="comment">//清除界面</span></span><br><span class="line">  </span><br><span class="line">  OLED_ShowString(<span class="number">0</span>,<span class="number">0</span>,<span class="string">&quot;OLDZHAI&quot;</span>,<span class="number">16</span>);</span><br><span class="line">  OLED_ShowString(<span class="number">20</span>,<span class="number">4</span>,<span class="string">&quot;2021/1/18&quot;</span>,<span class="number">16</span>);</span><br><span class="line">  OLED_ShowString(<span class="number">0</span>,<span class="number">6</span>,<span class="string">&quot;ASCII:&quot;</span>,<span class="number">16</span>);  </span><br><span class="line">  OLED_ShowString(<span class="number">63</span>,<span class="number">6</span>,<span class="string">&quot;CODE:&quot;</span>,<span class="number">16</span>);</span><br><span class="line">  delay(<span class="number">1000</span>); <span class="comment">//延时1秒 delay函数的单位为ms</span></span><br><span class="line">  OLED_Clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//I2C初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  SDA_OUT;</span><br><span class="line">  SCL_OUT;</span><br><span class="line">  I2C_SDA_H;</span><br><span class="line">  I2C_SCL_H;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//I2C开始</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  I2C_SCL_H;</span><br><span class="line">  I2C_SDA_H;</span><br><span class="line">  I2C_SDA_L;</span><br><span class="line">  I2C_SCL_L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//I2C结束</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Stop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  I2C_SCL_H;</span><br><span class="line">  I2C_SDA_L;</span><br><span class="line">  I2C_SDA_H;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查应答信号</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Wait_Ack</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    I2C_SDA_H;</span><br><span class="line">    I2C_SCL_H;</span><br><span class="line">    I2C_SCL_L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//I2C写入一个字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_I2C_Byte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)    </span><br><span class="line">  &#123;</span><br><span class="line">    I2C_SCL_L;</span><br><span class="line">    <span class="keyword">if</span>( dat &amp; <span class="number">0x80</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      I2C_SDA_H;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      I2C_SDA_L;</span><br><span class="line">    &#125;</span><br><span class="line">    dat &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    I2C_SCL_H;</span><br><span class="line">   &#125;</span><br><span class="line">   I2C_SCL_L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送一个字节</span></span><br><span class="line"><span class="comment">//向SSD1306写入一个字节。</span></span><br><span class="line"><span class="comment">//mode:数据/命令标志 0,表示命令;1,表示数据;</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(u8 dat,u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">  I2C_Start();</span><br><span class="line">  Write_I2C_Byte(<span class="number">0x78</span>);</span><br><span class="line">  I2C_Wait_Ack();</span><br><span class="line">  <span class="keyword">if</span>(mode)&#123;</span><br><span class="line">    Write_I2C_Byte(<span class="number">0x40</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    Write_I2C_Byte(<span class="number">0x00</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  I2C_Wait_Ack();</span><br><span class="line">  Write_I2C_Byte(dat);</span><br><span class="line">  I2C_Wait_Ack();</span><br><span class="line">  I2C_Stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//反显函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ColorTurn</span><span class="params">(u8 i)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(!i) OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//正常显示</span></span><br><span class="line">  <span class="keyword">else</span>  OLED_WR_Byte(<span class="number">0xA7</span>,OLED_CMD);<span class="comment">//反色显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕旋转180度</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DisplayTurn</span><span class="params">(u8 i)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//正常显示</span></span><br><span class="line">      OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    OLED_WR_Byte(<span class="number">0xC0</span>,OLED_CMD);<span class="comment">//反转显示</span></span><br><span class="line">    OLED_WR_Byte(<span class="number">0xA0</span>,OLED_CMD);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//坐标设置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Set_Pos</span><span class="params">(u8 x, u8 y)</span> </span><br><span class="line">&#123; </span><br><span class="line">  OLED_WR_Byte(<span class="number">0xb0</span>+y,OLED_CMD);</span><br><span class="line">  OLED_WR_Byte(((x&amp;<span class="number">0xf0</span>)&gt;&gt;<span class="number">4</span>)|<span class="number">0x10</span>,OLED_CMD);</span><br><span class="line">  OLED_WR_Byte((x&amp;<span class="number">0x0f</span>),OLED_CMD);</span><br><span class="line">&#125;</span><br><span class="line">       </span><br><span class="line"><span class="comment">//开启OLED显示    </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0X14</span>,OLED_CMD);  <span class="comment">//DCDC ON</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0XAF</span>,OLED_CMD);  <span class="comment">//DISPLAY ON</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭OLED显示     </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Display_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  OLED_WR_Byte(<span class="number">0X8D</span>,OLED_CMD);  <span class="comment">//SET DCDC命令</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0X10</span>,OLED_CMD);  <span class="comment">//DCDC OFF</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0XAE</span>,OLED_CMD);  <span class="comment">//DISPLAY OFF</span></span><br><span class="line">&#125;</span><br><span class="line">            </span><br><span class="line"><span class="comment">//清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">  u8 i,n;       </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)  </span><br><span class="line">  &#123;  </span><br><span class="line">    OLED_WR_Byte (<span class="number">0xb0</span>+i,OLED_CMD);    <span class="comment">//设置页地址（0~7）</span></span><br><span class="line">    OLED_WR_Byte (<span class="number">0x00</span>,OLED_CMD);      <span class="comment">//设置显示位置—列低地址</span></span><br><span class="line">    OLED_WR_Byte (<span class="number">0x10</span>,OLED_CMD);      <span class="comment">//设置显示位置—列高地址   </span></span><br><span class="line">    <span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)OLED_WR_Byte(<span class="number">0</span>,OLED_DATA); </span><br><span class="line">  &#125; <span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在指定位置显示一个字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63         </span></span><br><span class="line"><span class="comment">//sizey:选择字体 6x8  8x16</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,<span class="type">const</span> u8 chr,u8 sizey)</span></span><br><span class="line">&#123;       </span><br><span class="line">  u8 c=<span class="number">0</span>,sizex=sizey/<span class="number">2</span>,temp;</span><br><span class="line">  u16 i=<span class="number">0</span>,size1;</span><br><span class="line">  <span class="keyword">if</span>(sizey==<span class="number">8</span>)size1=<span class="number">6</span>;</span><br><span class="line">  <span class="keyword">else</span> size1=(sizey/<span class="number">8</span>+((sizey%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>))*(sizey/<span class="number">2</span>);</span><br><span class="line">  c=chr-<span class="string">&#x27; &#x27;</span>;<span class="comment">//得到偏移后的值</span></span><br><span class="line">  OLED_Set_Pos(x,y);</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size1;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(i%sizex==<span class="number">0</span>&amp;&amp;sizey!=<span class="number">8</span>) OLED_Set_Pos(x,y++);</span><br><span class="line">    <span class="keyword">if</span>(sizey==<span class="number">8</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      temp=pgm_read_byte(&amp;asc2_0806[c][i]);</span><br><span class="line">      OLED_WR_Byte(temp,OLED_DATA);<span class="comment">//6X8字号</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(sizey==<span class="number">16</span>) </span><br><span class="line">    &#123;</span><br><span class="line">      temp=pgm_read_byte(&amp;asc2_1608[c][i]);</span><br><span class="line">      OLED_WR_Byte(temp,OLED_DATA);<span class="comment">//8x16字号</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//m^n函数</span></span><br><span class="line">u32 <span class="title function_">oled_pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">  u32 result=<span class="number">1</span>;  </span><br><span class="line">  <span class="keyword">while</span>(n--)result*=m;    </span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line">         </span><br><span class="line"><span class="comment">//显示数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标</span></span><br><span class="line"><span class="comment">//num:要显示的数字</span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//sizey:字体大小      </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 sizey)</span></span><br><span class="line">&#123;           </span><br><span class="line">  u8 t,temp,m=<span class="number">0</span>;</span><br><span class="line">  u8 enshow=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(sizey==<span class="number">8</span>)m=<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">  &#123;</span><br><span class="line">    temp=(num/oled_pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span>(enshow==<span class="number">0</span>&amp;&amp;t&lt;(len<span class="number">-1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        OLED_ShowChar(x+(sizey/<span class="number">2</span>+m)*t,y,<span class="string">&#x27; &#x27;</span>,sizey);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> enshow=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    OLED_ShowChar(x+(sizey/<span class="number">2</span>+m)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,sizey);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示一个字符号串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,<span class="type">const</span> <span class="type">char</span> *chr,u8 sizey)</span></span><br><span class="line">&#123;</span><br><span class="line">  u8 j=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (chr[j]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">  &#123;   </span><br><span class="line">    OLED_ShowChar(x,y,chr[j++],sizey);</span><br><span class="line">    <span class="keyword">if</span>(sizey==<span class="number">8</span>)x+=<span class="number">6</span>;</span><br><span class="line">    <span class="keyword">else</span> x+=sizey/<span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChinese</span><span class="params">(u8 x,u8 y,<span class="type">const</span> u8 no,u8 sizey)</span></span><br><span class="line">&#123;</span><br><span class="line">  u16 i,size1=(sizey/<span class="number">8</span>+((sizey%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>))*sizey;</span><br><span class="line">  u8 temp;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size1;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(i%sizey==<span class="number">0</span>) OLED_Set_Pos(x,y++);</span><br><span class="line">    <span class="keyword">if</span>(sizey==<span class="number">16</span>) </span><br><span class="line">    &#123;</span><br><span class="line">      temp=pgm_read_byte(&amp;Hzk[no][i]);</span><br><span class="line">      OLED_WR_Byte(temp,OLED_DATA);<span class="comment">//16x16字号</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//else if(sizey==xx) OLED_WR_Byte(xxx[c][i],OLED_DATA);//用户添加字号</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span>;</span><br><span class="line">  &#125;       </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//显示图片</span></span><br><span class="line"><span class="comment">//x,y显示坐标</span></span><br><span class="line"><span class="comment">//sizex,sizey,图片长宽</span></span><br><span class="line"><span class="comment">//BMP：要显示的图片</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawBMP</span><span class="params">(u8 x,u8 y,u8 sizex, u8 sizey,<span class="type">const</span> u8 BMP[])</span></span><br><span class="line">&#123;   </span><br><span class="line">  u16 j=<span class="number">0</span>;</span><br><span class="line">  u8 i,m,temp;</span><br><span class="line">  sizey=sizey/<span class="number">8</span>+((sizey%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;sizey;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    OLED_Set_Pos(x,i+y);</span><br><span class="line">    <span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;sizex;m++)</span><br><span class="line">    &#123;</span><br><span class="line">       temp=pgm_read_byte(&amp;BMP[j++]);</span><br><span class="line">       OLED_WR_Byte(temp,OLED_DATA);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//OLED的初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">  I2C_Init(); <span class="comment">//初始化I2C 管脚输出高电平</span></span><br><span class="line">  </span><br><span class="line">  OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--turn off oled panel</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//---set low column address</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//---set high column address</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD);<span class="comment">//--set contrast control register</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xCF</span>,OLED_CMD); <span class="comment">// Set SEG Output Current Brightness</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);<span class="comment">//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//--set normal display</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD);<span class="comment">//--set multiplex ratio(1 to 64)</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x3f</span>,OLED_CMD);<span class="comment">//--1/64 duty</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD);<span class="comment">//-set display offset Shift Mapping RAM Counter (0x00~0x3F)</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//-not offset</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xd5</span>,OLED_CMD);<span class="comment">//--set display clock divide ratio/oscillator frequency</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x80</span>,OLED_CMD);<span class="comment">//--set divide ratio, Set Clock as 100 Frames/Sec</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD);<span class="comment">//--set pre-charge period</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xF1</span>,OLED_CMD);<span class="comment">//Set Pre-Charge as 15 Clocks &amp; Discharge as 1 Clock</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD);<span class="comment">//--set com pins hardware configuration</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD);</span><br><span class="line">  OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD);<span class="comment">//--set vcomh</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//Set VCOM Deselect Level</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x20</span>,OLED_CMD);<span class="comment">//-Set Page Addressing Mode (0x00/0x01/0x02)</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x02</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//--set Charge Pump enable/disable</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//--set(0x10) disable</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xA4</span>,OLED_CMD);<span class="comment">// Disable Entire Display On (0xa4/0xa5)</span></span><br><span class="line">  OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">// Disable Inverse Display On (0xa6/a7) </span></span><br><span class="line">  OLED_Clear();</span><br><span class="line">  OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD); <span class="comment">/*display ON*/</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>oledfont.h</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLEDFONT_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLEDFONT_H </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;avr/pgmspace.h&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> BMP1[] PROGMEM =</span><br><span class="line">&#123;</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x05</span>,<span class="number">0x09</span>,<span class="number">0x11</span>,<span class="number">0xFF</span>,<span class="number">0x11</span>,<span class="number">0x89</span>,<span class="number">0x05</span>,<span class="number">0xC3</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x44</span>,<span class="number">0x28</span>,<span class="number">0xFF</span>,<span class="number">0x11</span>,<span class="number">0xAA</span>,<span class="number">0x44</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x83</span>,<span class="number">0x01</span>,<span class="number">0x38</span>,<span class="number">0x44</span>,<span class="number">0x82</span>,<span class="number">0x92</span>,</span><br><span class="line">  <span class="number">0x92</span>,<span class="number">0x74</span>,<span class="number">0x01</span>,<span class="number">0x83</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7C</span>,<span class="number">0x44</span>,<span class="number">0xFF</span>,<span class="number">0x01</span>,<span class="number">0x7D</span>,</span><br><span class="line">  <span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x01</span>,<span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x01</span>,<span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x7D</span>,<span class="number">0x01</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,</span><br><span class="line">  <span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x3F</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,</span><br><span class="line">  <span class="number">0xF3</span>,<span class="number">0x13</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x01</span>,<span class="number">0xF1</span>,<span class="number">0x11</span>,<span class="number">0x61</span>,<span class="number">0x81</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,</span><br><span class="line">  <span class="number">0x81</span>,<span class="number">0x61</span>,<span class="number">0x11</span>,<span class="number">0xF1</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x41</span>,<span class="number">0x41</span>,<span class="number">0xF1</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,</span><br><span class="line">  <span class="number">0xC1</span>,<span class="number">0x21</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x21</span>,<span class="number">0xC1</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x41</span>,<span class="number">0x41</span>,<span class="number">0xF1</span>,<span class="number">0x01</span>,</span><br><span class="line">  <span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0xD3</span>,<span class="number">0x33</span>,</span><br><span class="line">  <span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x3F</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x7F</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x18</span>,<span class="number">0x06</span>,</span><br><span class="line">  <span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x7F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x7F</span>,<span class="number">0x40</span>,</span><br><span class="line">  <span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x30</span>,<span class="number">0x0C</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x07</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,</span><br><span class="line">  <span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x84</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,</span><br><span class="line">  <span class="number">0x84</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0xC4</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x84</span>,<span class="number">0x04</span>,</span><br><span class="line">  <span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x84</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0x44</span>,</span><br><span class="line">  <span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x84</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x84</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x84</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,</span><br><span class="line">  <span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,<span class="number">0x14</span>,<span class="number">0x12</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,</span><br><span class="line">  <span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x1F</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x12</span>,<span class="number">0x12</span>,<span class="number">0x0D</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0D</span>,<span class="number">0x12</span>,<span class="number">0x12</span>,<span class="number">0x12</span>,<span class="number">0x0D</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,</span><br><span class="line">  <span class="number">0x14</span>,<span class="number">0x12</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,<span class="number">0x14</span>,<span class="number">0x12</span>,<span class="number">0x11</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,</span><br><span class="line">  <span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0x0C</span>,<span class="number">0x03</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x54</span>,<span class="number">0x54</span>,<span class="number">0x58</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x7C</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x78</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x7C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xAA</span>,<span class="number">0xAA</span>,<span class="number">0xAA</span>,</span><br><span class="line">  <span class="number">0x28</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0x0C</span>,<span class="number">0x03</span>,<span class="number">0x7F</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x26</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x49</span>,<span class="number">0x32</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/************************************6*8的点阵************************************/</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> asc2_0806[][<span class="number">6</span>]PROGMEM =&#123;</span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;,<span class="comment">// sp</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x2f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;,<span class="comment">// !</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>&#125;,<span class="comment">// &quot;</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x7f</span>, <span class="number">0x14</span>, <span class="number">0x7f</span>, <span class="number">0x14</span>&#125;,<span class="comment">// #</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x2a</span>, <span class="number">0x7f</span>, <span class="number">0x2a</span>, <span class="number">0x12</span>&#125;,<span class="comment">// $</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x62</span>, <span class="number">0x64</span>, <span class="number">0x08</span>, <span class="number">0x13</span>, <span class="number">0x23</span>&#125;,<span class="comment">// %</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x22</span>, <span class="number">0x50</span>&#125;,<span class="comment">// &amp;</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;,<span class="comment">// &#x27;</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1c</span>, <span class="number">0x22</span>, <span class="number">0x41</span>, <span class="number">0x00</span>&#125;,<span class="comment">// (</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x22</span>, <span class="number">0x1c</span>, <span class="number">0x00</span>&#125;,<span class="comment">// )</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x08</span>, <span class="number">0x3E</span>, <span class="number">0x08</span>, <span class="number">0x14</span>&#125;,<span class="comment">// *</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x3E</span>, <span class="number">0x08</span>, <span class="number">0x08</span>&#125;,<span class="comment">// +</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA0</span>, <span class="number">0x60</span>, <span class="number">0x00</span>&#125;,<span class="comment">// ,</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>&#125;,<span class="comment">// -</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;,<span class="comment">// .</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x10</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x02</span>&#125;,<span class="comment">// /</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x51</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x3E</span>&#125;,<span class="comment">// 0</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x7F</span>, <span class="number">0x40</span>, <span class="number">0x00</span>&#125;,<span class="comment">// 1</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x42</span>, <span class="number">0x61</span>, <span class="number">0x51</span>, <span class="number">0x49</span>, <span class="number">0x46</span>&#125;,<span class="comment">// 2</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x41</span>, <span class="number">0x45</span>, <span class="number">0x4B</span>, <span class="number">0x31</span>&#125;,<span class="comment">// 3</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x14</span>, <span class="number">0x12</span>, <span class="number">0x7F</span>, <span class="number">0x10</span>&#125;,<span class="comment">// 4</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x27</span>, <span class="number">0x45</span>, <span class="number">0x45</span>, <span class="number">0x45</span>, <span class="number">0x39</span>&#125;,<span class="comment">// 5</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3C</span>, <span class="number">0x4A</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x30</span>&#125;,<span class="comment">// 6</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x71</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x03</span>&#125;,<span class="comment">// 7</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x36</span>&#125;,<span class="comment">// 8</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x29</span>, <span class="number">0x1E</span>&#125;,<span class="comment">// 9</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x36</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;,<span class="comment">// :</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x56</span>, <span class="number">0x36</span>, <span class="number">0x00</span>, <span class="number">0x00</span>&#125;,<span class="comment">// ;</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x14</span>, <span class="number">0x22</span>, <span class="number">0x41</span>, <span class="number">0x00</span>&#125;,<span class="comment">// &lt;</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>&#125;,<span class="comment">// =</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x22</span>, <span class="number">0x14</span>, <span class="number">0x08</span>&#125;,<span class="comment">// &gt;</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x51</span>, <span class="number">0x09</span>, <span class="number">0x06</span>&#125;,<span class="comment">// ?</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x32</span>, <span class="number">0x49</span>, <span class="number">0x59</span>, <span class="number">0x51</span>, <span class="number">0x3E</span>&#125;,<span class="comment">// @</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7C</span>, <span class="number">0x12</span>, <span class="number">0x11</span>, <span class="number">0x12</span>, <span class="number">0x7C</span>&#125;,<span class="comment">// A</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x36</span>&#125;,<span class="comment">// B</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x22</span>&#125;,<span class="comment">// C</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x22</span>, <span class="number">0x1C</span>&#125;,<span class="comment">// D</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x41</span>&#125;,<span class="comment">// E</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x09</span>, <span class="number">0x09</span>, <span class="number">0x09</span>, <span class="number">0x01</span>&#125;,<span class="comment">// F</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x41</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x7A</span>&#125;,<span class="comment">// G</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x7F</span>&#125;,<span class="comment">// H</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x7F</span>, <span class="number">0x41</span>, <span class="number">0x00</span>&#125;,<span class="comment">// I</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x41</span>, <span class="number">0x3F</span>, <span class="number">0x01</span>&#125;,<span class="comment">// J</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x08</span>, <span class="number">0x14</span>, <span class="number">0x22</span>, <span class="number">0x41</span>&#125;,<span class="comment">// K</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>&#125;,<span class="comment">// L</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x02</span>, <span class="number">0x7F</span>&#125;,<span class="comment">// M</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x7F</span>&#125;,<span class="comment">// N</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x3E</span>&#125;,<span class="comment">// O</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x09</span>, <span class="number">0x09</span>, <span class="number">0x09</span>, <span class="number">0x06</span>&#125;,<span class="comment">// P</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x41</span>, <span class="number">0x51</span>, <span class="number">0x21</span>, <span class="number">0x5E</span>&#125;,<span class="comment">// Q</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x09</span>, <span class="number">0x19</span>, <span class="number">0x29</span>, <span class="number">0x46</span>&#125;,<span class="comment">// R</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x46</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x49</span>, <span class="number">0x31</span>&#125;,<span class="comment">// S</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x7F</span>, <span class="number">0x01</span>, <span class="number">0x01</span>&#125;,<span class="comment">// T</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x3F</span>&#125;,<span class="comment">// U</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x20</span>, <span class="number">0x1F</span>&#125;,<span class="comment">// V</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x40</span>, <span class="number">0x38</span>, <span class="number">0x40</span>, <span class="number">0x3F</span>&#125;,<span class="comment">// W</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x63</span>, <span class="number">0x14</span>, <span class="number">0x08</span>, <span class="number">0x14</span>, <span class="number">0x63</span>&#125;,<span class="comment">// X</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x70</span>, <span class="number">0x08</span>, <span class="number">0x07</span>&#125;,<span class="comment">// Y</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x61</span>, <span class="number">0x51</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x43</span>&#125;,<span class="comment">// Z</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x00</span>&#125;,<span class="comment">// [</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x55</span>, <span class="number">0x2A</span>, <span class="number">0x55</span>, <span class="number">0x2A</span>, <span class="number">0x55</span>&#125;,<span class="comment">// 55</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x41</span>, <span class="number">0x7F</span>, <span class="number">0x00</span>&#125;,<span class="comment">// ]</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>&#125;,<span class="comment">// ^</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x40</span>&#125;,<span class="comment">// _</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x00</span>&#125;,<span class="comment">// &#x27;</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x78</span>&#125;,<span class="comment">// a</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x48</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x38</span>&#125;,<span class="comment">// b</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x20</span>&#125;,<span class="comment">// c</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x48</span>, <span class="number">0x7F</span>&#125;,<span class="comment">// d</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x18</span>&#125;,<span class="comment">// e</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x7E</span>, <span class="number">0x09</span>, <span class="number">0x01</span>, <span class="number">0x02</span>&#125;,<span class="comment">// f</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0xA4</span>, <span class="number">0xA4</span>, <span class="number">0xA4</span>, <span class="number">0x7C</span>&#125;,<span class="comment">// g</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x78</span>&#125;,<span class="comment">// h</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x7D</span>, <span class="number">0x40</span>, <span class="number">0x00</span>&#125;,<span class="comment">// i</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x84</span>, <span class="number">0x7D</span>, <span class="number">0x00</span>&#125;,<span class="comment">// j</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x10</span>, <span class="number">0x28</span>, <span class="number">0x44</span>, <span class="number">0x00</span>&#125;,<span class="comment">// k</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x7F</span>, <span class="number">0x40</span>, <span class="number">0x00</span>&#125;,<span class="comment">// l</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7C</span>, <span class="number">0x04</span>, <span class="number">0x18</span>, <span class="number">0x04</span>, <span class="number">0x78</span>&#125;,<span class="comment">// m</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7C</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x78</span>&#125;,<span class="comment">// n</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x38</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x38</span>&#125;,<span class="comment">// o</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0xFC</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x18</span>&#125;,<span class="comment">// p</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x24</span>, <span class="number">0x24</span>, <span class="number">0x18</span>, <span class="number">0xFC</span>&#125;,<span class="comment">// q</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x7C</span>, <span class="number">0x08</span>, <span class="number">0x04</span>, <span class="number">0x04</span>, <span class="number">0x08</span>&#125;,<span class="comment">// r</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x48</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, <span class="number">0x20</span>&#125;,<span class="comment">// s</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x3F</span>, <span class="number">0x44</span>, <span class="number">0x40</span>, <span class="number">0x20</span>&#125;,<span class="comment">// t</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3C</span>, <span class="number">0x40</span>, <span class="number">0x40</span>, <span class="number">0x20</span>, <span class="number">0x7C</span>&#125;,<span class="comment">// u</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x20</span>, <span class="number">0x1C</span>&#125;,<span class="comment">// v</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x3C</span>, <span class="number">0x40</span>, <span class="number">0x30</span>, <span class="number">0x40</span>, <span class="number">0x3C</span>&#125;,<span class="comment">// w</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x28</span>, <span class="number">0x10</span>, <span class="number">0x28</span>, <span class="number">0x44</span>&#125;,<span class="comment">// x</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x1C</span>, <span class="number">0xA0</span>, <span class="number">0xA0</span>, <span class="number">0xA0</span>, <span class="number">0x7C</span>&#125;,<span class="comment">// y</span></span><br><span class="line">&#123;<span class="number">0x00</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0x54</span>, <span class="number">0x4C</span>, <span class="number">0x44</span>&#125;,<span class="comment">// z</span></span><br><span class="line">&#123;<span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>, <span class="number">0x14</span>&#125;,<span class="comment">// horiz lines</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//8*16 ASCII字符集点阵</span></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> asc2_1608[][<span class="number">16</span>] PROGMEM =&#123;    </span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot; &quot;,0*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x33</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;!&quot;,1*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x0C</span>,<span class="number">0x06</span>,<span class="number">0x10</span>,<span class="number">0x0C</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&quot;&quot;,2*/</span></span><br><span class="line">&#123;<span class="number">0x40</span>,<span class="number">0xC0</span>,<span class="number">0x78</span>,<span class="number">0x40</span>,<span class="number">0xC0</span>,<span class="number">0x78</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x3F</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x3F</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;#&quot;,3*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x88</span>,<span class="number">0xFC</span>,<span class="number">0x08</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0xFF</span>,<span class="number">0x21</span>,<span class="number">0x1E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;$&quot;,4*/</span></span><br><span class="line">&#123;<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x1C</span>,<span class="number">0x03</span>,<span class="number">0x1E</span>,<span class="number">0x21</span>,<span class="number">0x1E</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;%&quot;,5*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1E</span>,<span class="number">0x21</span>,<span class="number">0x23</span>,<span class="number">0x24</span>,<span class="number">0x19</span>,<span class="number">0x27</span>,<span class="number">0x21</span>,<span class="number">0x10</span>&#125;,<span class="comment">/*&quot;&amp;&quot;,6*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x16</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#x27;&quot;,7*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;(&quot;,8*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;)&quot;,9*/</span></span><br><span class="line">&#123;<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x01</span>,<span class="number">0x0F</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;*&quot;,10*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x1F</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;+&quot;,11*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xB0</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;,&quot;,12*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>&#125;,<span class="comment">/*&quot;-&quot;,13*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;.&quot;,14*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x60</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x18</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;/&quot;,15*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;0&quot;,16*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;1&quot;,17*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x28</span>,<span class="number">0x24</span>,<span class="number">0x22</span>,<span class="number">0x21</span>,<span class="number">0x30</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;2&quot;,18*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x48</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;3&quot;,19*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x04</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x3F</span>,<span class="number">0x24</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;4&quot;,20*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x19</span>,<span class="number">0x21</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;5&quot;,21*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;6&quot;,22*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;7&quot;,23*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x22</span>,<span class="number">0x21</span>,<span class="number">0x21</span>,<span class="number">0x22</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;8&quot;,24*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x31</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x11</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;9&quot;,25*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;:&quot;,26*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;;&quot;,27*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&lt;&quot;,28*/</span></span><br><span class="line">&#123;<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;=&quot;,29*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&gt;&quot;,30*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x48</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x36</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;?&quot;,31*/</span></span><br><span class="line">&#123;<span class="number">0xC0</span>,<span class="number">0x30</span>,<span class="number">0xC8</span>,<span class="number">0x28</span>,<span class="number">0xE8</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x27</span>,<span class="number">0x24</span>,<span class="number">0x23</span>,<span class="number">0x14</span>,<span class="number">0x0B</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;@&quot;,32*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x38</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3C</span>,<span class="number">0x23</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x27</span>,<span class="number">0x38</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;A&quot;,33*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;B&quot;,34*/</span></span><br><span class="line">&#123;<span class="number">0xC0</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;C&quot;,35*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;D&quot;,36*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xE8</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x23</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;E&quot;,37*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xE8</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;F&quot;,38*/</span></span><br><span class="line">&#123;<span class="number">0xC0</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x22</span>,<span class="number">0x1E</span>,<span class="number">0x02</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;G&quot;,39*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x21</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;H&quot;,40*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;I&quot;,41*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;J&quot;,42*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0xC0</span>,<span class="number">0x28</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x01</span>,<span class="number">0x26</span>,<span class="number">0x38</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;K&quot;,43*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;L&quot;,44*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;M&quot;,45*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x30</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;N&quot;,46*/</span></span><br><span class="line">&#123;<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;O&quot;,47*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;P&quot;,48*/</span></span><br><span class="line">&#123;<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x18</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x38</span>,<span class="number">0x50</span>,<span class="number">0x4F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Q&quot;,49*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;R&quot;,50*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x20</span>,<span class="number">0x21</span>,<span class="number">0x21</span>,<span class="number">0x22</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;S&quot;,51*/</span></span><br><span class="line">&#123;<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;T&quot;,52*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;U&quot;,53*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0x78</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x38</span>,<span class="number">0x0E</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;V&quot;,54*/</span></span><br><span class="line">&#123;<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x3C</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x3C</span>,<span class="number">0x03</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;W&quot;,55*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0x68</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x68</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x2C</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x2C</span>,<span class="number">0x30</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;X&quot;,56*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0xC8</span>,<span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Y&quot;,57*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x38</span>,<span class="number">0x26</span>,<span class="number">0x21</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;Z&quot;,58*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;[&quot;,59*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x38</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;\&quot;,60*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;]&quot;,61*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;^&quot;,62*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>&#125;,<span class="comment">/*&quot;_&quot;,63*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;`&quot;,64*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x19</span>,<span class="number">0x24</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;a&quot;,65*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;b&quot;,66*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;c&quot;,67*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x88</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;d&quot;,68*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x13</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;e&quot;,69*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;f&quot;,70*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x6B</span>,<span class="number">0x94</span>,<span class="number">0x94</span>,<span class="number">0x94</span>,<span class="number">0x93</span>,<span class="number">0x60</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;g&quot;,71*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;h&quot;,72*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x98</span>,<span class="number">0x98</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;i&quot;,73*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x98</span>,<span class="number">0x98</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;j&quot;,74*/</span></span><br><span class="line">&#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x24</span>,<span class="number">0x02</span>,<span class="number">0x2D</span>,<span class="number">0x30</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;k&quot;,75*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;l&quot;,76*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>&#125;,<span class="comment">/*&quot;m&quot;,77*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;n&quot;,78*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;o&quot;,79*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xFF</span>,<span class="number">0xA1</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;p&quot;,80*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0xA0</span>,<span class="number">0xFF</span>,<span class="number">0x80</span>&#125;,<span class="comment">/*&quot;q&quot;,81*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;r&quot;,82*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x33</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x19</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;s&quot;,83*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xE0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;t&quot;,84*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">/*&quot;u&quot;,85*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x0E</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;v&quot;,86*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x0F</span>,<span class="number">0x30</span>,<span class="number">0x0C</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;w&quot;,87*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x31</span>,<span class="number">0x2E</span>,<span class="number">0x0E</span>,<span class="number">0x31</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;x&quot;,88*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x81</span>,<span class="number">0x8E</span>,<span class="number">0x70</span>,<span class="number">0x18</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;y&quot;,89*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x30</span>,<span class="number">0x2C</span>,<span class="number">0x22</span>,<span class="number">0x21</span>,<span class="number">0x30</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;z&quot;,90*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x7C</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>&#125;,<span class="comment">/*&quot;&#123;&quot;,91*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;|&quot;,92*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x7C</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;&#125;&quot;,93*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;~&quot;,94*/</span></span><br><span class="line">&#125;;  </span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> Hzk[][<span class="number">32</span>] PROGMEM =&#123;</span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xFF</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0xFF</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;中&quot;,0*/</span></span><br><span class="line">&#123;<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x5F</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x75</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x5F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x0F</span>,<span class="number">0x09</span>,<span class="number">0x49</span>,<span class="number">0x89</span>,<span class="number">0x79</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x0F</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;景&quot;,1*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x02</span>,<span class="number">0x42</span>,<span class="number">0x4A</span>,<span class="number">0xCA</span>,<span class="number">0x4A</span>,<span class="number">0x4A</span>,<span class="number">0xCA</span>,<span class="number">0x4A</span>,<span class="number">0x4A</span>,<span class="number">0x42</span>,<span class="number">0x02</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x40</span>,<span class="number">0x50</span>,<span class="number">0x4C</span>,<span class="number">0x43</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x4F</span>,<span class="number">0x50</span>,<span class="number">0x50</span>,<span class="number">0x5C</span>,<span class="number">0x40</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;园&quot;,2*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xFF</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x7F</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x9F</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;电&quot;,3*/</span></span><br><span class="line">&#123;<span class="number">0x80</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0xE2</span>,<span class="number">0xA2</span>,<span class="number">0x92</span>,<span class="number">0x8A</span>,<span class="number">0x86</span>,<span class="number">0x82</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;子&quot;,4*/</span></span><br><span class="line">&#123;<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xFF</span>,<span class="number">0x10</span>,<span class="number">0x90</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xFF</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x44</span>,<span class="number">0x82</span>,<span class="number">0x7F</span>,<span class="number">0x01</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x43</span>,<span class="number">0x2C</span>,<span class="number">0x10</span>,<span class="number">0x28</span>,<span class="number">0x46</span>,<span class="number">0x81</span>,<span class="number">0x80</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;技&quot;,5*/</span></span><br><span class="line">&#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xD0</span>,<span class="number">0x30</span>,<span class="number">0xFF</span>,<span class="number">0x30</span>,<span class="number">0xD0</span>,<span class="number">0x12</span>,<span class="number">0x1C</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x00</span>&#125;,<span class="comment">/*&quot;术&quot;,6*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电量显示还不会进来坐坐（MCP3421）</title>
      <link href="/2021/01/15/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/4.%E7%94%B5%E9%87%8F%E6%98%BE%E7%A4%BA%E8%BF%98%E4%B8%8D%E4%BC%9A%E8%BF%9B%E6%9D%A5%E5%9D%90%E5%9D%90%EF%BC%88MCP3421%EF%BC%89/"/>
      <url>/2021/01/15/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/4.%E7%94%B5%E9%87%8F%E6%98%BE%E7%A4%BA%E8%BF%98%E4%B8%8D%E4%BC%9A%E8%BF%9B%E6%9D%A5%E5%9D%90%E5%9D%90%EF%BC%88MCP3421%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>最近在做一个嵌入式的设备，该设备是移动电源供电，所以就设计到了电池电量的检测和显示剩余电量百分比，我想这个功能在嵌入式产品中是比较常见的。这里我们用到的电压采集的芯片为MCP3421，这是一个iic驱动的芯片支持最高18位的采集精度，虽然做电量显示不需要这么高的精度，但是这样的进度不得不羡慕一下，连续两周的奋战，终于从坑里爬出来了。不想让大家在像我这样爬的，一两天能完成的事不需要煎熬一两周。</p><h2 id="二-前序"><a href="#二-前序" class="headerlink" title="二.前序"></a>二.前序</h2><p>其实不不打算说的，但是在搜查阅资料的时候，真的是太坑了。关于MCP3421芯片的驱动程序网上也有，所以我就参考着来写了，结果各种试水，各种惨，有IIC通讯时SDA和SCL电平写错的，有配置数据写错的（读操作和写操作），最好都怀疑他们上传代码的时候有没有编译运行和测试。话又说回来人家上传什么，是人家的权利，总结一下教训，大家以官方资料为准，进行程序的编写</p><p>出错无非就是IIC通讯的时候没通讯上，那我们就看输出的两个管脚SDA和SCL输出的波形对不对，我刚开始也没通讯上，最后用逻辑分析仪抓的波形，修改程序才写好的，感觉好的工具事半功倍，废话不多说了，直接给大家上干货</p><h2 id="三-MCP3421"><a href="#三-MCP3421" class="headerlink" title="三.MCP3421"></a>三.MCP3421</h2><h3 id="1-官方资料下载"><a href="#1-官方资料下载" class="headerlink" title="1.官方资料下载"></a>1.官方资料下载</h3><blockquote><p><a href="https://wwi.lanzous.com/b0b991t1g">mcp3421官方资料（中文+英文版）</a><br>密码:4pzc</p></blockquote><h3 id="2-芯片讲解"><a href="#2-芯片讲解" class="headerlink" title="2.芯片讲解"></a>2.芯片讲解</h3><p><strong>2.1芯片连接原理图</strong><br><img src="https://img-blog.csdnimg.cn/20210115165707686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>2.2 设置配置寄存器</strong></p><blockquote><p>配置8位寄存器的值<br><img src="https://img-blog.csdnimg.cn/20210115170036769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210115170133134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><p>相信大家看到上面的图片就能明白</p><ul><li>默认的配置为 连续转换+12位采样率+x1的增益（增益就是将你输入的信号放大）  1001 0000   所以就是 0x90</li><li>一般采用 连续转换+18位采样率+x1的增益 1001 1100 就是 0x9c</li><li>单次转换+18位采样率+x1的增益 1000 1100 就是 0x8c<br>根据自己的需求配置就可以了</li></ul><p><strong>2.3 读写的配置</strong><br>这个很好理解，我们在对芯片进行读数据或者写配置的时候，首先要写入参数，让芯片进入不同的模式<br>也是8位一个字节包含 器件代码（4位）+地址位（3位）+R&#x2F;W 位 MCP3421器件代码为 1101，地址位出厂没有要求就是 000，而读数取据模式 R&#x2F;W位位 1，写模式为0</p><ul><li>读模式 1101 0001   0xd1</li><li>写模式 1101 0000   0xd0<br><img src="https://img-blog.csdnimg.cn/20210115171151817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><p><strong>2.4采集电压转换</strong><br>我们采集到的是，18位的数据需要通过公式计算才能转换成实际测量的电压值</p><p>转换公式如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入电压 = （输出代）* （LSB/PGA）</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210115172353193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>PGA为增益，增益有 1，2，4，8支持四中，通常我们选择为1<br>LSB为分辨率<br><img src="https://img-blog.csdnimg.cn/20210115172742637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210115172823261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>注意公式里面运算都是以V为单位，输出电压的范围为-2.048-0和0-2.048V，需要我们测量转换再次转换一下就好了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转化为实际电压</span></span><br><span class="line">data = 输出电压 /<span class="number">0.163</span>;  <span class="comment">//0.163为实际输入1v时的测量电压值</span></span><br></pre></td></tr></table></figure><h2 id="四-电压转电量思路"><a href="#四-电压转电量思路" class="headerlink" title="四.电压转电量思路"></a>四.电压转电量思路</h2><ol><li><p>我们通过MCP3421芯片最终才回来的是实际的电压，如何转换为剩余的电量那，我在测试的时候该芯片可以采0-12v的电压，但是电池输出为12v到7v左右设置就不能正常工作了所以我想到下面方法</p></li><li><p>我们需要测量出满电时的电池输出电压battery_H，和设备不能工作的时候的临界电压值battery_L</p></li><li><p>用下面的公式来计算，通常采回来的电压是float类型，需要转换为int类型显示剩余电量的百分比</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">剩余电量百分比 = (<span class="type">int</span>)(((采集电压 - battery_L)*<span class="number">100</span>) / (battery_H - battery_L))</span><br></pre></td></tr></table></figure><h2 id="五-程序"><a href="#五-程序" class="headerlink" title="五.程序"></a>五.程序</h2><h3 id="1-C程序"><a href="#1-C程序" class="headerlink" title="1.C程序"></a>1.C程序</h3><blockquote><p><a href="https://gitee.com/oldzhai/mcp3421.git">代码比较长，码云上代码下载地址</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/stat.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span>  <span class="comment">//open</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span> <span class="comment">//read</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u8  unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u16 unsigned short int</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> u32 unsigned int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//gpio 电量采集                       </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> scl 919</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sda 916</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这里通过linux 打开文件的方式控制gpio所以比较耗时间</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SCL_L set_gpioValue(scl,0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SCL_H set_gpioValue(scl,1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SDA_L set_gpioValue(sda,0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SDA_H set_gpioValue(sda,1)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SCL_OUT set_gpioDirection(scl, <span class="string">&quot;out&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SDA_OUT set_gpioDirection(sda, <span class="string">&quot;out&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SDA_IN  set_gpioDirection(sda, <span class="string">&quot;in&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> I2C_SDA_GET get_gpioValue(sda) </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//MCP342 出厂时如果未指定地址则为 1101 000x 最后一位x 如果是写配置则为1 读则为0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MCP3421_ADDREAD                 0xd1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MCP3421_ADDWRITE                0Xd0</span></span><br><span class="line"><span class="comment">//写入配置参数 如0x8c,0x9c; 8:单次转换 9：连续转换；c:18位 3.75 sps ，PGA=1;</span></span><br><span class="line"><span class="comment">//mcp3421初始化不配置 默认为0x90 连续转换 12位，PGA =1 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MCP3421_OneShot_18BIT_X1        0x8c</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MCP3421_MoreShot_18BIT_X1       0x9c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//电池 电量显示</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> battery_H   12   <span class="comment">//电池的满电电压</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> battery_L   8    <span class="comment">//电池的下限电压(需要实际测试)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//create gpio file  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">creat_gpio</span><span class="params">(<span class="type">int</span> n)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">    FILE * fp =fopen(<span class="string">&quot;/sys/class/gpio/export&quot;</span>,<span class="string">&quot;w&quot;</span>);  </span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="literal">NULL</span>)  </span><br><span class="line">        perror(<span class="string">&quot;export open filed&quot;</span>);  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%d&quot;</span>,n);  </span><br><span class="line">    fclose(fp);  </span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置gpio的方向 &quot;in&quot; or &quot;out&quot;  </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_gpioDirection</span><span class="params">(<span class="type">int</span> n,<span class="type">char</span> *direction)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> path[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;  </span><br><span class="line">    <span class="built_in">sprintf</span>(path,<span class="string">&quot;/sys/class/gpio/gpio%d/direction&quot;</span>,n);  </span><br><span class="line">    FILE * fp =fopen(path,<span class="string">&quot;w&quot;</span>);  </span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="literal">NULL</span>)  </span><br><span class="line">        perror(<span class="string">&quot;direction open filed&quot;</span>);  </span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">&quot;%s&quot;</span>,direction);  </span><br><span class="line">    fclose(fp);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置gpio的电平</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_gpioValue</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> value)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> path[<span class="number">64</span>];      </span><br><span class="line">    <span class="built_in">snprintf</span>(path, <span class="keyword">sizeof</span>(path), <span class="string">&quot;/sys/class/gpio/gpio%d/value&quot;</span>, n);</span><br><span class="line">FILE *fp = fopen(path, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)  </span><br><span class="line">        perror(<span class="string">&quot;direction open filed&quot;</span>);  </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">&quot;%d&quot;</span>, value);</span><br><span class="line">fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取gpio的值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_gpioValue</span><span class="params">(<span class="type">int</span> n)</span>  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="type">char</span> path[<span class="number">64</span>];  </span><br><span class="line">    <span class="type">char</span> value_str[<span class="number">3</span>];  </span><br><span class="line">    <span class="type">int</span> fd;  </span><br><span class="line">  </span><br><span class="line">    <span class="built_in">snprintf</span>(path, <span class="keyword">sizeof</span>(path), <span class="string">&quot;/sys/class/gpio/gpio%d/value&quot;</span>, n);  </span><br><span class="line">    fd = open(path, O_RDONLY);  </span><br><span class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>) &#123;  </span><br><span class="line">        perror(<span class="string">&quot;Failed to open gpio value for reading!&quot;</span>);  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (read(fd, value_str, <span class="number">3</span>) &lt; <span class="number">0</span>) &#123;  </span><br><span class="line">        perror(<span class="string">&quot;Failed to read value!&quot;</span>);  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    close(fd);  </span><br><span class="line">    <span class="keyword">return</span> (atoi(value_str));  </span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// IIC传输延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Delay</span><span class="params">(<span class="type">int</span> t)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;t; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">12</span>; j++)</span><br><span class="line">&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化scl和sda为高电平</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">creat_gpio(scl);</span><br><span class="line">creat_gpio(sda);</span><br><span class="line"></span><br><span class="line">set_gpioDirection(scl, <span class="string">&quot;out&quot;</span>); <span class="comment">//开发板调为输出模式默认为低电平</span></span><br><span class="line">set_gpioDirection(sda, <span class="string">&quot;out&quot;</span>);</span><br><span class="line"></span><br><span class="line">set_gpioValue(scl,<span class="number">1</span>);</span><br><span class="line">set_gpioValue(sda,<span class="number">1</span>);</span><br><span class="line">usleep(<span class="number">100</span>);  <span class="comment">//保持高电平稳定</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">* 函数名         : I2cStart()</span></span><br><span class="line"><span class="comment">* 函数功能 : 起始信号：在SCL时钟信号在高电平期间SDA信号产生一个下降沿</span></span><br><span class="line"><span class="comment">* 输入           : 无</span></span><br><span class="line"><span class="comment">* 输出          : 无</span></span><br><span class="line"><span class="comment">* 备注           : 起始之后SDA和SCL都为0</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Start</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_SDA_OUT; <span class="comment">//设置输出模式(会将sda拉低)</span></span><br><span class="line">I2C_Delay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">I2C_SDA_H;</span><br><span class="line">I2C_SCL_H;</span><br><span class="line">I2C_SDA_L;</span><br><span class="line">I2C_SCL_L;</span><br><span class="line">I2C_Delay(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">* 函数名         : I2cStop()</span></span><br><span class="line"><span class="comment">* 函数功能 : 终止信号：在SCL时钟信号高电平期间SDA信号产生一个上升沿</span></span><br><span class="line"><span class="comment">* 输入           : 无</span></span><br><span class="line"><span class="comment">* 输出          : 无</span></span><br><span class="line"><span class="comment">* 备注           : 结束之后保持SDA和SCL都为1；表示总线空闲</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Stop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_SDA_OUT; <span class="comment">//设置输出模式(会将sda拉低)</span></span><br><span class="line">I2C_Delay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">I2C_SDA_L;</span><br><span class="line">I2C_SCL_H;</span><br><span class="line">I2C_SDA_H;</span><br><span class="line">I2C_Delay(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">* 函数名         : IIC_Wait_Ack()</span></span><br><span class="line"><span class="comment">* 函数功能 : 检查应答信号：在第9个时钟信号为高电平期间主机释放sda，从机拉低sda</span></span><br><span class="line"><span class="comment">* 输入           : 从机</span></span><br><span class="line"><span class="comment">* 输出          : 返回 0有应答，返回1 无应答</span></span><br><span class="line"><span class="comment">* 备注           : </span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">I2C_Wait_Ack</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">I2C_SDA_IN;               <span class="comment">//设置sda为输入模式</span></span><br><span class="line">I2C_SCL_H;</span><br><span class="line"><span class="keyword">while</span>(I2C_SDA_GET)<span class="comment">//等待应答，也就是等待从设备把SDA拉低</span></span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span>( i &gt; <span class="number">200</span>) <span class="comment">//如果超过时间没有应答发送失败，或者为非应答，表示接收结束</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_SCL_L;</span><br><span class="line">I2C_SCL_H;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;no ack\r\n&quot;</span>); <span class="comment">//没有应答</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">I2C_SCL_L;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//应答</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_Ack</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_SDA_OUT; <span class="comment">//会将sda拉低</span></span><br><span class="line">I2C_Delay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">I2C_SCL_L;</span><br><span class="line">I2C_SDA_L; </span><br><span class="line">I2C_SCL_H;</span><br><span class="line">I2C_Delay(<span class="number">1</span>); <span class="comment">//从机检测sda的低电平</span></span><br><span class="line">I2C_SCL_L;  <span class="comment">//第9个时钟周期结束</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//非应答</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C_NAck</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_SDA_OUT; <span class="comment">//会将sda拉低</span></span><br><span class="line">I2C_Delay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">I2C_SCL_L;</span><br><span class="line">I2C_SDA_H; <span class="comment">//至高sda 表示不应答 </span></span><br><span class="line">I2C_SCL_H;</span><br><span class="line">I2C_Delay(<span class="number">1</span>); <span class="comment">//从机检测sda的高电平</span></span><br><span class="line">I2C_SCL_L; <span class="comment">//第9个时钟周期结束</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">* 函数名         : I2cSendByte(unsigned char dat)</span></span><br><span class="line"><span class="comment">* 函数功能 : 通过I2C发送一个字节。在SCL时钟信号高电平期间，保持发送信号SDA保持稳定</span></span><br><span class="line"><span class="comment">* 输入           : num</span></span><br><span class="line"><span class="comment">* 输出          : 0或1。发送成功返回1，发送失败返回0</span></span><br><span class="line"><span class="comment">* 备注           : 发送完一个字节SCL=0,SDA=1</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">I2C_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_SDA_OUT; <span class="comment">//会将sda拉低</span></span><br><span class="line">I2C_Delay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;<span class="number">8</span>;a++)<span class="comment">//要发送8位，从最高位开始</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_SCL_L;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dat&amp;<span class="number">0x80</span>)</span><br><span class="line">&#123;</span><br><span class="line">I2C_SDA_H;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">I2C_SDA_L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        dat&lt;&lt;=<span class="number">1</span>;    </span><br><span class="line">I2C_SCL_H;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">I2C_SCL_L;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">* 函数名         : I2cReadByte()</span></span><br><span class="line"><span class="comment">* 函数功能   : 使用I2c读取一个字节</span></span><br><span class="line"><span class="comment">* 输入           : 无</span></span><br><span class="line"><span class="comment">* 输出          : dat</span></span><br><span class="line"><span class="comment">* 备注           : 接收完一个字节SCL=0,SDA=1.</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> <span class="title function_">I2C_ReadByte</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">I2C_SDA_IN;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> a=<span class="number">0</span>,dat=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;<span class="number">8</span>;a++)<span class="comment">//接收8个字节</span></span><br><span class="line">&#123;</span><br><span class="line">dat&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">I2C_SCL_L;</span><br><span class="line">I2C_SCL_H;</span><br><span class="line"><span class="keyword">if</span>( I2C_SDA_GET )</span><br><span class="line">&#123;</span><br><span class="line">dat |= <span class="number">0x01</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">dat &amp;= <span class="number">0xfe</span>;</span><br><span class="line">&#125;</span><br><span class="line">I2C_SCL_L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//MCP3421写配置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Write_MCP3421</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> WR_Data)</span></span><br><span class="line">&#123;</span><br><span class="line">  I2C_Start();</span><br><span class="line">   <span class="comment">//写入地址   及 最后位为0，是写操作配置   最后位为1，是读操作配置</span></span><br><span class="line">  I2C_SendByte(<span class="number">0xd0</span>);   <span class="comment">// 1101 a2 a1 a0 0  发送给第一个字节数据 MCP3421地址字节+R/W命令</span></span><br><span class="line">                                 <span class="comment">// 1101 0000 0xd0 写模式</span></span><br><span class="line">  I2C_Wait_Ack(); </span><br><span class="line">  I2C_SendByte(WR_Data); <span class="comment">//RDY O/C C1 C0 S1 S0 G1 G0    </span></span><br><span class="line">                         </span><br><span class="line">  I2C_Wait_Ack();</span><br><span class="line">  I2C_Stop();  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//MCP3421读数据 </span></span><br><span class="line"><span class="type">float</span> <span class="title function_">READ_MCP3421</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span>  elech;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> elecm;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> elecl;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> config;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> AD_B_Result;</span><br><span class="line"><span class="type">float</span> AD_F_Result=<span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> LSB;</span><br><span class="line">    <span class="type">int</span> PGA;</span><br><span class="line">    I2C_Start();</span><br><span class="line">    I2C_SendByte(<span class="number">0xd1</span>);                    <span class="comment">//0xd1=0b11010001, 最后一位1表示单片机接收数据</span></span><br><span class="line">    I2C_Wait_Ack();                      <span class="comment">//MCP3421发出应答ACK信号</span></span><br><span class="line">    <span class="comment">//读取第二个字节数据 Upper Data Byte</span></span><br><span class="line">    elech=(<span class="type">long</span> <span class="type">int</span>)I2C_ReadByte();       <span class="comment">//NULL NULL NULL NULL NULL NULL D17 D16</span></span><br><span class="line">    I2C_Ack();                             <span class="comment">//主器件发出应答信号</span></span><br><span class="line">    <span class="comment">//读取第三个字节数据 Lower Data Byte</span></span><br><span class="line">    elecm=(<span class="type">long</span> <span class="type">int</span>)I2C_ReadByte();       <span class="comment">//D15 D14 D13 D12 D11 D10 D9 D8</span></span><br><span class="line">    </span><br><span class="line">    I2C_Ack();                              <span class="comment">////主器件发出应答信号</span></span><br><span class="line">    </span><br><span class="line">    elecl=(<span class="type">long</span> <span class="type">int</span>)I2C_ReadByte();       <span class="comment">//D7 D6 D5 D4 D3 D2 D1 D0</span></span><br><span class="line">    I2C_Ack();</span><br><span class="line">    config = (<span class="type">long</span> <span class="type">int</span>)(I2C_ReadByte());  <span class="comment">//RDY C1 C0 O/C S1 S0 G1 G0</span></span><br><span class="line">    I2C_NAck();<span class="comment">// 停止接收</span></span><br><span class="line">    I2C_Stop();</span><br><span class="line"></span><br><span class="line">  <span class="comment">//开始进行数据转化</span></span><br><span class="line">    AD_B_Result=(elech&lt;&lt;<span class="number">16</span>)|(elecm&lt;&lt;<span class="number">8</span>)|(elecl); <span class="comment">//将三个数据进行整合，整合成一个24位的数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    AD_B_Result=AD_B_Result&amp;<span class="number">0x01ffffff</span>;          <span class="comment">//由于数据elech的前6个字节没有用，所以将其清零</span></span><br><span class="line">  </span><br><span class="line">LSB = (<span class="type">float</span>)(<span class="number">2.0</span> * <span class="number">2.048</span>) / <span class="number">262144</span>;  <span class="comment">//公式 (2*Vref(2.048))/2^n n为分辨率 12,14,16,18 </span></span><br><span class="line"> <span class="comment">//18为计算为15.625uv</span></span><br><span class="line">    PGA = <span class="number">1</span>; <span class="comment">//增益为1</span></span><br><span class="line">    AD_F_Result = (<span class="type">float</span>)(LSB * AD_B_Result)/PGA; <span class="comment">//输出范围 -2.048v-0v-2.048v</span></span><br><span class="line">    <span class="keyword">return</span> AD_F_Result;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">get_adc</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> sum = <span class="number">0.0</span>;</span><br><span class="line"><span class="type">float</span> data = <span class="number">0.0</span>;</span><br><span class="line"><span class="comment">//为了稳定获取10次求平均数</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum += READ_MCP3421();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//转化为实际电压</span></span><br><span class="line">data = (sum / <span class="number">10</span>) /<span class="number">0.163</span>;  <span class="comment">//0.163为实际输入1v时的测量值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> data; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> data = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> show = <span class="number">0</span>; <span class="comment">//剩余电量百分比</span></span><br><span class="line"></span><br><span class="line">I2C_Init();</span><br><span class="line"><span class="comment">//写入配置参数 如0x8c,0x9c; 8:单次转换 9：连续转换；c:18位 3.75 sps ，PGA=1;</span></span><br><span class="line">Write_MCP3421(<span class="number">0X9C</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//获取到的电压值</span></span><br><span class="line">data = get_adc();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;data=%.3fv\r\n&quot;</span>, data);</span><br><span class="line"></span><br><span class="line">show = (<span class="type">int</span>)(((data-battery_L)*<span class="number">100</span>)/(battery_H - battery_L));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;battery = %d%%\r\n&quot;</span>, show);</span><br><span class="line"></span><br><span class="line">sleep(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-测试结果"><a href="#2-测试结果" class="headerlink" title="2.测试结果"></a>2.测试结果</h3><p><img src="https://img-blog.csdnimg.cn/20210115163915751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="六-总结"><a href="#六-总结" class="headerlink" title="六.总结"></a>六.总结</h2><p>大多数的ad采集芯片驱动方式都差不多，如果是IIC驱动的只是配置的参数不同，相信大家会一个其他的也就会了，创作不易，希望对大家有用</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC添加程序关闭时时的提示界面</title>
      <link href="/2021/01/15/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/1.MFC%E6%B7%BB%E5%8A%A0%E7%A8%8B%E5%BA%8F%E5%85%B3%E9%97%AD%E6%97%B6%E6%97%B6%E7%9A%84%E6%8F%90%E7%A4%BA%E7%95%8C%E9%9D%A2/"/>
      <url>/2021/01/15/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/6.%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91/1.MFC/1.MFC%E6%B7%BB%E5%8A%A0%E7%A8%8B%E5%BA%8F%E5%85%B3%E9%97%AD%E6%97%B6%E6%97%B6%E7%9A%84%E6%8F%90%E7%A4%BA%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>在应用程序退出的时候，不能点击叉直接退出，我们想添加一个退出提示。在点击叉后，弹出是否确定退出的界面，如下面的界面，具体操作往下看<br><img src="https://img-blog.csdnimg.cn/20210115112157531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-方法"><a href="#二-方法" class="headerlink" title="二.方法"></a>二.方法</h2><ol><li><p>找到我们需要操作的主界面，也就是我们需要按叉退出的界面，鼠标右键点击属性，首先保证System Menu 为true，才可以显示叉的按钮<br><img src="https://img-blog.csdnimg.cn/20210115113036774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>点击属性里面上面的消息图标（就是闪电符号的右边），添加消息处理函数<br><img src="https://img-blog.csdnimg.cn/20210115113357777.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.在主程序 cpp文件里面（我们工程名字.cpp），对函数进行编辑</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出后的提醒</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sc510Dlg::OnClose</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 在此添加消息处理程序代码和/或调用默认值</span></span><br><span class="line"><span class="keyword">if</span>( <span class="built_in">MessageBox</span>(_T(<span class="string">&quot;确定要退出程序吗？&quot;</span>), _T(<span class="string">&quot;退出提醒&quot;</span>), MB_ICONINFORMATION | MB_YESNO) == IDNO )</span><br><span class="line"><span class="keyword">return</span>; <span class="comment">//没有返回值</span></span><br><span class="line"></span><br><span class="line">CDialog::<span class="built_in">OnClose</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> MFC </tag>
            
            <tag> 界面开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266+blinker点灯（小爱+天猫+小度三合一）</title>
      <link href="/2021/01/03/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/12.ESP8266+blinker%E7%82%B9%E7%81%AF%EF%BC%88%E5%B0%8F%E7%88%B1+%E5%A4%A9%E7%8C%AB+%E5%B0%8F%E5%BA%A6%E4%B8%89%E5%90%88%E4%B8%80%EF%BC%89/"/>
      <url>/2021/01/03/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/12.ESP8266+blinker%E7%82%B9%E7%81%AF%EF%BC%88%E5%B0%8F%E7%88%B1+%E5%A4%A9%E7%8C%AB+%E5%B0%8F%E5%BA%A6%E4%B8%89%E5%90%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>今天给大家说一下各个语言助手来控制ESP8266来点灯，这是我们用的还是blinker平台，前面有写过关于小爱同学点灯的文章，今天说一下小度和天猫精灵的控制</p><h2 id="二-程序"><a href="#二-程序" class="headerlink" title="二.程序"></a>二.程序</h2><h3 id="1-小爱同学"><a href="#1-小爱同学" class="headerlink" title="1.小爱同学"></a>1.小爱同学</h3><ul><li>头文件的声明</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_LIGHT</span></span><br></pre></td></tr></table></figure><ul><li>初始化</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BlinkerMIOT.attachPowerState(miotPowerState); <span class="comment">//小爱语音操作注册函数</span></span><br></pre></td></tr></table></figure><ul><li>函数实现，这里我以点灯为例</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//小爱电源类回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);       </span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-天猫精灵"><a href="#2-天猫精灵" class="headerlink" title="2.天猫精灵"></a>2.天猫精灵</h3><ul><li>头文件的声明</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_ALIGENIE_LIGHT <span class="comment">//设置天猫灯类库</span></span></span><br></pre></td></tr></table></figure><ul><li>初始化</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BlinkerAliGenie.attachPowerState(aligeniePowerState); <span class="comment">//天猫语音操作注册函数</span></span><br></pre></td></tr></table></figure><ul><li>函数实现，这里我以点灯为例</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//天猫精灵电源类回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">aligeniePowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);       </span><br><span class="line">        BlinkerAliGenie.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerAliGenie.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        BlinkerAliGenie.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerAliGenie.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-小度"><a href="#3-小度" class="headerlink" title="3.小度"></a>3.小度</h3><ul><li>头文件的声明</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_DUEROS_LIGHT <span class="comment">//设置小度灯类库</span></span></span><br></pre></td></tr></table></figure><ul><li>初始化</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BlinkerDuerOS.attachPowerState(duerPowerState); <span class="comment">//小度语音操作注册函数</span></span><br></pre></td></tr></table></figure><ul><li>函数实现，这里我以点灯为例</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//小度电源类回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">duerPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);       </span><br><span class="line">        BlinkerDuerOS.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerDuerOS.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        BlinkerDuerOS.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerDuerOS.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三-合成"><a href="#三-合成" class="headerlink" title="三.合成"></a>三.合成</h2><p>大家可以根据自己的需求来添加程序，我将三种控制合成一个程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_PRINT Serial  <span class="comment">//用于打开串口</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI         <span class="comment">//用于指定设备接入方式 wifi 接入</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_LIGHT   <span class="comment">//设置小爱同学控制为语音控制灯设备</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_DUEROS_LIGHT <span class="comment">//设置小度灯类库</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_ALIGENIE_LIGHT <span class="comment">//设置天猫灯类库</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;a3c11b64eb38&quot;</span>; <span class="comment">//上一步中在app中获取到的Secret Key（新建设备的秘钥）</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;ZHAI&quot;</span>; <span class="comment">//你的WiFi热点名称</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;123456789&quot;</span>; <span class="comment">//你的WiFi密码</span></span><br><span class="line"></span><br><span class="line">BlinkerButton <span class="title function_">Button1</span><span class="params">(<span class="string">&quot;btn-abc&quot;</span>)</span>; <span class="comment">//btn-abc 名称要和app新建组件一致</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// app 端按下按键即会执行该函数 回调函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> &#123;</span><br><span class="line">     </span><br><span class="line">     BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">     <span class="keyword">if</span> (state==<span class="string">&quot;on&quot;</span>) &#123;</span><br><span class="line"></span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">        <span class="comment">// 反馈开关状态</span></span><br><span class="line">        Button1.print(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(state==<span class="string">&quot;off&quot;</span>)&#123;</span><br><span class="line"></span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        <span class="comment">// 反馈开关状态</span></span><br><span class="line">        Button1.print(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小爱电源类回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);       </span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小度电源类回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">duerPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);       </span><br><span class="line">        BlinkerDuerOS.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerDuerOS.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        BlinkerDuerOS.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerDuerOS.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//天猫精灵电源类回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">aligeniePowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);       </span><br><span class="line">        BlinkerAliGenie.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerAliGenie.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        BlinkerAliGenie.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerAliGenie.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化串口，并开启调试信息</span></span><br><span class="line"></span><br><span class="line">    Serial.begin(<span class="number">115200</span>);    </span><br><span class="line">    BLINKER_DEBUG.stream(Serial); <span class="comment">//串口打印调试信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化有LED的IO</span></span><br><span class="line"></span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);  <span class="comment">//LED_BUILTIN 宏就是开发板指示灯的io口</span></span><br><span class="line"></span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化blinker</span></span><br><span class="line"></span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line"></span><br><span class="line">    Button1.attach(button1_callback); <span class="comment">//绑定按键执行回调函数</span></span><br><span class="line">  </span><br><span class="line">BlinkerDuerOS.attachPowerState(duerPowerState); <span class="comment">//小度语音操作注册函数</span></span><br><span class="line">BlinkerMIOT.attachPowerState(miotPowerState); <span class="comment">//小爱语音操作注册函数</span></span><br><span class="line">BlinkerAliGenie.attachPowerState(aligeniePowerState); <span class="comment">//天猫语音操作注册函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    Blinker.run();  <span class="comment">/*每次运行都会将设备收到的数据进行一次解析。</span></span><br><span class="line"><span class="comment">                    在使用WiFi接入时，该语句也负责保持网络连接*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux最好用的计时器</title>
      <link href="/2020/12/26/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/3.Linux%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%AE%A1%E6%97%B6%E5%99%A8%E7%9C%8B%E8%A7%81%E5%B0%B1%E4%B8%8D%E8%A6%81%E9%94%99%E8%BF%87%E4%BA%86/"/>
      <url>/2020/12/26/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/3.Linux%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%AE%A1%E6%97%B6%E5%99%A8%E7%9C%8B%E8%A7%81%E5%B0%B1%E4%B8%8D%E8%A6%81%E9%94%99%E8%BF%87%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一. 简介"></a>一. 简介</h2><p>大家都知道，不管定时器还是计数器，在项目开发的过程中是必不可少的。在linux系统当中当然内核有它自己的定时器，在用户模式下也无法使用内核的，今天给大家分享一个我一直用的，真的挺好用。</p><h2 id="二-使用"><a href="#二-使用" class="headerlink" title="二.使用"></a>二.使用</h2><p>计数器，我们用的最多的就是定义变量自加的方式来计数，但是如果要查看代码的执行时间，或者是到几分钟后退出程序等等，我们就使用下面的方法</p><h3 id="1-计时器"><a href="#1-计时器" class="headerlink" title="1.计时器"></a>1.计时器</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> time_min = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> time_s = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器开始计时</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tpstart</span>,<span class="title">tpend</span>;</span></span><br><span class="line"><span class="type">float</span> timeuse;</span><br><span class="line">gettimeofday(&amp;tpstart,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//延时2s 这里根据自加的需求编写</span></span><br><span class="line">sleep(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器显示时间</span></span><br><span class="line">gettimeofday(&amp;tpend,<span class="literal">NULL</span>);</span><br><span class="line">timeuse = <span class="number">1000000</span> * (tpend.tv_sec - tpstart.tv_sec) + </span><br><span class="line">           (tpend.tv_usec - tpstart.tv_usec);</span><br><span class="line">timeuse/=<span class="number">1000000</span>;</span><br><span class="line">time_min = (<span class="type">int</span>)timeuse / <span class="number">60</span>;</span><br><span class="line">time_s = (<span class="type">int</span>)timeuse % <span class="number">60</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;delay time %dmin%ds\r\n&quot;</span>, time_min, time_s);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行的结果</strong><br><img src="https://img-blog.csdnimg.cn/20201226162114670.png" alt="在这里插入图片描述"></p><h3 id="2-定时器"><a href="#2-定时器" class="headerlink" title="2. 定时器"></a>2. 定时器</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> time_min = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> time_s = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计时器开始计时</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tpstart</span>,<span class="title">tpend</span>;</span></span><br><span class="line"><span class="type">float</span> timeuse;</span><br><span class="line">gettimeofday(&amp;tpstart,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定时5分钟后退出程序</span></span><br><span class="line"><span class="keyword">while</span>(time_min &lt; <span class="number">5</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//计时器显示时间</span></span><br><span class="line">gettimeofday(&amp;tpend,<span class="literal">NULL</span>);</span><br><span class="line">timeuse = <span class="number">1000000</span> * (tpend.tv_sec - tpstart.tv_sec) + </span><br><span class="line">           (tpend.tv_usec - tpstart.tv_usec);</span><br><span class="line">timeuse/=<span class="number">1000000</span>;</span><br><span class="line">time_min = (<span class="type">int</span>)timeuse / <span class="number">60</span>;</span><br><span class="line">time_s = (<span class="type">int</span>)timeuse % <span class="number">60</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;delay time %dmin%ds\r\n&quot;</span>, time_min, time_s);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这样就可以在程序运行5分钟后，进行退出，大家可以根据自己的需求进行修改代码，来实现自己想要的功能。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266制作创意时钟（DS1302+TM1637）</title>
      <link href="/2020/12/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/11.ESP8266%E5%88%B6%E4%BD%9C%E5%88%9B%E6%84%8F%E6%97%B6%E9%92%9F%EF%BC%88DS1302+TM1637%EF%BC%89/"/>
      <url>/2020/12/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/11.ESP8266%E5%88%B6%E4%BD%9C%E5%88%9B%E6%84%8F%E6%97%B6%E9%92%9F%EF%BC%88DS1302+TM1637%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>最近看到好多朋友都在制作时钟，感觉挺实用的所以自己也来制作一个省的打开手机来看时间，其实懒到一定程度也是一种境界，其实就是为了那种成就感把，废话不多说直接开始制作教程，很详细哟。<br><img src="https://img-blog.csdnimg.cn/20201126165603451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><h3 id="1-这里我们需要用到一下模块"><a href="#1-这里我们需要用到一下模块" class="headerlink" title="1.这里我们需要用到一下模块"></a>1.这里我们需要用到一下模块</h3><ul><li>ESP8266 12F我们的核心板<br><img src="https://img-blog.csdnimg.cn/20201126155538111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>DS1302时钟模块，自带电池断电也没事，直接获取时间真的很方便<br><img src="https://img-blog.csdnimg.cn/20201126155750888.png#pic_center" alt="在这里插入图片描述"></li><li>TM1637时间显示模块，也就是用数码管来显示我们的时间，只能显示4位数字，所以就不显示秒了，就显示时间和日期<br><img src="https://img-blog.csdnimg.cn/20201126155954602.png#pic_center" alt="在这里插入图片描述"></li></ul><h3 id="2-开发环境"><a href="#2-开发环境" class="headerlink" title="2.开发环境"></a>2.开发环境</h3><p>这里我们使用Arduino1.8.12来开发，当然其他版本也是没问题的，这就只是制作一个时钟，所以就不用大费周章来自己写函数，自己调用库就可以了，节省我们的时间成本，也降低了开发难度。</p><p>但是使用的库得我们自己来安装，操作也特别简单</p><blockquote><p>下载DS1302和TM1637库<br>地址：<a href="https://www.lanzoui.com/iHOvsislpwj">点击此处下载</a></p></blockquote><p>下载成功之后，将库文件解压到我们Arduino软件安装目录下的libraries目录下<br><img src="https://img-blog.csdnimg.cn/20201126161421728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这样库就安装成功了<br><img src="https://img-blog.csdnimg.cn/20201126161518752.png#pic_center" alt="在这里插入图片描述"></p><h3 id="3-管脚定义"><a href="#3-管脚定义" class="headerlink" title="3.管脚定义"></a>3.管脚定义</h3><p>各模块按照下面表进行连接</p><table><thead><tr><th>ESP8266</th><th>DS1302</th></tr></thead><tbody><tr><td>3V</td><td>VCC</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>D7(GPIO13)</td><td>CLK</td></tr><tr><td>D6(GPIO12)</td><td>DAT</td></tr><tr><td>D5(GPIO14)</td><td>RST</td></tr></tbody></table><table><thead><tr><th>ESP8266</th><th>TM1637</th></tr></thead><tbody><tr><td>D1(GPIO5)</td><td>CLK</td></tr><tr><td>D2(GPIO4)</td><td>DAT</td></tr><tr><td>3V</td><td>VCC</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>由于在代码中使用的都是GPIO的号，所以将ESP8266的全部管脚的定义图放出来</td><td></td></tr><tr><td><img src="https://img-blog.csdnimg.cn/20201126162642118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></td><td></td></tr></tbody></table><h2 id="三-代码"><a href="#三-代码" class="headerlink" title="三.代码"></a>三.代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DS1302.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;TM1637.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//时钟显示模块管脚定义  </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLK 5 </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DIO 4</span></span><br><span class="line">TM1637 <span class="title function_">tm1637</span><span class="params">(CLK,DIO)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//时钟模块管脚定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> kCePin   14 <span class="comment">// 复位引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> kIoPin   12 <span class="comment">// 数据引脚</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> kSclkPin 13 <span class="comment">// 时钟引脚</span></span></span><br><span class="line">DS1302 <span class="title function_">rtc</span><span class="params">(kCePin, kIoPin, kSclkPin)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 时间分隔符闪烁标识</span></span><br><span class="line"><span class="type">bool</span> ShowPoint = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//时间和日期交替显示</span></span><br><span class="line"><span class="type">int</span> showCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">namespace &#123;</span><br><span class="line"></span><br><span class="line">String <span class="title function_">dayAsString</span><span class="params">(<span class="type">const</span> Time::Day day)</span> &#123;</span><br><span class="line">  <span class="keyword">switch</span> (day) &#123;</span><br><span class="line">    <span class="keyword">case</span> Time::kSunday: <span class="keyword">return</span> <span class="string">&quot;Sunday&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> Time::kMonday: <span class="keyword">return</span> <span class="string">&quot;Monday&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> Time::kTuesday: <span class="keyword">return</span> <span class="string">&quot;Tuesday&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> Time::kWednesday: <span class="keyword">return</span> <span class="string">&quot;Wednesday&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> Time::kThursday: <span class="keyword">return</span> <span class="string">&quot;Thursday&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> Time::kFriday: <span class="keyword">return</span> <span class="string">&quot;Friday&quot;</span>;</span><br><span class="line">    <span class="keyword">case</span> Time::kSaturday: <span class="keyword">return</span> <span class="string">&quot;Saturday&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;(unknown day)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">printTime</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">// 从模块获得当前时间</span></span><br><span class="line">  Time t = rtc.time();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 星期几</span></span><br><span class="line">  <span class="type">const</span> String day = dayAsString(t.day);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 格式化时间数据</span></span><br><span class="line">  <span class="type">char</span> buf[<span class="number">50</span>];</span><br><span class="line">  <span class="built_in">snprintf</span>(buf, <span class="keyword">sizeof</span>(buf), <span class="string">&quot;%s %04d-%02d-%02d %02d:%02d:%02d&quot;</span>,</span><br><span class="line">           day.c_str(),</span><br><span class="line">           t.yr, t.mon, t.date,</span><br><span class="line">           t.hr, t.min, t.sec);</span><br><span class="line">  Serial.println(buf);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">showTime</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">// 从模块获得当前时间</span></span><br><span class="line">  Time t = rtc.time();</span><br><span class="line">  <span class="type">int</span> h = t.hr;</span><br><span class="line">  <span class="type">int</span> mn = t.min;</span><br><span class="line"> </span><br><span class="line">  <span class="type">int</span> b0 = h / <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> b1 = h % <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="type">int</span> b2 = mn / <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> b3 = mn % <span class="number">10</span>;</span><br><span class="line">  </span><br><span class="line">  tm1637.display(<span class="number">0</span>, b0);</span><br><span class="line">  tm1637.display(<span class="number">1</span>, b1);</span><br><span class="line">  tm1637.point(ShowPoint);</span><br><span class="line">  tm1637.display(<span class="number">2</span>, b2);</span><br><span class="line">  tm1637.display(<span class="number">3</span>, b3);</span><br><span class="line">  </span><br><span class="line">  ShowPoint = !ShowPoint;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">showData</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">// 从模块获得当前时间</span></span><br><span class="line">  Time t = rtc.time();</span><br><span class="line">  <span class="type">int</span> m = t.mon;</span><br><span class="line">  <span class="type">int</span> d = t.date;</span><br><span class="line"> </span><br><span class="line">  <span class="type">int</span> m0 = m / <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> m1 = m % <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="type">int</span> d2 = d / <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> d3 = d % <span class="number">10</span>;</span><br><span class="line">  </span><br><span class="line">  tm1637.display(<span class="number">0</span>, m0);</span><br><span class="line">  tm1637.display(<span class="number">1</span>, m1);</span><br><span class="line">  tm1637.display(<span class="number">2</span>, d2);</span><br><span class="line">  tm1637.display(<span class="number">3</span>, d3);</span><br><span class="line">  tm1637.point(<span class="literal">false</span>);</span><br><span class="line">  </span><br><span class="line">&#125;  <span class="comment">// namespace</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setTime</span><span class="params">()</span>&#123;</span><br><span class="line">  </span><br><span class="line">   <span class="comment">// 设置初始时间为 2018-1-18,17:28:00 星期四</span></span><br><span class="line">   Time <span class="title function_">t</span><span class="params">(<span class="number">2018</span>, <span class="number">1</span>, <span class="number">18</span>, <span class="number">17</span>, <span class="number">28</span>, <span class="number">0</span>, Time::kThursday)</span>;</span><br><span class="line">   rtc.time(t);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">   Serial.begin(<span class="number">9600</span>);</span><br><span class="line">   rtc.writeProtect(<span class="literal">false</span>);</span><br><span class="line">   rtc.halt(<span class="literal">false</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//时钟显示模块的初始化</span></span><br><span class="line">   tm1637.init();</span><br><span class="line">   <span class="comment">//设置亮度0-7</span></span><br><span class="line">   tm1637.<span class="built_in">set</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="comment">//每隔10s显示一次日期</span></span><br><span class="line">  <span class="keyword">if</span>( showCount &lt;= <span class="number">10</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    showTime();</span><br><span class="line">    showCount++;</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    showData();</span><br><span class="line">    showCount = <span class="number">0</span>; </span><br><span class="line">    delay(<span class="number">2000</span>);  </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266-12F最小系统板程序烧录</title>
      <link href="/2020/12/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/10.ESP8266-12F%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F%E6%9D%BF%E7%A8%8B%E5%BA%8F%E7%83%A7%E5%BD%95/"/>
      <url>/2020/12/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/10.ESP8266-12F%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F%E6%9D%BF%E7%A8%8B%E5%BA%8F%E7%83%A7%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>前一段时间一直用ESP8266-12F开发板来学习开发，但是最近想做一些小的智能产品，像智能时钟以及温湿度检测等等，如果用一个完整的模块感觉有点大，很占地方而且价格也比最小系统板贵好多，所以就想用最小系统板来开发，但是面临的第一个比较重要的问题就是不知道如何给这个板子烧写程序，经过几天的学习将程序烧录进去了，今天我把我的方法分享给大家<br><img src="https://img-blog.csdnimg.cn/20201201213454995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="ESP8266开发板"></p><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><h3 id="1-ESP8266-12F系统板"><a href="#1-ESP8266-12F系统板" class="headerlink" title="1.ESP8266-12F系统板"></a>1.ESP8266-12F系统板</h3><p><img src="https://img-blog.csdnimg.cn/20201201214613511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>管脚定义图</strong><br><img src="https://img-blog.csdnimg.cn/20201201214713197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-转接板"><a href="#2-转接板" class="headerlink" title="2.转接板"></a>2.转接板</h3><p>我为了接线方便一点就在淘宝上买了这个转接板，当然不用也是没有问题的，但是价格也不贵两块钱两块包邮，挺划算就买了<br><img src="https://img-blog.csdnimg.cn/20201201220640227.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201201221138484.png" alt="在这里插入图片描述"></p><h3 id="3-USB转串口模块"><a href="#3-USB转串口模块" class="headerlink" title="3.USB转串口模块"></a>3.USB转串口模块</h3><p>这里我们得用USB转TTL模块来，将这个板子和我们的电脑相连接来烧写程序，一般玩单片机的都用这个模块<br>                             <img src="https://img-blog.csdnimg.cn/20201201221528529.png" alt="在这里插入图片描述"></p><h3 id="4-烧录软件"><a href="#4-烧录软件" class="headerlink" title="4.烧录软件"></a>4.烧录软件</h3><p>至于说用的烧写软件还是特别多的，比如在Arduino上直接可以进行程序的烧写以及串口的调试，额外我也将我用的软件给大小分享个</p><blockquote><p><a href="https://www.lanzoui.com/iXCJKdw5i7a">1.ESP8266 Flasher win64</a><br><a href="https://www.lanzoui.com/ikwE3dw5i9c">2.ESP8266 Flasher win32</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201201222520529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-连接烧录"><a href="#三-连接烧录" class="headerlink" title="三.连接烧录"></a>三.连接烧录</h2><p>最关键的问题就是接线，ESP8266的程序烧录模式和正常运行模式，是GPIO0管脚来控制的，可参考下面表来连接<br><img src="https://img-blog.csdnimg.cn/20201201223442101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201201223528643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用USB转串口模块连接我们的最小核心板，将GPIO0接到GND，就进入下载模式，正常运行的时候将GPIO0的连接线拔掉就可以了，这里VCC使用的是3.3V供电，如果无法进行烧录将GPIO0的线在程序下载的时候拔下后重新插入就可以下载了<br><img src="https://img-blog.csdnimg.cn/20201201224449738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用下面图更好的理解点<br><img src="https://img-blog.csdnimg.cn/20201201224902273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-下载"><a href="#四-下载" class="headerlink" title="四.下载"></a>四.下载</h2><p>1.点击此处选择要烧录的二进制bin文件<br><img src="https://img-blog.csdnimg.cn/2020120122535871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.点击Flash进行下载，如果没有反应就重新给ESP8266模块上电<br><img src="https://img-blog.csdnimg.cn/2020120122550896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.最后就显示下载了<br><img src="https://img-blog.csdnimg.cn/20201201225708580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux和Windows下网络测试工具的安装使用（iperf）</title>
      <link href="/2020/11/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/2.Linux%E5%92%8CWindows%E4%B8%8B%E7%BD%91%E7%BB%9C%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%EF%BC%88iperf%EF%BC%89/"/>
      <url>/2020/11/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/2.Linux%E5%92%8CWindows%E4%B8%8B%E7%BD%91%E7%BB%9C%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%EF%BC%88iperf%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="网卡测试"><a href="#网卡测试" class="headerlink" title="网卡测试"></a>网卡测试</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>不知道大家有没有这样的需求，测试你的pc网卡是千兆的还是百兆的，在实际传输数据的时候速度能跑到多少。之前我是用两台pc用网线直连，然后通过建立共享文件夹的方式传输文件，来观察传输速度，但是由于读写文件要经过硬盘，而我的还是机械硬盘所以测试的速度就不准确</p><h2 id="二-关于iperf"><a href="#二-关于iperf" class="headerlink" title="二.关于iperf"></a>二.关于iperf</h2><p>最后找到了iperf这个软件，它支持windows和linux还是mac，安卓等等，功能也挺强大的，感觉用起来特方便就推荐给大家。</p><p><strong>iperf可以测试的内容有这些</strong></p><p>TCP</p><ul><li>测量网络带宽</li><li>报告MSS&#x2F;MTU值的大小和观测值</li><li>支持TCP窗口值通过套接字缓冲</li><li>当P线程或Win32线程可用时，支持多线程。客户端与服 务端支持同时多重连接</li></ul><p>UDP</p><ul><li>客户端可以创建指定带宽的UDP流</li><li>测量丢包</li><li>测量延迟</li><li>支持多播</li><li>当P线程可用时，支持多线程。客户端与服务端支持同时多重连接（不支持Windows）</li></ul><h2 id="三-iperf安装"><a href="#三-iperf安装" class="headerlink" title="三.iperf安装"></a>三.iperf安装</h2><p>这样注意一点，两台主机下测试网络传输速率，所使用的的软件版本必须一致，要不然就会出问题<br><strong>windows下iperf3安装</strong></p><ol><li><pre><code>首先下载iperf3软件</code></pre><img src="https://img-blog.csdnimg.cn/20201031212624466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><blockquote><p>下载链接：<a href="https://www.lanzoui.com/iREf0hx4hkb">iperf3 3.1.3</a></p></blockquote></li><li><pre><code>复制这两个文件，粘贴到`%systemroot%`下</code></pre><img src="https://img-blog.csdnimg.cn/20201031212719190.png#pic_center" alt="在这里插入图片描述"></li><li>回车，进入到windows目录下<br><img src="https://img-blog.csdnimg.cn/2020103121280769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li><li>将复制的两个文件粘贴到此处<br>cmd中可以使用iperf3命令了。客户端与服务端应使用一致的iperf版本。</li></ol><p><strong>Linux下安装</strong><br>这里我推荐大家使用命令来安装，让我们的虚拟机或是开发板连接外网的情况下安装</p><p>输入下面命令进行安装</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install iperf3</span><br></pre></td></tr></table></figure><p>也可以通过下载源码后进行编译，然后在运行，但是没有下载方便,如果需要源码的可以在下面下载</p><blockquote><p>下载地址：<a href="https://downloads.es.net/pub/iperf/">iperf3源码下载</a></p></blockquote><h2 id="四-硬件判断网卡"><a href="#四-硬件判断网卡" class="headerlink" title="四. 硬件判断网卡"></a>四. 硬件判断网卡</h2><p>如果要求网卡的传输速率能达到千兆，那两台设备必须都直接千兆的传输，如何通过硬件来看是千兆网卡还是百兆网卡那</p><p><strong>方法一：</strong><br>打开电脑的设备管理器，查看网络配置器</p><ul><li>如果网卡的名称中有 FE, 00, Fast Et hernet等字样都是百兆网卡</li><li>如果网卡的名称中有 Gigabit，GBE，10&#x2F;100&#x2F;1000M、RTL8196等字样就是千兆网卡<br><img src="https://img-blog.csdnimg.cn/20201031213842899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201031213851290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li></ul><p><strong>方法二：</strong><br>在电脑桌面的左下角的网络图标，点击鼠标右键，点击 打开网络和共享中心选项<br><img src="https://img-blog.csdnimg.cn/20201031213945942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后再鼠标左键点击下图中的1<br><img src="https://img-blog.csdnimg.cn/20201031213957702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="五-iperf3的使用"><a href="#五-iperf3的使用" class="headerlink" title="五. iperf3的使用"></a>五. iperf3的使用</h2><p><strong>1.环境</strong><br>这里我在两台主机测试网卡的带宽，一个是windows7的主机，一个是Linux系统的开发板，两个硬件设备均为千兆网卡</p><blockquote><p>Windows pc的ip：192.168.0.7<br>Linux pc的ip：192.168.0.3</p></blockquote><p>开始测试可以互相用<code>ping</code> 命令来测试网络是不是通的，如果不知道自己主机的ip可以用命令来查看，在windows下用<code>ipconfig</code>命令，在Linux下用<code>ifconfig</code>命令 </p><p><strong>2. 测试TCP吞吐量</strong><br>（1）Server端开启iperf的服务模式，指定TCP端口，这里以windows做为服务器，用win+r 组合按键然后在输入cmd，打开终端，输入下面命令，520为设置的端口号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 –s –i <span class="number">1</span> –p <span class="number">520</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201031214600373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>（2）Client端启动iperf的客户端模式，连接服务器在linux开饭的命令行输入下面命令，下面的ip为服务器的ip，必须保证两个设备的ip为同样网段，520为服务器设置的端口号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 –c <span class="number">192.168</span><span class="number">.0</span><span class="number">.7</span> –i <span class="number">1</span> –t <span class="number">10</span> –p <span class="number">520</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201031214837554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>(3) Server端监听结果<br><img src="https://img-blog.csdnimg.cn/20201031214859306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>由此可以看出测试出的是百兆网卡的速率，因为我没有让两个设备通过网线直接而是，中间接了支持百兆网口的交换机</p><p><strong>3.测试UDP吞吐量</strong><br>（1）Server端开启iperf的服务器模式，指定UDP端口，这里同样采用windows下作为服务器，在终端输入下面命令，521为端口号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 –s -i <span class="number">1</span> –p <span class="number">521</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020103121502996.png#pic_center" alt="在这里插入图片描述"><br>（2）Client端启动iperf的客户端模式，连接服务器，输入下面命令，下面的ip为服务器的ip，端口号为服务器设置的端口号，这里我们测试千兆网卡的速率，所以设置为1000M</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 -u -c <span class="number">192.168</span><span class="number">.0</span><span class="number">.7</span> -p <span class="number">521</span> -b <span class="number">1000</span>m</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201031215151524.png#pic_center" alt="在这里插入图片描述"><br>（3）Server端监听结果<br><img src="https://img-blog.csdnimg.cn/20201031215236250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这个是在千兆网卡下通过网线直接连接的情况测试的结果可以看出为千兆网卡，而且也可以看到udp传输时丢包的数量</p><h2 id="六-总结"><a href="#六-总结" class="headerlink" title="六. 总结"></a>六. 总结</h2><p>iperf这个软件的功能挺强大的，使用的命令也特别的多这里我就不一一给大家说了，需要连接的朋友可以自行搜索，注意在测试过程中，保证两台设备的ip为同一网段，必须能够ping通的条件下再测试。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266+安信可微信智能配网</title>
      <link href="/2020/06/10/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/9.ESP8266+%E5%AE%89%E4%BF%A1%E5%8F%AF%E5%BE%AE%E4%BF%A1%E6%99%BA%E8%83%BD%E9%85%8D%E7%BD%91/"/>
      <url>/2020/06/10/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/9.ESP8266+%E5%AE%89%E4%BF%A1%E5%8F%AF%E5%BE%AE%E4%BF%A1%E6%99%BA%E8%83%BD%E9%85%8D%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><h2 id="一-前言"><a href="#一-前言" class="headerlink" title="一.前言"></a>一.前言</h2><p><img src="https://img-blog.csdnimg.cn/20200610203621290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>ESP8266模块深受发大电子爱好者的追捧，但是ESP8266连接网络是个问题，相信好多朋友都是将wifi名称和密码写死在代码中的，就像我这样</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;IT老翟&quot;</span>; <span class="comment">//你的WiFi热点名称</span></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;123456789&quot;</span>; <span class="comment">//你的WiFi密码</span></span><br></pre></td></tr></table></figure><p>但是问题来啦，当我们的设备或一个地方或是wifi名称变了，那还得我们拆开设备来，重新改代码烧程序，作为客户来这样使用，估计换做谁都无法接受。今天给大家说用如何用微信或者软件，一键给我们的wifi模块配网</p><h2 id="二-环境"><a href="#二-环境" class="headerlink" title="二.环境"></a>二.环境</h2><ul><li>我们使用 Arduin IDE 来编译我们的程序</li><li>微信 安信可 公众号</li><li>EspTouch 安卓软件</li></ul><h2 id="三-代码讲解"><a href="#三-代码讲解" class="headerlink" title="三.代码讲解"></a>三.代码讲解</h2><h3 id="1-讲解"><a href="#1-讲解" class="headerlink" title="1.讲解"></a>1.讲解</h3><p>当我们模块上电，先来检测看望了有没有连接成功，如果连接成功就不需要再继续配网,如果5s后没有连接成功，之间进入微信配网</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*连接网络*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ESP_Connect</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Serial.println(<span class="string">&quot;\r\n正在连接WIFI...&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(WiFi.status()!=WL_CONNECTED)<span class="comment">//判断是否连接WIFI成功</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(WIFI_Status)</span><br><span class="line">      &#123;</span><br><span class="line">          Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">          digitalWrite(LED_BUILTIN, HIGH);  </span><br><span class="line">          delay(<span class="number">500</span>);                       </span><br><span class="line">          digitalWrite(LED_BUILTIN, LOW);    </span><br><span class="line">          delay(<span class="number">500</span>);                 </span><br><span class="line">          count++;</span><br><span class="line">          <span class="keyword">if</span>(count&gt;=<span class="number">5</span>)<span class="comment">//5s</span></span><br><span class="line">          &#123;</span><br><span class="line">              WIFI_Status = <span class="literal">false</span>;</span><br><span class="line">              Serial.println(<span class="string">&quot;WiFi连接失败，请用手机进行配网&quot;</span>); </span><br><span class="line">          &#125;        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          smartConfig();  <span class="comment">//微信智能配网</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Serial.println(<span class="string">&quot;连接成功&quot;</span>);  </span><br><span class="line">    Serial.print(<span class="string">&quot;IP:&quot;</span>);</span><br><span class="line">    Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是微信配网的程序，配置成功的<br>wif名称为：  <code>WiFi.SSID().c_str()</code><br>密码为:  <code>WiFi.psk().c_str()</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 微信智能配网 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);<span class="comment">//设置STA模式</span></span><br><span class="line">  Serial.println(<span class="string">&quot;\r\nWait for Smartconfig...&quot;</span>);<span class="comment">//打印log信息</span></span><br><span class="line">  WiFi.beginSmartConfig();<span class="comment">//开始SmartConfig，等待手机端发出用户名和密码</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    digitalWrite(LED_BUILTIN,HIGH);<span class="comment">//指示灯闪烁</span></span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    digitalWrite(LED_BUILTIN,LOW);<span class="comment">//指示灯闪烁</span></span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">if</span>(WiFi.smartConfigDone())<span class="comment">//配网成功，接收到SSID和密码</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s\r\n&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      <span class="keyword">break</span>;      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-示例"><a href="#2-示例" class="headerlink" title="2.示例"></a>2.示例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//智能配网</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span>    <span class="comment">//WIFI库，配网必需</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;     <span class="comment">//时间计数</span></span><br><span class="line"><span class="type">bool</span> WIFI_Status = <span class="literal">true</span>;   <span class="comment">//WIFI状态标志位</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 微信智能配网 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);<span class="comment">//设置STA模式</span></span><br><span class="line">  Serial.println(<span class="string">&quot;\r\nWait for Smartconfig...&quot;</span>);<span class="comment">//打印log信息</span></span><br><span class="line">  WiFi.beginSmartConfig();<span class="comment">//开始SmartConfig，等待手机端发出用户名和密码</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    digitalWrite(LED_BUILTIN,HIGH);<span class="comment">//指示灯闪烁</span></span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    digitalWrite(LED_BUILTIN,LOW);<span class="comment">//指示灯闪烁</span></span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">if</span>(WiFi.smartConfigDone())<span class="comment">//配网成功，接收到SSID和密码</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s\r\n&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      <span class="keyword">break</span>;      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*连接网络*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">blinkerConnect</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Serial.println(<span class="string">&quot;\r\n正在连接WIFI...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(WiFi.status()!=WL_CONNECTED)<span class="comment">//判断是否连接WIFI成功</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(WIFI_Status)</span><br><span class="line">      &#123;</span><br><span class="line">          Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">          digitalWrite(LED_BUILTIN, HIGH);  </span><br><span class="line">          delay(<span class="number">500</span>);                       </span><br><span class="line">          digitalWrite(LED_BUILTIN, LOW);    </span><br><span class="line">          delay(<span class="number">500</span>);                 </span><br><span class="line">          count++;</span><br><span class="line">          <span class="keyword">if</span>(count&gt;=<span class="number">5</span>)<span class="comment">//5s</span></span><br><span class="line">          &#123;</span><br><span class="line">              WIFI_Status = <span class="literal">false</span>;</span><br><span class="line">              Serial.println(<span class="string">&quot;WiFi连接失败，请用手机进行配网&quot;</span>); </span><br><span class="line">          &#125;        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          smartConfig();  <span class="comment">//微信智能配网</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Serial.println(<span class="string">&quot;连接成功&quot;</span>);  </span><br><span class="line">    Serial.print(<span class="string">&quot;IP:&quot;</span>);</span><br><span class="line">    Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">// 初始化有LED  LED_BUILTIN 为开发板的指示灯管脚</span></span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line"></span><br><span class="line"><span class="comment">//网络连接</span></span><br><span class="line">blinkerConnect();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-blinker添加智能配网"><a href="#3-blinker添加智能配网" class="headerlink" title="3.blinker添加智能配网"></a>3.blinker添加智能配网</h3><p>如果我们使用blinker点灯科技，也需要连接网络，blinker给的库函数为 <code>Blinker.begin(auth，ssid，pswd)</code> ,那我们如何配置可以看下面代码<br><strong>这里以点灯程序为例</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//智能配网</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_PRINT Serial</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_LIGHT</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ESP8266WiFi.h&gt;</span>    <span class="comment">//WIFI库，配网必需</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建组件对象</span></span><br><span class="line">BlinkerButton <span class="title function_">Button1</span><span class="params">(<span class="string">&quot;key&quot;</span>)</span>;</span><br><span class="line">BlinkerNumber <span class="title function_">Number1</span><span class="params">(<span class="string">&quot;num-abc&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;     <span class="comment">//时间计数</span></span><br><span class="line"><span class="type">bool</span> WIFI_Status = <span class="literal">true</span>;   <span class="comment">//WIFI状态标志位</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> led D3       <span class="comment">//要操作的IO</span></span></span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;xxxxxxxxx&quot;</span>;  <span class="comment">//设备秘钥自己改</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 微信智能配网 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);<span class="comment">//设置STA模式</span></span><br><span class="line">  Serial.println(<span class="string">&quot;\r\nWait for Smartconfig...&quot;</span>);<span class="comment">//打印log信息</span></span><br><span class="line">  WiFi.beginSmartConfig();<span class="comment">//开始SmartConfig，等待手机端发出用户名和密码</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    digitalWrite(LED_BUILTIN,HIGH);<span class="comment">//指示灯闪烁</span></span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    digitalWrite(LED_BUILTIN,LOW);<span class="comment">//指示灯闪烁</span></span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">if</span>(WiFi.smartConfigDone())<span class="comment">//配网成功，接收到SSID和密码</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s\r\n&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      <span class="keyword">break</span>;      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*连接网络*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">blinkerConnect</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Serial.println(<span class="string">&quot;\r\n正在连接WIFI...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(WiFi.status()!=WL_CONNECTED)<span class="comment">//判断是否连接WIFI成功</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(WIFI_Status)</span><br><span class="line">      &#123;</span><br><span class="line">          Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">          digitalWrite(LED_BUILTIN, HIGH);  </span><br><span class="line">          delay(<span class="number">500</span>);                       </span><br><span class="line">          digitalWrite(LED_BUILTIN, LOW);    </span><br><span class="line">          delay(<span class="number">500</span>);                 </span><br><span class="line">          count++;</span><br><span class="line">          <span class="keyword">if</span>(count&gt;=<span class="number">5</span>)<span class="comment">//5s</span></span><br><span class="line">          &#123;</span><br><span class="line">              WIFI_Status = <span class="literal">false</span>;</span><br><span class="line">              Serial.println(<span class="string">&quot;WiFi连接失败，请用手机进行配网&quot;</span>); </span><br><span class="line">          &#125;        </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          smartConfig();  <span class="comment">//微信智能配网</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Serial.println(<span class="string">&quot;连接成功&quot;</span>);  </span><br><span class="line">    Serial.print(<span class="string">&quot;IP:&quot;</span>);</span><br><span class="line">    Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按下按键即会执行该函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">    <span class="keyword">if</span>(state == <span class="string">&quot;on&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">Button1.print(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">digitalWrite(led, HIGH);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(state == <span class="string">&quot;off&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Button1.print(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">digitalWrite(led, LOW);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果未绑定的组件被触发，则会执行其中内容</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">dataRead</span><span class="params">(<span class="type">const</span> String &amp; data)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;Blinker readString: &quot;</span>, data);</span><br><span class="line">    counter++;</span><br><span class="line">    Number1.print(counter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化串口</span></span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">if</span> defined(BLINKER_PRINT)</span></span><br><span class="line">        BLINKER_DEBUG.stream(BLINKER_PRINT);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化控制的led灯</span></span><br><span class="line">pinMode(led, OUTPUT);</span><br><span class="line">    digitalWrite(led, LOW);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化有LED的IO</span></span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line"></span><br><span class="line"><span class="comment">//网络连接</span></span><br><span class="line">blinkerConnect();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化blinker</span></span><br><span class="line">Blinker.begin(auth,WiFi.SSID().c_str(),WiFi.psk().c_str()); <span class="comment">//根据配网得到的WIFI信息和设备秘钥，连接到Blinker云</span></span><br><span class="line">Blinker.attachData(dataRead);</span><br><span class="line">    Button1.attach(button1_callback);<span class="comment">//注册按键回调函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="四-开始配网"><a href="#四-开始配网" class="headerlink" title="四.开始配网"></a>四.开始配网</h2><p>我们将程序烧入我们的开发板，接下来就来配网，这里介绍两种方式一种是微信一种是app ，两种方式都是一样的，都是利用Arduino 封装好的 <code>smartConfigDone()</code> 函数来实现</p><h3 id="1-微信配网"><a href="#1-微信配网" class="headerlink" title="1.微信配网"></a>1.微信配网</h3><p>我们首先来关注微信公众号 “安信可科技”，注意配网时需要手机连接需要配置的 wifi热点，还需要开启定位<br>进入公众号需要点击右下角，进入配网<br><img src="https://img-blog.csdnimg.cn/20200610213711185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-EspTouch软件"><a href="#2-EspTouch软件" class="headerlink" title="2. EspTouch软件"></a>2. EspTouch软件</h3><p>先下载软件，同样需要连接wifi热点，大家定位，我这没有连接热点所有SSID: 没有显示</p><blockquote><p>下载地址：<a href="https://wwa.lanzous.com/iIb87djbqdc">EspTouch 下载</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200610213653465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="五-总结"><a href="#五-总结" class="headerlink" title="五.总结"></a>五.总结</h2><p>这种办法配置网络还是比较方便的，我们配置一次后我们的wifi名称和密码会被写入到flash中，所以下次开启后会自动连接网络，不会让我们继续配网，如何wifi名称和密码和之前的不一样，就需要我们配网</p><p>再说一下配网过程中，esp8266指示灯的一个变化<br>模块上电之后，自动进入配网判断，指示灯每0.5s闪闪一次，5s内网络配置成功，指示灯熄灭，如果超过5s，还没连接成功进入微信配网，每1s灯闪烁一次，一直循环，知道连接成功，指示灯停止闪烁</p><p>代码中的打印信息大家调试完可以屏蔽，这样可以提高代码的运行速度</p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F103驱动DHT11显示温湿度</title>
      <link href="/2020/05/26/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/54.STM32F103%E9%A9%B1%E5%8A%A8DHT11%E6%98%BE%E7%A4%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%EF%BC%880.96%E5%AF%B8oled%EF%BC%89/"/>
      <url>/2020/05/26/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/54.STM32F103%E9%A9%B1%E5%8A%A8DHT11%E6%98%BE%E7%A4%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6%EF%BC%880.96%E5%AF%B8oled%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="STM32"><a href="#STM32" class="headerlink" title="STM32"></a>STM32</h1><h2 id="一-前言"><a href="#一-前言" class="headerlink" title="一.前言"></a>一.前言</h2><p>在实际的项目开发过程中我们会使用到很多模块，今天我们说一下DHT11温湿度模块<br>这里是将测量的数据显示在0.96寸oled显示屏上面，如果不会oled屏幕驱动的可以看一下我前面的文章</p><h2 id="二-DHT11驱动原理"><a href="#二-DHT11驱动原理" class="headerlink" title="二.DHT11驱动原理"></a>二.DHT11驱动原理</h2><p><strong>步骤一</strong><br>DHT11上电后（DHT11上电后要等待 1S 以越过不稳定状态在此期间不能发送任何指令），测试环境 温湿度数据，并记录数据，同时 DHT11的 DATA 数据线由上拉电阻拉高一直保持高电平；此时 DHT11的 DATA 引脚处于输入状态，时刻检测外部信号。 </p><p><strong>步骤二</strong><br>微处理器的 I&#x2F;O设置为输出同时输出低电平，且低电平保持时间不能小于 18ms（最大不得超过 30ms）， 然后微处理器的 I&#x2F;O设置为输入状态，由于上拉电阻，微处理器的 I&#x2F;O即 DHT11的 DATA 数据线也随之变 高，等待 DHT11作出回答信号，发送信号如图所示：<br><img src="https://img-blog.csdnimg.cn/20200526225230186.png" alt="在这里插入图片描述"></p><p><strong>步骤三</strong><br>DHT11 的 DATA引脚检测到外部信号有低电平时，等待外部信号低电平结束，延迟后 DHT11 的 DATA 引脚处于输出状态，输出 83微秒的低电平作为应答信号，紧接着输出 87 微秒的高电平通知外设准备接 收数据，微处理器的 I&#x2F;O 此时处于输入状态，检测到 I&#x2F;O 有低电平（DHT11回应信号）后，等待 87微秒 的高电平后的数据接收，发送信号如图所示：<br><img src="https://img-blog.csdnimg.cn/20200526225202371.png" alt="在这里插入图片描述"></p><p><strong>步骤四</strong><br>由 DHT11 的 DATA引脚输出 40 位数据，微处理器根据 I&#x2F;O电平的变化接收 40 位数据，位数据“0” 的格式为： 54 微秒的低电平和 23-27 微秒的高电平，位数据“1”的格式为： 54 微秒的低电平加 68-74 微秒的高电平。位数据“0”、“1”格式信号如图所<br><img src="https://img-blog.csdnimg.cn/20200526225140864.png" alt="在这里插入图片描述"></p><h2 id="三-代码"><a href="#三-代码" class="headerlink" title="三.代码"></a>三.代码</h2><p><strong>DHT11.h</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DHT11_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DHT11_H </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;system.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BOOL unsigned char</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> TRUE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TRUE 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> FALSE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FALSE 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义DHT11 GPIOD 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHT11_PORT_RCC  RCC_APB2Periph_GPIOD</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHT11_PIN  GPIO_Pin_0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHT11_PORT GPIOD</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">DHT11_DataPin_Configure_Output</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">DHT11_DataPin_Configure_Input</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line">BOOL <span class="title function_">DHT11_get_databit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_set_databit</span><span class="params">(BOOL level)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">mdelay</span><span class="params">(u16 ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">udelay</span><span class="params">(u16 us)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> <span class="title function_">DHT11_read_byte</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> <span class="title function_">DHT11_start_sampling</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_get_data</span><span class="params">(u32 *buf)</span>;</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>DHT11.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SysTick.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*数据定义:</span></span><br><span class="line"><span class="comment">---以下变量均为全局变量--------</span></span><br><span class="line"><span class="comment">    //----温度高8位== U8T_data_H------</span></span><br><span class="line"><span class="comment">    //----温度低8位== U8T_data_L------</span></span><br><span class="line"><span class="comment">    //----湿度高8位== U8RH_data_H-----</span></span><br><span class="line"><span class="comment">    //----湿度低8位== U8RH_data_L-----</span></span><br><span class="line"><span class="comment">  //-----校验 8位 == U8checkdata-----</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">u8 U8T_data_H,U8T_data_L,U8RH_data_H,U8RH_data_L,U8checkdata;</span><br><span class="line">u8 U8T_data_H_temp,U8T_data_L_temp,U8RH_data_H_temp,U8RH_data_L_temp,U8checkdata_temp;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">DHT11_DataPin_Configure_Output</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">  RCC_APB2PeriphClockCmd(DHT11_PORT_RCC, ENABLE); <span class="comment">//使能PD端口时钟</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = DHT11_PIN; <span class="comment">//PD.0 端口配置</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; <span class="comment">//推挽输出</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">  GPIO_Init(DHT11_PORT, &amp;GPIO_InitStructure);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">DHT11_DataPin_Configure_Input</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_InitTypeDef DataPin;</span><br><span class="line">DataPin.GPIO_Pin = DHT11_PIN;</span><br><span class="line">DataPin.GPIO_Mode = GPIO_Mode_IN_FLOATING; <span class="comment">//悬空 输入    </span></span><br><span class="line">DataPin.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(DHT11_PORT, &amp;DataPin);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">BOOL <span class="title function_">DHT11_get_databit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> val;</span><br><span class="line">val = GPIO_ReadInputDataBit(DHT11_PORT, DHT11_PIN);</span><br><span class="line"><span class="keyword">if</span>(val == Bit_RESET)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_set_databit</span><span class="params">(BOOL level)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(level == TRUE)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(DHT11_PORT, DHT11_PIN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(DHT11_PORT, DHT11_PIN);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">mdelay</span><span class="params">(u16 ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ms != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_ms(ms);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">udelay</span><span class="params">(u16 us)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(us != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">delay_us(us);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> <span class="title function_">DHT11_read_byte</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="type">uint8_t</span> data = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">data &lt;&lt;= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>((!DHT11_get_databit()));</span><br><span class="line">udelay(<span class="number">10</span>);</span><br><span class="line">udelay(<span class="number">10</span>);</span><br><span class="line">udelay(<span class="number">10</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(DHT11_get_databit())</span><br><span class="line">&#123;</span><br><span class="line">data |= <span class="number">0x1</span>;</span><br><span class="line"><span class="keyword">while</span>(DHT11_get_databit());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">&#125; </span><br><span class="line">  &#125; </span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> <span class="title function_">DHT11_start_sampling</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">DHT11_DataPin_Configure_Output();</span><br><span class="line"><span class="comment">//主机拉低18ms   </span></span><br><span class="line">DHT11_set_databit(FALSE);</span><br><span class="line">mdelay(<span class="number">18</span>);</span><br><span class="line">DHT11_set_databit(TRUE);</span><br><span class="line"><span class="comment">//总线由上拉电阻拉高 主机延时20us</span></span><br><span class="line">udelay(<span class="number">10</span>);</span><br><span class="line">udelay(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//主机设为输入 判断从机响应信号 </span></span><br><span class="line">DHT11_set_databit(TRUE);</span><br><span class="line"></span><br><span class="line">DHT11_DataPin_Configure_Input();</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断从机是否有低电平响应信号 如不响应则跳出，响应则向下运行      </span></span><br><span class="line"><span class="keyword">if</span>(!DHT11_get_databit()) <span class="comment">//T !      </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断从机是否发出 80us 的低电平响应信号是否结束     </span></span><br><span class="line"><span class="keyword">while</span>((!DHT11_get_databit()));</span><br><span class="line"><span class="comment">// printf(&quot;DHT11 answers.\r\n&quot;);</span></span><br><span class="line"><span class="comment">//判断从机是否发出 80us 的高电平，如发出则进入数据接收状态</span></span><br><span class="line"><span class="keyword">while</span>((DHT11_get_databit()))</span><br><span class="line">&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">DHT11_get_data</span><span class="params">(u32 *buf)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 temp;</span><br><span class="line"><span class="keyword">if</span>(DHT11_start_sampling())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printf(&quot;DHT11 is ready to transmit data\r\n&quot;);</span></span><br><span class="line"><span class="comment">//数据接收状态         </span></span><br><span class="line">U8RH_data_H_temp = DHT11_read_byte();</span><br><span class="line">U8RH_data_L_temp = DHT11_read_byte();</span><br><span class="line">U8T_data_H_temp  = DHT11_read_byte();</span><br><span class="line">U8T_data_L_temp  = DHT11_read_byte();</span><br><span class="line">U8checkdata_temp = DHT11_read_byte();</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Data transmission finishes, pull the bus high */</span></span><br><span class="line">DHT11_DataPin_Configure_Output();</span><br><span class="line">DHT11_set_databit(TRUE);</span><br><span class="line"><span class="comment">//数据校验 </span></span><br><span class="line"> </span><br><span class="line">temp=(U8T_data_H_temp+U8T_data_L_temp+U8RH_data_H_temp+U8RH_data_L_temp);</span><br><span class="line"><span class="keyword">if</span>(temp==U8checkdata_temp)</span><br><span class="line">&#123;</span><br><span class="line">U8RH_data_H=U8RH_data_H_temp; <span class="comment">//湿度</span></span><br><span class="line">U8RH_data_L=U8RH_data_L_temp;</span><br><span class="line">U8T_data_H=U8T_data_H_temp;  <span class="comment">//温湿</span></span><br><span class="line">U8T_data_L=U8T_data_L_temp;</span><br><span class="line">U8checkdata=U8checkdata_temp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buf[<span class="number">0</span>] = U8T_data_H; <span class="comment">//温度的高低</span></span><br><span class="line">buf[<span class="number">1</span>] = U8T_data_L;</span><br><span class="line"></span><br><span class="line">buf[<span class="number">2</span>] = U8RH_data_H; <span class="comment">//湿度高低</span></span><br><span class="line">buf[<span class="number">3</span>] = U8RH_data_L;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>main</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">//说明: STM32F103Zet6 驱动DHT11 在 0.96 oled屏显示温湿度</span></span><br><span class="line"><span class="comment">//引脚说明</span></span><br><span class="line"><span class="comment">//DHT11: PD0</span></span><br><span class="line"><span class="comment">//OLED:D0   接PC0（SCL） </span></span><br><span class="line"><span class="comment">//D1   接PC1（SDA）</span></span><br><span class="line"><span class="comment">//RES  接PC2  </span></span><br><span class="line"><span class="comment">//DC   接PC3 CS   接PA0</span></span><br><span class="line"><span class="comment">//--------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;system.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SysTick.h&quot;</span>  <span class="comment">//延时  </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dht11.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">dht11_show</span><span class="params">(u32 *buf)</span>; <span class="comment">//oled显示</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//显示温度和湿度的数组 元素0 为温度高 元素1 为温度低 </span></span><br><span class="line"><span class="comment">// 元素2 为湿度高 元素3 为湿度的低</span></span><br><span class="line">u32 DTH11_data[<span class="number">4</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//时钟源获取 配置</span></span><br><span class="line">SysTick_Init(<span class="number">72</span>); <span class="comment">//精确延时</span></span><br><span class="line"></span><br><span class="line">OLED_Init();</span><br><span class="line">OLED_ColorTurn(<span class="number">0</span>);<span class="comment">//0正常显示，1 反色显示</span></span><br><span class="line">  OLED_DisplayTurn(<span class="number">0</span>);<span class="comment">//0正常显示 1 屏幕翻转显示</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">DHT11_get_data(DTH11_data); <span class="comment">//获取到温湿度</span></span><br><span class="line">dht11_show(DTH11_data);</span><br><span class="line">delay_ms(<span class="number">5000</span>);</span><br><span class="line">OLED_ShowString(<span class="number">70</span>,<span class="number">20</span>,<span class="string">&quot;     &quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">OLED_ShowString(<span class="number">70</span>,<span class="number">40</span>,<span class="string">&quot;     &quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">OLED_Refresh();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//温湿度显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">dht11_show</span><span class="params">(u32 *buf)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 pos = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">OLED_ShowChinese(<span class="number">20</span>,<span class="number">20</span>,<span class="number">0</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//温</span></span><br><span class="line">OLED_ShowChinese(<span class="number">40</span>,<span class="number">20</span>,<span class="number">1</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//度</span></span><br><span class="line">OLED_ShowString(<span class="number">60</span>,<span class="number">20</span>,<span class="string">&quot;:&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(buf[<span class="number">0</span>] &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>,<span class="number">20</span>,buf[<span class="number">0</span>],<span class="number">1</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">pos = <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(buf[<span class="number">0</span>] &lt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>,<span class="number">20</span>,buf[<span class="number">0</span>],<span class="number">2</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">pos = <span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>,<span class="number">20</span>,buf[<span class="number">0</span>],<span class="number">3</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">pos = <span class="number">24</span>;</span><br><span class="line">&#125;</span><br><span class="line">OLED_ShowString(<span class="number">70</span>+pos,<span class="number">20</span>,<span class="string">&quot;.&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">pos += <span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(buf[<span class="number">1</span>] &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>+pos,<span class="number">20</span>,buf[<span class="number">1</span>],<span class="number">1</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(buf[<span class="number">1</span>] &lt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>+pos,<span class="number">20</span>,buf[<span class="number">1</span>],<span class="number">2</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>+pos,<span class="number">20</span>,buf[<span class="number">1</span>],<span class="number">3</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_ShowChinese(<span class="number">20</span>,<span class="number">40</span>,<span class="number">2</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//湿</span></span><br><span class="line">OLED_ShowChinese(<span class="number">40</span>,<span class="number">40</span>,<span class="number">3</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//度</span></span><br><span class="line">OLED_ShowString(<span class="number">60</span>,<span class="number">40</span>,<span class="string">&quot;:&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(buf[<span class="number">2</span>] &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>,<span class="number">40</span>,buf[<span class="number">2</span>],<span class="number">1</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">pos = <span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(buf[<span class="number">2</span>] &lt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>,<span class="number">40</span>,buf[<span class="number">2</span>],<span class="number">2</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">pos = <span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>,<span class="number">40</span>,buf[<span class="number">2</span>],<span class="number">3</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">pos = <span class="number">24</span>;</span><br><span class="line">&#125;</span><br><span class="line">OLED_ShowString(<span class="number">70</span>+pos,<span class="number">40</span>,<span class="string">&quot;.&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">pos += <span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(buf[<span class="number">3</span>] &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>+pos,<span class="number">40</span>,buf[<span class="number">3</span>],<span class="number">1</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(buf[<span class="number">3</span>] &lt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>+pos,<span class="number">40</span>,buf[<span class="number">3</span>],<span class="number">2</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">70</span>+pos,<span class="number">40</span>,buf[<span class="number">3</span>],<span class="number">3</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">OLED_Refresh();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意</strong><br>整个工程代码在此处下载</p><blockquote><p><a href="https://gitee.com/oldzhai/stm32/tree/master/DHT11%E6%B8%A9%E6%B9%BF%E5%BA%A6%E9%A9%B1%E5%8A%A8/oled%E6%98%BE%E7%A4%BA%E6%B8%A9%E6%B9%BF%E5%BA%A6">DHT11 温湿度显示</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【程序猿交友】IT老翟</title>
      <link href="/2020/05/10/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/1.%E4%BA%A4%E5%8F%8B/1.%E3%80%90%E7%A8%8B%E5%BA%8F%E7%8C%BF%E4%BA%A4%E5%8F%8B%E3%80%91IT%E8%80%81%E7%BF%9F%EF%BC%9A%E5%8A%AA%E5%8A%9B%E5%89%8D%E8%BF%9B%E4%B8%AD!/"/>
      <url>/2020/05/10/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/1.%E4%BA%A4%E5%8F%8B/1.%E3%80%90%E7%A8%8B%E5%BA%8F%E7%8C%BF%E4%BA%A4%E5%8F%8B%E3%80%91IT%E8%80%81%E7%BF%9F%EF%BC%9A%E5%8A%AA%E5%8A%9B%E5%89%8D%E8%BF%9B%E4%B8%AD!/</url>
      
        <content type="html"><![CDATA[<h1 id="个人资料"><a href="#个人资料" class="headerlink" title="个人资料"></a><font  color="#FFCC00 ">个人资料</font></h1><p><font color="#FFCC66" >姓名：IT老翟</font><br><font color="#FFCC66">昵称：oldzhai</font><br><font color="#FFCC66">性别：男</font><br><font color="#FFCC66">邮箱：<a href="mailto:&#x7a;&#x66;&#113;&#x30;&#x36;&#50;&#48;&#64;&#x31;&#x32;&#54;&#x2e;&#99;&#x6f;&#x6d;">&#x7a;&#x66;&#113;&#x30;&#x36;&#50;&#48;&#64;&#x31;&#x32;&#54;&#x2e;&#99;&#x6f;&#x6d;</a></font></p><p><font color="#FFCC66">常驻博客：</font></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://blog.csdn.net/weixin_45631738">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">CSDN-IT老翟</div>            <div class="tag-link-sitename">CSDN博客</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><font color="#FFCC66">个人博客：</font><br><a href="https://oldzhai.gitee.io/">https://oldzhai.gitee.io/</a></p><p><font color="#FFCC66">项目仓库</font><br><a href="https://gitee.com/oldzhai">码云-oldzhai</a><br><a href="https://github.com/zfq0620">github-IT老翟</a></p><p><font color="#FFCC66">项目演示</font><br><a href="https://space.bilibili.com/483624233/video">b站-IT老翟</a></p><p><font color="#FFCC66">微信公众号</font><br><font color="#3399CC ">搜索：IT老翟</font></p><table><tr><td bgcolor=yellow><font color="#CC6600 ">Tipc：记得关注我哟！</font></td></tr></table><h1 id="学习经历"><a href="#学习经历" class="headerlink" title="学习经历"></a><font  color="#FFCC00 ">学习经历</font></h1><p><font color="#FFCC66" >目前已经于电子信息工程专业毕业，就职于西安的一家军工公司，程序猿一枚</font></p><div align=center><img width="600" height="200"src="https://img-blog.csdnimg.cn/20200510100920774.png"/></div> <p><font color="#FF9999 " ><strong>学习路线</strong></font></p><ul><li><font color="#FFCC66" >LinuxC&#x2F;C++&#x2F;Python</font></li><li><font color="#FFCC66" >STC89c51&#x2F;STM32&#x2F;</font></li><li><font color="#FFCC66" >Linux系统编程&#x2F;驱动</font></li><li><font color="#FFCC66" >HTML&#x2F;CSS&#x2F;JavaScript</font></li><li><font color="#FFCC66" >QT&#x2F;Android</font></li></ul><div align=center><img width="380" height="250"src="https://img-blog.csdnimg.cn/20200510103306859.png"/></div><h1 id="专业技能"><a href="#专业技能" class="headerlink" title="专业技能"></a><font  color="#FFCC00 ">专业技能</font></h1><h2 id="一部分为单片机"><a href="#一部分为单片机" class="headerlink" title="一部分为单片机"></a><font  color="#33FFCC ">一部分为单片机</font></h2><ol><li><font color="#FF9999" >熟悉STC89C51单片机的开发</font></li><li><font color="#FF9999" >熟悉STM32单片机开发</font></li><li><font color="#FF9999" >熟悉ESP8266 WIFI模块开发</font></li><li><font color="#FF9999" >熟悉各模块驱动 oled，按键，传感器</font></li></ol><div align=center><img width="200" height="200"src="https://img-blog.csdnimg.cn/20200510110541613.png"/></div><h2 id="二部分嵌入式"><a href="#二部分嵌入式" class="headerlink" title="二部分嵌入式"></a><font  color="#33FFCC ">二部分嵌入式</font></h2><ol><li><font color="#FF9999" >linux系统编程&#x2F;ubuntu</font></li><li><font color="#FF9999" >IO与进程</font></li></ol><div align=center><img width="600" height="180" src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/myphoto/20200510105557829.png"/></div><h2 id="三部分杂类"><a href="#三部分杂类" class="headerlink" title="三部分杂类"></a><font  color="#33FFCC ">三部分杂类</font></h2><ol><li><font color="#FF9999" >云服务器的搭建</font></li><li><font color="#FF9999" >QT程序设计</font></li><li><font color="#FF9999" >Python爬虫</font></li></ol><div align=center><img width="400" height="350" src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/myphoto/20200510140712225.png"/></div><h1 id="目前阶段"><a href="#目前阶段" class="headerlink" title="目前阶段"></a><font  color="#FFCC00 ">目前阶段</font></h1><p> <font color="#FF9999" size=4>1，适应工作</font></p><p> <font color="#66CCFF " >目前工作入职时间比较短，所以就熟悉一下业务流程，尽快的适应工作内容，高效的完成任务</font></p><p> <font color="#FF9999" size=4>2，b站会更新很多好玩的东西</font><br> <font color="#66CCFF " >看这里，教你玩玩你的小爱同学</font></p><div style="position: relative; width: 100%; height: 0; padding-bottom:75%;"><iframe frameborder="0" src="//player.bilibili.com/player.html?aid=89968007&bvid=BV1s7411L78w&cid=153654199&page=1" allowFullScreen="true"style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p> <font color="#FF9999" size=4>3，hexo-sakura 博客小破站已经完善的差不多了</font></p><div style="position: relative; width: 100%; height: 0; padding-bottom:75%;"><iframe frameborder="0" src="//player.bilibili.com/player.html?aid=95428848&bvid=BV1uE411L7kB&cid=162914741&page=1" allowFullScreen="true"style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p> <font color="#FF3300 " >如果有技术上的问题，可以私信留言哟，共同成长！</font></p><table><tr><td bgcolor="#FFCC66" ><font color="#CC6600 ">Tipc：下面有福利哟！</font></td></tr></table><h1 id="兴趣爱好"><a href="#兴趣爱好" class="headerlink" title="兴趣爱好"></a><font  color="#FFCC00 ">兴趣爱好</font></h1><p> <font color="#66CCFF " >有人说程序员的工作特别烧脑，哈哈 为了防止脑袋烧坏，也是可以培养一下自己的业余兴趣爱好的</font></p><p><font color="#66CCFF " >比如说跑酷，喜欢这种自由的感觉，当然其它运动也是比较喜欢的像轮滑，爬山之类的</font></p><div style="position: relative; width: 100%; height: 0; padding-bottom:75%;"><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=p3045zl2c2f" allowFullScreen="true"style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p><font color="#9933CC " >走在健身的道路，也许我学会了坚持</font></p><div align=center><img width="300" height="380" src="https://img-blog.csdnimg.cn/20200510135004747.gif"/></div><p><font color="#FF9933" >当然文艺一点的爱好也是有的，像美术就是一个，不过就是业余爱好而已</font></p><div align=center><img width="300" height="350" src="https://img-blog.csdnimg.cn/2020051013481968.jpg"/></div><hr><p> <font color="#FF3333 " >不足之处，欢迎大家指正，共同进步共同成长！</font></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 交友 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266+OLED显示多级菜单</title>
      <link href="/2020/05/07/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/8.ESP8266%E9%A9%B1%E5%8A%A8oled%E6%98%BE%E7%A4%BA%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95%EF%BC%88spi%EF%BC%89/"/>
      <url>/2020/05/07/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/8.ESP8266%E9%A9%B1%E5%8A%A8oled%E6%98%BE%E7%A4%BA%E5%A4%9A%E7%BA%A7%E8%8F%9C%E5%8D%95%EF%BC%88spi%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="oled显示"><a href="#oled显示" class="headerlink" title="oled显示"></a>oled显示</h1><h2 id="多级菜单显示"><a href="#多级菜单显示" class="headerlink" title="多级菜单显示"></a>多级菜单显示</h2><p><img src="https://img-blog.csdnimg.cn/202005062258017.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>注意环境</strong></p><ul><li>ESP8266 WIFI模块</li><li>OLED屏 （0.96英寸 spi）</li><li>Arduino IDE 编译环境</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="定义一个结构体"><a href="#定义一个结构体" class="headerlink" title="定义一个结构体"></a>定义一个结构体</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">uchar current;</span><br><span class="line">uchar up; <span class="comment">//向上翻索引号 </span></span><br><span class="line">uchar down; <span class="comment">//向下翻索引号 </span></span><br><span class="line">uchar enter;<span class="comment">//确认索引号</span></span><br><span class="line"><span class="type">void</span> (*current_operation)(); </span><br><span class="line">&#125;key_table; </span><br></pre></td></tr></table></figure><p>这里定义了三个按键，大家可以根据自己的需求来定义</p><h3 id="定义一个结构体数组"><a href="#定义一个结构体数组" class="headerlink" title="定义一个结构体数组"></a>定义一个结构体数组</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">key_table  code_table[<span class="number">10</span>]=</span><br><span class="line">&#123; </span><br><span class="line">&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,(*fun1)&#125;,  <span class="comment">//主界面 </span></span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,(*fun2)&#125;,  <span class="comment">//  </span></span><br><span class="line">&#123;<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,(*fun3)&#125;,  <span class="comment">//QQ   </span></span><br><span class="line">&#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,(*fun4)&#125;,  <span class="comment">//</span></span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,(*fun5)&#125;,</span><br><span class="line">&#123;<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,(*fun6)&#125;,</span><br><span class="line">&#123;<span class="number">6</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">6</span>,(*fun7)&#125;,</span><br><span class="line">&#123;<span class="number">7</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">7</span>,(*fun8)&#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;fun.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//按键管脚</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> keyup 12</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> keydown 13</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> keyenter 14</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"></span><br><span class="line">uchar func_index = <span class="number">0</span>; </span><br><span class="line"><span class="type">void</span> (*current_operation_index)();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">uchar current;</span><br><span class="line">uchar up; <span class="comment">//向上翻索引号 </span></span><br><span class="line">uchar down; <span class="comment">//向下翻索引号 </span></span><br><span class="line">uchar enter;<span class="comment">//确认索引号</span></span><br><span class="line"><span class="type">void</span> (*current_operation)(); </span><br><span class="line">&#125;key_table; </span><br><span class="line"></span><br><span class="line">key_table  code_table[<span class="number">10</span>]=</span><br><span class="line">&#123; </span><br><span class="line">&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,(*fun1)&#125;,  <span class="comment">//主界面 </span></span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,(*fun2)&#125;,  <span class="comment">//  </span></span><br><span class="line">&#123;<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>,(*fun3)&#125;,  <span class="comment">//QQ   </span></span><br><span class="line">&#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,(*fun4)&#125;,  <span class="comment">//</span></span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,(*fun5)&#125;,</span><br><span class="line">&#123;<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,(*fun6)&#125;,</span><br><span class="line">&#123;<span class="number">6</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">6</span>,(*fun7)&#125;,</span><br><span class="line">&#123;<span class="number">7</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">7</span>,(*fun8)&#125;,</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//键值</span></span><br><span class="line"><span class="type">int</span> up_val, down_val, enter_val;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">OLED_ColorTurn(<span class="number">0</span>);<span class="comment">//0正常显示 1反色显示</span></span><br><span class="line">OLED_DisplayTurn(<span class="number">0</span>);<span class="comment">//0正常显示 1翻转180度显示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//按键管脚定义</span></span><br><span class="line">pinMode(keyup,INPUT_PULLUP); <span class="comment">//上拉输入模式</span></span><br><span class="line">pinMode(keydown,INPUT_PULLUP);</span><br><span class="line">pinMode(keyenter,INPUT_PULLUP);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">up_val = digitalRead(keyup);</span><br><span class="line">down_val = digitalRead(keydown);</span><br><span class="line">enter_val = digitalRead(keyenter);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((up_val==LOW)||(down_val==LOW)||(enter_val==LOW)) </span><br><span class="line">&#123; </span><br><span class="line">delay(<span class="number">10</span>);<span class="comment">//消抖 </span></span><br><span class="line"><span class="keyword">if</span>(up_val==LOW) </span><br><span class="line">&#123; </span><br><span class="line">      <span class="keyword">while</span>(!up_val)<span class="comment">//松手检 </span></span><br><span class="line">      &#123;</span><br><span class="line">        up_val = digitalRead(keyup);</span><br><span class="line">        current_operation_index=code_table[func_index].current_operation;     </span><br><span class="line">        (*current_operation_index)();<span class="comment">//执行当前操作函数</span></span><br><span class="line">      &#125;</span><br><span class="line">      OLED_Clear();</span><br><span class="line">      func_index=code_table[func_index].up; <span class="comment">//向上     </span></span><br><span class="line">&#125; </span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(down_val==LOW)  </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">while</span>(!down_val)<span class="comment">//松手检 </span></span><br><span class="line">      &#123;</span><br><span class="line">        down_val = digitalRead(keydown);</span><br><span class="line">        current_operation_index=code_table[func_index].current_operation;     </span><br><span class="line">        (*current_operation_index)();<span class="comment">//执行当前操作函数</span></span><br><span class="line">      &#125;</span><br><span class="line">      OLED_Clear();</span><br><span class="line">      func_index=code_table[func_index].down; <span class="comment">//向下翻  </span></span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line"><span class="keyword">if</span>(enter_val==LOW) </span><br><span class="line">&#123; </span><br><span class="line">      <span class="keyword">while</span>(!enter_val)<span class="comment">//松手检 </span></span><br><span class="line">      &#123;</span><br><span class="line">        enter_val = digitalRead(keyenter);</span><br><span class="line">        current_operation_index=code_table[func_index].current_operation;     </span><br><span class="line">        (*current_operation_index)();<span class="comment">//执行当前操作函数</span></span><br><span class="line">       &#125;</span><br><span class="line">      OLED_Clear();</span><br><span class="line">      func_index=code_table[func_index].enter; <span class="comment">//确认      </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">current_operation_index=code_table[func_index].current_operation; </span><br><span class="line">(*current_operation_index)();<span class="comment">//执行当前操作函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="key-table-code-table-n-的理解"><a href="#key-table-code-table-n-的理解" class="headerlink" title="key_table code table[n] 的理解"></a>key_table code table[n] 的理解</h3><p>1.首先可以先这样定义该数组</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">key_table code table[n]=</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">0</span>,x,y,z,(*fun1)&#125;,</span><br><span class="line">&#123;<span class="number">1</span>,x,y,z,(*fun2)&#125;,</span><br><span class="line">&#123;<span class="number">2</span>,x,y,z,(*fun3)&#125;,</span><br><span class="line">&#123;<span class="number">3</span>,x,y,z,(*fun4)&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,x,y,z,(*fun5)&#125;,</span><br><span class="line">&#123;<span class="number">5</span>,x,y,z,(*fun6)&#125;,</span><br><span class="line">&#123;<span class="number">6</span>,x,y,z,(*fun7)&#125;,</span><br><span class="line">…</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>其中，x,y,z是未知数，先不确定，他们对应的是三个键按下要要执行的索引值，<br>如果四个键，就有四个未知数，在确x,y,z之前，必须要了解自己函数执行什么样的命令。</p><p>2.假如开始时，执行数组里面的第一个即table[0]，而想在此按上键执行函数fun6<br>那么table[0]里面需要这样设置 ｛0，5，y,z,(*fun1)｝<br>同样，如果希望按下键执行fun7则需要设置为 ｛0，x，6 ,z,(*fun1)｝<br>如果希望按确认键执行fun3则需要设置为 ｛0，x，y, 2 , (*fun1)｝<br>如果上面三种情况都想要就设置为 即操作不同的按键执行不同的操作。｛0，5，6,2,(*fun1)｝</p><h2 id="工程代码"><a href="#工程代码" class="headerlink" title="工程代码"></a>工程代码</h2><blockquote><p><a href="https://gitee.com/oldzhai/esp8266_arduino/tree/master/oled/OLED_Menu">oled显示多级菜单</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下开发板通过串口文件传输</title>
      <link href="/2020/05/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/1.Linux%E4%B8%8B%E5%BC%80%E5%8F%91%E6%9D%BF%E9%80%9A%E8%BF%87%E4%B8%B2%E5%8F%A3%E5%92%8CPC%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%EF%BC%88lrzsz%EF%BC%89/"/>
      <url>/2020/05/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/2.linux/2.%E5%BA%94%E7%94%A8/1.Linux%E4%B8%8B%E5%BC%80%E5%8F%91%E6%9D%BF%E9%80%9A%E8%BF%87%E4%B8%B2%E5%8F%A3%E5%92%8CPC%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%EF%BC%88lrzsz%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux操作系统篇"><a href="#Linux操作系统篇" class="headerlink" title="Linux操作系统篇"></a>Linux操作系统篇</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>最近刚入职嵌入式方面工作，老大发话了，说要实现板子和pc电脑通过串口来发送文件，说可以用串口助手之类的，传过去的文件在板子rom里存一份，U盘里面同样也存一份，到时候连续的发，来检测板子的稳定性。我听完感觉不是很难，但是这几天踩了不少坑<br><img src="https://img-blog.csdnimg.cn/20200430215154184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>给大家说一下我用的环境</p><ul><li>开发板：飞凌的OK1012A(Cortex-A53)</li><li>PC端：超级终端</li></ul><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><h3 id="1-注意"><a href="#1-注意" class="headerlink" title="1.注意"></a>1.注意</h3><ul><li>必须安装虚拟机，有linux系统</li><li>虚拟机里面安装了交叉编译器（和板子里面的交叉编译工具链相同）</li><li>开发板移植了linux系统可以运行app</li></ul><h3 id="2-下载"><a href="#2-下载" class="headerlink" title="2.下载"></a>2.下载</h3><p> 首先我们需要下载超级终端软件，用于在PC端连接我们开发板，之前用的PUTTY但是发现这个传不了文件<br> <img src="https://img-blog.csdnimg.cn/20200430214920827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>下载：<a href="https://lanzous.com/ic4jh7e">超级终端</a></p></blockquote><p>如果我们用的是台式电脑，直接通过串口线l连接，不需要安装驱动就可以用（一般为COM1）</p><p>但是如果用的是usb转串口就需要安装驱动</p><blockquote><p>下载：<a href="https://lanzous.com/ic4jixg">串口驱动</a></p></blockquote><p>我们还需要下载lrzsz 离线安装包</p><blockquote><p>下载：<a href="https://lanzous.com/ic4kkab">lrzsz</a></p></blockquote><h2 id="三-调试串口"><a href="#三-调试串口" class="headerlink" title="三.调试串口"></a>三.调试串口</h2><p>我们先得保证超级终端可以连接到我们的开发板，并且可以通过命令来控制，注意这里有个坑</p><blockquote><p>连接成功后终端上有打印启动信息，但是无法输入命令，按任何键都不起作用</p></blockquote><p>这里的COM口会自己识别<br><img src="https://img-blog.csdnimg.cn/20200430220126251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>问题在这里<br><img src="https://img-blog.csdnimg.cn/20200430220508701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>我们不能选默认的硬件，当我改为第一个 Xon&#x2F;Xoff 的时候就好了</strong></p><h2 id="四-lrzsz的移植"><a href="#四-lrzsz的移植" class="headerlink" title="四.lrzsz的移植"></a>四.lrzsz的移植</h2><h3 id="1-编译生成app"><a href="#1-编译生成app" class="headerlink" title="1.编译生成app"></a>1.编译生成app</h3><p>首先下载我们lrzsz压缩包到我们的Linux虚拟机里面，进行解压<br><code>tar zxvf lrzsz-0.12.20.tar.gz</code><br> <img src="https://img-blog.csdnimg.cn/20200430221545190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入到 lrzsz-0.12.20 这个目录<br> <code>cd lrzsz-0.12.20</code><br><img src="https://img-blog.csdnimg.cn/20200430231325959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入命令：</p><p><code>CFLAGS=-O2 CC=arm-linux-gcc ./configure --cache-file=arml_cachefile0 --prefix=/usr/local/</code></p><ul><li>CFLAGS&#x3D;-O2 &#x2F;&#x2F;编译选项</li><li>CC&#x3D;arm-linux-gcc &#x2F;&#x2F;配置编译器为交叉编译器 加上CC参数表示即时生效，我电脑中的交叉编译器的名字就是arm-linux-…</li><li>.&#x2F;configure &#x2F;&#x2F;配置文件 前面两项必须放在.&#x2F;configure的前面 否则设置无效<br>–cache-file&#x3D;arml_cachefile0  &#x2F;&#x2F;这个命令是生成自己的cache-file 后面的arml_cachefile0是我自己为生成的cache-file取的名字</li><li>–prefix&#x3D;&#x2F;usr&#x2F;local&#x2F; &#x2F;&#x2F;表示具体安装到哪里 这个可以不要 我们知道交叉编译生成的lzr和lsr就可以了</li></ul><p>敲入回车后从下面打印的信息可以看出使用的是arm-linux-gcc编译器(前提是交叉编译器已经安装配置好了)</p><p><img src="https://img-blog.csdnimg.cn/20200430232609555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里注意，如果我们ubuntu 里面安装的不是 arm-linux-gcc ，输入后就会会报错，接下来我们需要重新解压，重新输入正确的交叉编译工具链的名字，要不然会报错</p><p>配置后的解压文件夹多了arm_cache_file0文件<br><img src="https://img-blog.csdnimg.cn/2020043023322565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来我们 输入 make 回车<br><img src="https://img-blog.csdnimg.cn/20200430233349416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>编辑结束后就会在 src目录下生成 lrz 和 lsz 可执行文件</p><ul><li>lrz 板子收文件</li><li>lsz 板子发文件</li></ul><p><img src="https://img-blog.csdnimg.cn/20200430233608162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-移植到开发板"><a href="#2-移植到开发板" class="headerlink" title="2.移植到开发板"></a>2.移植到开发板</h3><p>先将上面生成的可执行二进制文件，移动到板子的  &#x2F;usr&#x2F;local&#x2F;bin 目录下，然后在创建软链接，并命名为 rz和sz</p><p><code>ln -s /usr/local/bin/lrz rz</code><br><code>ln -s /usr/local/bin/lsz sz</code></p><p>到时候用的时候直接输命令就可以了（rz&#x2F;sz）<br>到此处我们就大工告成！</p><h2 id="五-总结"><a href="#五-总结" class="headerlink" title="五.总结"></a>五.总结</h2><p>接下来就来操作一下<br><strong>PC端 给板子发文件</strong><br>因为只有一个串口，我们先输入 <code>rz</code>命令，这时我们的终端就卡着不动了，我们操作软件上面的菜单栏发文件就可以了<br><strong>板子发送文件到PC端</strong><br>我们输入 <code>sz 文件名</code> 就会将该文件传的我们的PC机设置的目录下</p><p>这样还是挺方便的，在我们开发板没有联网的情况下，编译完app测试，在不用插拔sd卡了所以推荐给大家</p><p>至于老大说的任务，我打算有shell命令来实现，将文件拷贝到U盘上，后续看能不能连续的收发</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> linux应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32燃烧你的oled屏（0.96寸SPI）</title>
      <link href="/2020/04/19/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/50.STM32%E7%87%83%E7%83%A7%E4%BD%A0%E7%9A%84oled%E5%B1%8F%EF%BC%880.96%E5%AF%B8SPI%EF%BC%89/"/>
      <url>/2020/04/19/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/50.STM32%E7%87%83%E7%83%A7%E4%BD%A0%E7%9A%84oled%E5%B1%8F%EF%BC%880.96%E5%AF%B8SPI%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="OLED屏驱动"><a href="#OLED屏驱动" class="headerlink" title="OLED屏驱动"></a>OLED屏驱动</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>屏幕在人机交互中起着非常重要的作用，我们可以发现生活很多电子产品，不管是医用还是消费类电子，无非就是屏幕，按键，一些传感器。由此可以这些挺重要的，作为一个电子爱好者不会那就<br><img src="https://img-blog.csdnimg.cn/20200419161044815.png" alt="在这里插入图片描述"><br>之前看到好到博主都发的教程，但是不是那么详细，对于小白来说看起来真的挺吃力的，无从下手，今天我们就来驱动目前非常常见的oled屏，请往下面看<br><img src="https://img-blog.csdnimg.cn/20200419161534204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>注意看这里</strong></p><ul><li>oled（0.96寸128x64 7针的 spi）</li><li>STM32F103ZET6</li><li>编译环境 keil5</li></ul><h2 id="二-连接"><a href="#二-连接" class="headerlink" title="二.连接"></a>二.连接</h2><p>我们的单片机如何和我们的oled屏幕连接，之前看认为需要连接固定的引脚，现在发现我错了，连接的方式可以自己随便定义，我的是这样连接的</p><p><em><strong>7个管脚</strong></em></p><table><thead><tr><th>OLED</th><th>STM32F103</th></tr></thead><tbody><tr><td>VCC</td><td>VCC&#x2F;3.3V</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>D0(SCLK时钟)</td><td>PA4</td></tr><tr><td>D1(SDIN数据)</td><td>PA5</td></tr><tr><td>RES(复位)</td><td>PA2</td></tr><tr><td>DC(数据命令标志位)</td><td>PA6</td></tr><tr><td>CS(片选)</td><td>PA7</td></tr></tbody></table><blockquote><p>注意：oled屏的工作电压为3.3V,接5V有可能烧坏屏幕</p></blockquote><h2 id="三-OLED显示原理"><a href="#三-OLED显示原理" class="headerlink" title="三.OLED显示原理"></a>三.OLED显示原理</h2><h3 id="1-理解SSD1306"><a href="#1-理解SSD1306" class="headerlink" title="1.理解SSD1306"></a>1.理解SSD1306</h3><p>了解OLED模块的显示原理，我们先来了解一下OLED的驱动芯片SSD1306，其显存大小总共为128x64 bit 大小，SSD1306将这些显存分为了8页，其对应的关系如下（这里我理解的不是很明白建议大家看一下手册）<br><img src="https://img-blog.csdnimg.cn/20200419201919644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>ssd1306的命令还是挺多的这里就简绍比较常见的<br><img src="https://img-blog.csdnimg.cn/20200419203150738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再来介绍一下 OLED 模块的初始化过程，SSD1306 的典型初始化框图如下图<br><img src="https://img-blog.csdnimg.cn/20200419203316850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>详细了解SSD1306可以看一手册<br>地址：<a href="https://lanzous.com/iblv5ad">SSD1306中文手册</a></p></blockquote><h3 id="2-驱动方式"><a href="#2-驱动方式" class="headerlink" title="2.驱动方式"></a>2.驱动方式</h3><p>SSD1306的驱动方式很多，比如 8080并口驱动，SPI驱动，IIC驱动，这里我是用SPI来驱动的</p><p><strong>四线操作</strong></p><ul><li>CS：OLED 片选信号（拉低有效）</li><li>RST(RES)：硬复位 OLED</li><li>DC：命令&#x2F;数据标志（0，读写命令；1，读写数据）</li><li>SCLK：串行时钟线。在 4 线串行模式下，D0 信号线作为串行时钟线 SCLK。</li><li>SDIN：串行数据线。在 4 线串行模式下，D1 信号线作为串行数据线 SDIN。</li></ul><blockquote><p>在 4 线串行模式下，只能往模块写数据而不能读数据。<br>在 4 线 SPI 模式下，每个数据长度均为 8 位，在 SCLK 的上升沿，数据从 SDIN 移入到SSD1306，并且是高位在前的。DC 线还是用作命令&#x2F;数据的标志线</p></blockquote><p>具体看一下 spi写数据的时序图<br><img src="https://img-blog.csdnimg.cn/20200419204317604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-代码部分"><a href="#四-代码部分" class="headerlink" title="四.代码部分"></a>四.代码部分</h2><p>毫无客气的发出我的整个工程代码，删去了多于部分，只留下oled屏的驱动部分，而且有注释哟，不看看，难度不香吗</p><blockquote><p>工程代码：<a href="https://gitee.com/oldzhai/oled.git">STM32F103 驱动oled屏</a></p></blockquote><p>再来看看我们的部分代码（中景园oled驱动代码）</p><p><strong>oled.h</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_H </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;system.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//管脚的宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SCL_Clr() GPIO_ResetBits(GPIOA,GPIO_Pin_4)<span class="comment">//SCL</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SCL_Set() GPIO_SetBits(GPIOA,GPIO_Pin_4)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SDA_Clr() GPIO_ResetBits(GPIOA,GPIO_Pin_5)<span class="comment">//SDA</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SDA_Set() GPIO_SetBits(GPIOA,GPIO_Pin_5)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_RES_Clr() GPIO_ResetBits(GPIOA,GPIO_Pin_2)<span class="comment">//RES</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_RES_Set() GPIO_SetBits(GPIOA,GPIO_Pin_2)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DC_Clr()  GPIO_ResetBits(GPIOA,GPIO_Pin_6)<span class="comment">//DC</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DC_Set()  GPIO_SetBits(GPIOA,GPIO_Pin_6)</span></span><br><span class="line">      </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CS_Clr()  GPIO_ResetBits(GPIOA,GPIO_Pin_7)<span class="comment">//CS</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CS_Set()  GPIO_SetBits(GPIOA,GPIO_Pin_7)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_CMD  0<span class="comment">//写命令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_DATA 1<span class="comment">//写数据</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ClearPoint</span><span class="params">(u8 x,u8 y)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ColorTurn</span><span class="params">(u8 i)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DisplayTurn</span><span class="params">(u8 i)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(u8 dat,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DisPlay_On</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DisPlay_Off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Refresh</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawPoint</span><span class="params">(u8 x,u8 y,u8 t)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawLine</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawCircle</span><span class="params">(u8 x,u8 y,u8 r)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 size1,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar6x8</span><span class="params">(u8 x,u8 y,u8 chr,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 size1,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size1,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChinese</span><span class="params">(u8 x,u8 y,u8 num,u8 size1,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ScrollDisplay</span><span class="params">(u8 num,u8 space,u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowPicture</span><span class="params">(u8 x,u8 y,u8 sizex,u8 sizey,u8 BMP[],u8 mode)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>oled.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oledfont.h&quot;</span>   </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SysTick.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">u8 OLED_GRAM[<span class="number">144</span>][<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//反显函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ColorTurn</span><span class="params">(u8 i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//正常显示</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xA7</span>,OLED_CMD);<span class="comment">//反色显示</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//屏幕旋转180度</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DisplayTurn</span><span class="params">(u8 i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//正常显示</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0xC0</span>,OLED_CMD);<span class="comment">//反转显示</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA0</span>,OLED_CMD);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WR_Byte</span><span class="params">(u8 dat,u8 cmd)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i;  </span><br><span class="line"><span class="keyword">if</span>(cmd)</span><br><span class="line">  OLED_DC_Set();</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  OLED_DC_Clr();</span><br><span class="line">OLED_CS_Clr();</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_SCL_Clr();</span><br><span class="line"><span class="keyword">if</span>(dat&amp;<span class="number">0x80</span>)</span><br><span class="line">   OLED_SDA_Set();</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">   OLED_SDA_Clr();</span><br><span class="line">OLED_SCL_Set();</span><br><span class="line">dat&lt;&lt;=<span class="number">1</span>;   </span><br><span class="line">&#125;   </span><br><span class="line">OLED_CS_Set();</span><br><span class="line">OLED_DC_Set();     </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启OLED显示 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DisPlay_On</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//电荷泵使能</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//开启电荷泵</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//点亮屏幕</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭OLED显示 </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DisPlay_Off</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//电荷泵使能</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//关闭电荷泵</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//关闭屏幕</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新显存到OLED</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Refresh</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i,n;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">   OLED_WR_Byte(<span class="number">0xb0</span>+i,OLED_CMD); <span class="comment">//设置行起始地址</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);   <span class="comment">//设置低列起始地址</span></span><br><span class="line">   OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);   <span class="comment">//设置高列起始地址</span></span><br><span class="line">   <span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line"> OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//清屏函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i,n;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">128</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line"> OLED_GRAM[n][i]=<span class="number">0</span>;<span class="comment">//清除所有数据</span></span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">OLED_Refresh();<span class="comment">//更新显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画点 </span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//t:1 填充 0,清空</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawPoint</span><span class="params">(u8 x,u8 y,u8 t)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i,m,n;</span><br><span class="line">i=y/<span class="number">8</span>;</span><br><span class="line">m=y%<span class="number">8</span>;</span><br><span class="line">n=<span class="number">1</span>&lt;&lt;m;</span><br><span class="line"><span class="keyword">if</span>(t)&#123;OLED_GRAM[x][i]|=n;&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_GRAM[x][i]=~OLED_GRAM[x][i];</span><br><span class="line">OLED_GRAM[x][i]|=n;</span><br><span class="line">OLED_GRAM[x][i]=~OLED_GRAM[x][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//画线</span></span><br><span class="line"><span class="comment">//x1,y1:起点坐标</span></span><br><span class="line"><span class="comment">//x2,y2:结束坐标</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawLine</span><span class="params">(u8 x1,u8 y1,u8 x2,u8 y2,u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 t; </span><br><span class="line"><span class="type">int</span> xerr=<span class="number">0</span>,yerr=<span class="number">0</span>,delta_x,delta_y,distance;</span><br><span class="line"><span class="type">int</span> incx,incy,uRow,uCol;</span><br><span class="line">delta_x=x2-x1; <span class="comment">//计算坐标增量 </span></span><br><span class="line">delta_y=y2-y1;</span><br><span class="line">uRow=x1;<span class="comment">//画线起点坐标</span></span><br><span class="line">uCol=y1;</span><br><span class="line"><span class="keyword">if</span>(delta_x&gt;<span class="number">0</span>)incx=<span class="number">1</span>; <span class="comment">//设置单步方向 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (delta_x==<span class="number">0</span>)incx=<span class="number">0</span>;<span class="comment">//垂直线 </span></span><br><span class="line"><span class="keyword">else</span> &#123;incx=<span class="number">-1</span>;delta_x=-delta_x;&#125;</span><br><span class="line"><span class="keyword">if</span>(delta_y&gt;<span class="number">0</span>)incy=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (delta_y==<span class="number">0</span>)incy=<span class="number">0</span>;<span class="comment">//水平线 </span></span><br><span class="line"><span class="keyword">else</span> &#123;incy=<span class="number">-1</span>;delta_y=-delta_x;&#125;</span><br><span class="line"><span class="keyword">if</span>(delta_x&gt;delta_y)distance=delta_x; <span class="comment">//选取基本增量坐标轴 </span></span><br><span class="line"><span class="keyword">else</span> distance=delta_y;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;distance+<span class="number">1</span>;t++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_DrawPoint(uRow,uCol,mode);<span class="comment">//画点</span></span><br><span class="line">xerr+=delta_x;</span><br><span class="line">yerr+=delta_y;</span><br><span class="line"><span class="keyword">if</span>(xerr&gt;distance)</span><br><span class="line">&#123;</span><br><span class="line">xerr-=distance;</span><br><span class="line">uRow+=incx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(yerr&gt;distance)</span><br><span class="line">&#123;</span><br><span class="line">yerr-=distance;</span><br><span class="line">uCol+=incy;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//x,y:圆心坐标</span></span><br><span class="line"><span class="comment">//r:圆的半径</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_DrawCircle</span><span class="params">(u8 x,u8 y,u8 r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b,num;</span><br><span class="line">    a = <span class="number">0</span>;</span><br><span class="line">    b = r;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">2</span> * b * b &gt;= r * r)      </span><br><span class="line">    &#123;</span><br><span class="line">        OLED_DrawPoint(x + a, y - b,<span class="number">1</span>);</span><br><span class="line">        OLED_DrawPoint(x - a, y - b,<span class="number">1</span>);</span><br><span class="line">        OLED_DrawPoint(x - a, y + b,<span class="number">1</span>);</span><br><span class="line">        OLED_DrawPoint(x + a, y + b,<span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line">        OLED_DrawPoint(x + b, y + a,<span class="number">1</span>);</span><br><span class="line">        OLED_DrawPoint(x + b, y - a,<span class="number">1</span>);</span><br><span class="line">        OLED_DrawPoint(x - b, y - a,<span class="number">1</span>);</span><br><span class="line">        OLED_DrawPoint(x - b, y + a,<span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        a++;</span><br><span class="line">        num = (a * a + b * b) - r*r;<span class="comment">//计算画的点离圆心的距离</span></span><br><span class="line">        <span class="keyword">if</span>(num &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            b--;</span><br><span class="line">            a--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//在指定位置显示一个字符,包括部分字符</span></span><br><span class="line"><span class="comment">//x:0~127</span></span><br><span class="line"><span class="comment">//y:0~63</span></span><br><span class="line"><span class="comment">//size1:选择字体 6x8/6x12/8x16/12x24</span></span><br><span class="line"><span class="comment">//mode:0,反色显示;1,正常显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(u8 x,u8 y,u8 chr,u8 size1,u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i,m,temp,size2,chr1;</span><br><span class="line">u8 x0=x,y0=y;</span><br><span class="line"><span class="keyword">if</span>(size1==<span class="number">8</span>)size2=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">else</span> size2=(size1/<span class="number">8</span>+((size1%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>))*(size1/<span class="number">2</span>);  <span class="comment">//得到字体一个字符对应点阵集所占的字节数</span></span><br><span class="line">chr1=chr-<span class="string">&#x27; &#x27;</span>;  <span class="comment">//计算偏移后的值</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size2;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(size1==<span class="number">8</span>)</span><br><span class="line">  &#123;temp=asc2_0806[chr1][i];&#125; <span class="comment">//调用0806字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size1==<span class="number">12</span>)</span><br><span class="line">        &#123;temp=asc2_1206[chr1][i];&#125; <span class="comment">//调用1206字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size1==<span class="number">16</span>)</span><br><span class="line">        &#123;temp=asc2_1608[chr1][i];&#125; <span class="comment">//调用1608字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size1==<span class="number">24</span>)</span><br><span class="line">        &#123;temp=asc2_2412[chr1][i];&#125; <span class="comment">//调用2412字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&amp;<span class="number">0x01</span>)OLED_DrawPoint(x,y,mode);</span><br><span class="line"><span class="keyword">else</span> OLED_DrawPoint(x,y,!mode);</span><br><span class="line">temp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span>((size1!=<span class="number">8</span>)&amp;&amp;((x-x0)==size1/<span class="number">2</span>))</span><br><span class="line">&#123;x=x0;y0=y0+<span class="number">8</span>;&#125;</span><br><span class="line">y=y0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//显示字符串</span></span><br><span class="line"><span class="comment">//x,y:起点坐标  </span></span><br><span class="line"><span class="comment">//size1:字体大小 </span></span><br><span class="line"><span class="comment">//*chr:字符串起始地址 </span></span><br><span class="line"><span class="comment">//mode:0,反色显示;1,正常显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(u8 x,u8 y,u8 *chr,u8 size1,u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>((*chr&gt;=<span class="string">&#x27; &#x27;</span>)&amp;&amp;(*chr&lt;=<span class="string">&#x27;~&#x27;</span>))<span class="comment">//判断是不是非法字符!</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x,y,*chr,size1,mode);</span><br><span class="line"><span class="keyword">if</span>(size1==<span class="number">8</span>)x+=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">else</span> x+=size1/<span class="number">2</span>;</span><br><span class="line">chr++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//m^n</span></span><br><span class="line">u32 <span class="title function_">OLED_Pow</span><span class="params">(u8 m,u8 n)</span></span><br><span class="line">&#123;</span><br><span class="line">u32 result=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line">  result*=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示数字</span></span><br><span class="line"><span class="comment">//x,y :起点坐标</span></span><br><span class="line"><span class="comment">//num :要显示的数字</span></span><br><span class="line"><span class="comment">//len :数字的位数</span></span><br><span class="line"><span class="comment">//size:字体大小</span></span><br><span class="line"><span class="comment">//mode:0,反色显示;1,正常显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(u8 x,u8 y,u32 num,u8 len,u8 size1,u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 t,temp,m=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(size1==<span class="number">8</span>)m=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp=(num/OLED_Pow(<span class="number">10</span>,len-t<span class="number">-1</span>))%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(x+(size1/<span class="number">2</span>+m)*t,y,<span class="string">&#x27;0&#x27;</span>,size1,mode);</span><br><span class="line">      &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">  OLED_ShowChar(x+(size1/<span class="number">2</span>+m)*t,y,temp+<span class="string">&#x27;0&#x27;</span>,size1,mode);</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="comment">//x,y:起点坐标</span></span><br><span class="line"><span class="comment">//num:汉字对应的序号</span></span><br><span class="line"><span class="comment">//mode:0,反色显示;1,正常显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChinese</span><span class="params">(u8 x,u8 y,u8 num,u8 size1,u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 m,temp;</span><br><span class="line">u8 x0=x,y0=y;</span><br><span class="line">u16 i,size3=(size1/<span class="number">8</span>+((size1%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>))*size1;  <span class="comment">//得到字体一个字符对应点阵集所占的字节数</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;size3;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(size1==<span class="number">16</span>)</span><br><span class="line">&#123;temp=Hzk1[num][i];&#125;<span class="comment">//调用16*16字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size1==<span class="number">24</span>)</span><br><span class="line">&#123;temp=Hzk2[num][i];&#125;<span class="comment">//调用24*24字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size1==<span class="number">32</span>)       </span><br><span class="line">&#123;temp=Hzk3[num][i];&#125;<span class="comment">//调用32*32字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(size1==<span class="number">64</span>)</span><br><span class="line">&#123;temp=Hzk4[num][i];&#125;<span class="comment">//调用64*64字体</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&amp;<span class="number">0x01</span>)OLED_DrawPoint(x,y,mode);</span><br><span class="line"><span class="keyword">else</span> OLED_DrawPoint(x,y,!mode);</span><br><span class="line">temp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span>((x-x0)==size1)</span><br><span class="line">&#123;x=x0;y0=y0+<span class="number">8</span>;&#125;</span><br><span class="line">y=y0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//num 显示汉字的个数</span></span><br><span class="line"><span class="comment">//space 每一遍显示的间隔</span></span><br><span class="line"><span class="comment">//mode:0,反色显示;1,正常显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ScrollDisplay</span><span class="params">(u8 num,u8 space,u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">u8 i,n,t=<span class="number">0</span>,m=<span class="number">0</span>,r;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(m==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    OLED_ShowChinese(<span class="number">128</span>,<span class="number">24</span>,t,<span class="number">16</span>,mode); <span class="comment">//写入一个汉字保存在OLED_GRAM[][]数组中</span></span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t==num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(r=<span class="number">0</span>;r&lt;<span class="number">16</span>*space;r++)      <span class="comment">//显示间隔</span></span><br><span class="line"> &#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;<span class="number">144</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">8</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_GRAM[i<span class="number">-1</span>][n]=OLED_GRAM[i][n];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">           OLED_Refresh();</span><br><span class="line"> &#125;</span><br><span class="line">        t=<span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">m++;</span><br><span class="line"><span class="keyword">if</span>(m==<span class="number">16</span>)&#123;m=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;<span class="number">144</span>;i++)   <span class="comment">//实现左移</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">8</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_GRAM[i<span class="number">-1</span>][n]=OLED_GRAM[i][n];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">OLED_Refresh();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//x,y：起点坐标</span></span><br><span class="line"><span class="comment">//sizex,sizey,图片长宽</span></span><br><span class="line"><span class="comment">//BMP[]：要写入的图片数组</span></span><br><span class="line"><span class="comment">//mode:0,反色显示;1,正常显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowPicture</span><span class="params">(u8 x,u8 y,u8 sizex,u8 sizey,u8 BMP[],u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">u16 j=<span class="number">0</span>;</span><br><span class="line">u8 i,n,temp,m;</span><br><span class="line">u8 x0=x,y0=y;</span><br><span class="line">sizey=sizey/<span class="number">8</span>+((sizey%<span class="number">8</span>)?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;sizey;n++)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;sizex;i++)</span><br><span class="line"> &#123;</span><br><span class="line">temp=BMP[j];</span><br><span class="line">j++;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">8</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&amp;<span class="number">0x01</span>)OLED_DrawPoint(x,y,mode);</span><br><span class="line"><span class="keyword">else</span> OLED_DrawPoint(x,y,!mode);</span><br><span class="line">temp&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span>((x-x0)==sizex)</span><br><span class="line">&#123;</span><br><span class="line">x=x0;</span><br><span class="line">y0=y0+<span class="number">8</span>;</span><br><span class="line">&#125;</span><br><span class="line">y=y0;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//OLED的初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定义GPIO管脚</span></span><br><span class="line">GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"> RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE); <span class="comment">//使能A端口时钟</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2|GPIO_Pin_4|GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7;<span class="comment">//OLED连接引脚</span></span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;  <span class="comment">//推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="comment">//速度50MHz</span></span><br><span class="line"> GPIO_Init(GPIOA, &amp;GPIO_InitStructure);  <span class="comment">//初始化GPIOA</span></span><br><span class="line"> GPIO_SetBits(GPIOG,GPIO_Pin_2|GPIO_Pin_4|GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7); <span class="comment">//初始化管脚为高电平</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLED_RES_Clr();</span><br><span class="line">delay_ms(<span class="number">200</span>);</span><br><span class="line">OLED_RES_Set();</span><br><span class="line"></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--turn off oled panel   //关闭屏幕</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//---set low column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x10</span>,OLED_CMD);<span class="comment">//---set high column address</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x81</span>,OLED_CMD);<span class="comment">//--set contrast control register</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xCF</span>,OLED_CMD);<span class="comment">// Set SEG Output Current Brightness</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA1</span>,OLED_CMD);<span class="comment">//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xC8</span>,OLED_CMD);<span class="comment">//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">//--set normal display</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA8</span>,OLED_CMD);<span class="comment">//--set multiplex ratio(1 to 64)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x3f</span>,OLED_CMD);<span class="comment">//--1/64 duty</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD3</span>,OLED_CMD);<span class="comment">//-set display offsetShift Mapping RAM Counter (0x00~0x3F)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x00</span>,OLED_CMD);<span class="comment">//-not offset</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xd5</span>,OLED_CMD);<span class="comment">//--set display clock divide ratio/oscillator frequency</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x80</span>,OLED_CMD);<span class="comment">//--set divide ratio, Set Clock as 100 Frames/Sec</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xD9</span>,OLED_CMD);<span class="comment">//--set pre-charge period</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xF1</span>,OLED_CMD);<span class="comment">//Set Pre-Charge as 15 Clocks &amp; Discharge as 1 Clock</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xDA</span>,OLED_CMD);<span class="comment">//--set com pins hardware configuration</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x12</span>,OLED_CMD);</span><br><span class="line">OLED_WR_Byte(<span class="number">0xDB</span>,OLED_CMD);<span class="comment">//--set vcomh</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x40</span>,OLED_CMD);<span class="comment">//Set VCOM Deselect Level</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x20</span>,OLED_CMD);<span class="comment">//-Set Page Addressing Mode (0x00/0x01/0x02)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x02</span>,OLED_CMD);<span class="comment">//</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x8D</span>,OLED_CMD);<span class="comment">//--set Charge Pump enable/disable</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0x14</span>,OLED_CMD);<span class="comment">//--set(0x10) disable</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA4</span>,OLED_CMD);<span class="comment">// Disable Entire Display On (0xa4/0xa5)</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xA6</span>,OLED_CMD);<span class="comment">// Disable Inverse Display On (0xa6/a7) </span></span><br><span class="line">OLED_Clear();<span class="comment">//清屏操作</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//打开屏幕显示</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>main.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;system.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SysTick.h&quot;</span>  <span class="comment">//延时  </span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//时钟源获取 配置</span></span><br><span class="line">SysTick_Init(<span class="number">72</span>); <span class="comment">//精确延时</span></span><br><span class="line"></span><br><span class="line">OLED_Init();</span><br><span class="line">OLED_ColorTurn(<span class="number">0</span>);<span class="comment">//0正常显示，1 反色显示</span></span><br><span class="line">  OLED_DisplayTurn(<span class="number">0</span>);<span class="comment">//0正常显示 1 屏幕翻转显示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//显示汉字</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChinese(<span class="number">0</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//博</span></span><br><span class="line">OLED_ShowChinese(<span class="number">20</span>,<span class="number">0</span>,<span class="number">14</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//客</span></span><br><span class="line">OLED_ShowString(<span class="number">40</span>,<span class="number">0</span>,<span class="string">&quot;:&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">OLED_ShowString(<span class="number">0</span>,<span class="number">18</span>,<span class="string">&quot;oldzhai.gitee.io&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">25</span>,<span class="number">45</span>,<span class="string">&quot;I&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">OLED_ShowString(<span class="number">40</span>,<span class="number">45</span>,<span class="string">&quot;T&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);</span><br><span class="line">OLED_ShowChinese(<span class="number">60</span>,<span class="number">45</span>,<span class="number">11</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//老</span></span><br><span class="line">OLED_ShowChinese(<span class="number">80</span>,<span class="number">45</span>,<span class="number">12</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//翟</span></span><br><span class="line">OLED_Refresh();<span class="comment">//更新到oled屏上</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong><br>字库和图片取模的代码这里就不放出来了，代码太多了，需要的大家直接看工程代码</p><blockquote><p>最后附上我珍藏多年的取模软件<br>软件地址：<a href="https://lanzous.com/iblwn6d">取模软件</a></p></blockquote><h2 id="五-总结"><a href="#五-总结" class="headerlink" title="五.总结"></a>五.总结</h2><p>刚开始看oled驱动的代码看不懂，现在我们先从main函数开始一点一点看起，先分析里面的逻辑，注意显示时要更新到到oled，显示完后，显示其他内容要清屏，</p><blockquote><p><strong>调试</strong><br>刚开始我测试的时候，屏幕不显示，电源都是正常的，oled屏代码部分出错屏幕是没有任何反应的，这时我们可以通过点灯法来判断程序有没有全部运行，也可以通过串口打印输出来判断</p></blockquote><p>还有就是oled初始化的时候，这些下面这个命令部分</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OLED_WR_Byte(<span class="number">0xAE</span>,OLED_CMD);<span class="comment">//--turn off oled panel   //关闭屏幕</span></span><br><span class="line">OLED_WR_Byte(<span class="number">0xAF</span>,OLED_CMD);<span class="comment">//打开屏幕显示</span></span><br></pre></td></tr></table></figure><p>我们看懂了这些代码的逻辑之后，在其他开发板上都是一样的，只要修改连接的GPIO口就可可以了，然后在项目中显示不同的界面那不是就容易的，像Arduino还封装了好多库，用的话的更方便</p>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓手机当电脑摄像头（droidcam）</title>
      <link href="/2020/04/03/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/7.%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%BD%93%E7%94%B5%E8%84%91%E6%91%84%E5%83%8F%E5%A4%B4%EF%BC%88droidcam%EF%BC%89/"/>
      <url>/2020/04/03/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/7.%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%BD%93%E7%94%B5%E8%84%91%E6%91%84%E5%83%8F%E5%A4%B4%EF%BC%88droidcam%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="软件应用"><a href="#软件应用" class="headerlink" title="软件应用"></a>软件应用</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>最近面试，用的都是电脑，然而电脑的摄像头真的是太模糊的，给人的感觉一下子就不好了，现着买一个摄像头但是感觉平时用的比较少</p><p>所有就在网上找，发现了DroidCam神奇，可以通过wifi连接我们手机，这时电脑就可以借助手机的摄像头和麦克风，我感觉挺好用的就分享给大家</p><p><strong>安装环境</strong></p><ul><li>windows系统电脑（我的win10笔记本）</li><li>安卓手机(红米K20Pro)</li></ul><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><p>我们首先需要的就是安装软件，这边我将电脑的软件和手机的app放在了一起，大家可以在下面下载安装</p><blockquote><p>下载地址：<a href="https://www.lanzous.com/b0b8i3vhe">DroidCam</a></p></blockquote><p>安装过程中，提示的这个也得安装</p><p><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/myphoto/Snipaste_2020-04-03_20-24-00.png" alt="image"></p><p>其他的我就不多说了，都是一些简单的安装</p><h2 id="三-使用"><a href="#三-使用" class="headerlink" title="三.使用"></a>三.使用</h2><h3 id="1-wifi连接"><a href="#1-wifi连接" class="headerlink" title="1.wifi连接"></a>1.wifi连接</h3><p>首先我们保证我们的手机和电脑连接在同一个wifi网络之下<br>打开我们手机上DroidCam<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/myphoto/Screenshot_2020-04-03-22-29-13-098_com.dev47apps..jpg" alt="image"></p><p>我们可以看到我们手机上wifi ip地址，然后填写到电脑端，进行连接<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/myphoto/20200403223247.png" alt="image"></p><p>连接成功之后我们就可以，在我们需要用到的软件上面设置所选用的摄像头了，我这里就一瞩目这个软件为例</p><p><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/myphoto/20200403224302.png" alt="image"></p><p>QQ的话，视频接通之后我们可以在下面进行调整设置，微信也同样是这个道理</p><h3 id="2-usb连接"><a href="#2-usb连接" class="headerlink" title="2.usb连接"></a>2.usb连接</h3><p>usb连接是需要下载驱动，我这边还没测试成功，大家自己拿去好好试一下，不会的百度</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows技能 </tag>
            
            <tag> 系统安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单链表实现学生信息的存储与排序</title>
      <link href="/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/10.%E5%8D%95%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E7%9A%84%E5%AD%98%E5%82%A8%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
      <url>/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/10.%E5%8D%95%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E7%9A%84%E5%AD%98%E5%82%A8%E4%B8%8E%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>偶然的机会，我看到了一道面试题，题目是这样规定的，写一个程序，用来存储学生的学号和成绩，并按分数从低到高排序，请用链表来实现。没有骗大家，这就是一道面试的笔试题，今天就给大家写一下，这道题挺好的，既考察了数据结构内容，又考察了排序算法</p><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><ul><li>我这边是用C语言来写的</li><li>编译的环境是在 VsCode之上</li><li>我写在了一个<code>.c</code>文件里面了</li></ul><h2 id="三-程序"><a href="#三-程序" class="headerlink" title="三.程序"></a>三.程序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   C语言编程</span></span><br><span class="line"><span class="comment">   简单的实现学生学号，号成绩的存储，这里才用链表的形式</span></span><br><span class="line"><span class="comment">   并将分数从低到高排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义枚举 用于成功和失败的判断，当然也可以直接用 0，和 1表示</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">judge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ERROR = <span class="number">-1</span>,</span><br><span class="line">OK,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个结构体来保存学生信息</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">students</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="type">int</span> num;</span><br><span class="line">   <span class="type">float</span> grade;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//类型的简化</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">students</span> <span class="title">ST</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//用一个结构体来表示链表的结点</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   ST data;</span><br><span class="line">   <span class="class"><span class="keyword">struct</span> <span class="title">list</span> *<span class="title">pNext</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">list</span> <span class="title">LIST</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建链表的一个结点</span></span><br><span class="line">LIST* <span class="title function_">creation</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加学生信息</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">inputData</span><span class="params">(LIST* pList)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看学生的信息</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">show</span><span class="params">(LIST* pList)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//学生信息排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sortList</span><span class="params">(LIST* pList, <span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//销毁链表结点</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">destory</span> <span class="params">( LIST* pList )</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ==================== main =====================*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">//定义一个指针变量</span></span><br><span class="line">   LIST * pList = <span class="literal">NULL</span>; </span><br><span class="line">   pList = creation(); <span class="comment">//得到链表的首地址</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="literal">NULL</span> != pList)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;list creation OK\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// n 为需要添加学生的数量</span></span><br><span class="line">   <span class="type">int</span> n, i;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;请输入添加学生的数量\n&quot;</span>);</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">   <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">   &#123;</span><br><span class="line">      inputData(pList);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d 个学生信息添加已完成\n&quot;</span>, n);</span><br><span class="line">   show(pList);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//排序</span></span><br><span class="line">   sortList(pList,n);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;********成绩由小到大排序******\n&quot;</span>);</span><br><span class="line">   show(pList);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//销毁数据</span></span><br><span class="line">   destory (pList);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ======================函数实现===================*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建链表的一个结点</span></span><br><span class="line">LIST* <span class="title function_">creation</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//定义一个指针变量</span></span><br><span class="line">   LIST *pList = <span class="literal">NULL</span>;</span><br><span class="line">   pList = (LIST *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LIST));</span><br><span class="line">   <span class="comment">//判断 初始化</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="literal">NULL</span> == pList)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;malloc error\n&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//申请内存成功 全部初始化为 0</span></span><br><span class="line">   <span class="built_in">memset</span>(pList, <span class="number">0</span>, <span class="keyword">sizeof</span>(LIST));</span><br><span class="line">   <span class="keyword">return</span> pList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加学生信息</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">inputData</span><span class="params">(LIST* pList)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//判断链表是否存在</span></span><br><span class="line">   <span class="keyword">if</span>( <span class="literal">NULL</span> == pList)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> ERROR;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//先创建一个新节点</span></span><br><span class="line">   LIST* p = creation();</span><br><span class="line">   <span class="keyword">if</span>( <span class="literal">NULL</span> == p)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> ERROR;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//赋值</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;==请输入学生学号==\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;data.num);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;==请输入学生成绩==\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;p-&gt;data.grade);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//头插法插入节点</span></span><br><span class="line">   p-&gt;pNext = pList-&gt;pNext;</span><br><span class="line">   pList-&gt;pNext = p;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;num=%d grade=%f 信息添加成功\n&quot;</span>, p-&gt;data.num, p-&gt;data.grade);</span><br><span class="line">   <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看学生的信息</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">show</span><span class="params">(LIST* pList)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//判断链表是否存在,是否为空</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="literal">NULL</span> == pList </span><br><span class="line">||   <span class="literal">NULL</span> == pList-&gt;pNext )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;您还没有添加学生信息\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line">   LIST *p = pList-&gt;pNext;</span><br><span class="line">   <span class="keyword">while</span>(<span class="literal">NULL</span> != p)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="built_in">printf</span> ( <span class="string">&quot;学号：%d  成绩：%f\n&quot;</span>, p-&gt;data.num, p-&gt;data.grade);</span><br><span class="line">      <span class="comment">//更新结点</span></span><br><span class="line">      p = p-&gt;pNext;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*学生信息排序 这里采用冒泡排序的办法（我们只需要改变结点上的数据就可以了）</span></span><br><span class="line"><span class="comment">  按照成绩从低到高排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sortList</span><span class="params">(LIST* pList, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//判断链表是否存在,是否为空</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="literal">NULL</span> == pList </span><br><span class="line">||   <span class="literal">NULL</span> == pList-&gt;pNext )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;您还没有添加学生信息\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line">   LIST *p = pList-&gt;pNext;</span><br><span class="line">   <span class="comment">//排序</span></span><br><span class="line">   <span class="type">int</span> i,j;</span><br><span class="line">   <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="comment">//第一轮排完之后，让指针重新指向头结点</span></span><br><span class="line">      p =  pList-&gt;pNext;</span><br><span class="line">      <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n<span class="number">-1</span>-i; j++)</span><br><span class="line">      &#123;</span><br><span class="line">         <span class="keyword">if</span>(p-&gt;data.grade &gt; p-&gt;pNext-&gt;data.grade)</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="comment">//成绩</span></span><br><span class="line">            <span class="type">float</span> tmp1 = p-&gt;data.grade;</span><br><span class="line">            p-&gt;data.grade =  p-&gt;pNext-&gt;data.grade;</span><br><span class="line">            p-&gt;pNext-&gt;data.grade = tmp1;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//学号</span></span><br><span class="line">            <span class="type">int</span> tmp2 = p-&gt;data.num;</span><br><span class="line">            p-&gt;data.num =  p-&gt;pNext-&gt;data.num;</span><br><span class="line">            p-&gt;pNext-&gt;data.num = tmp2;</span><br><span class="line">         &#125;</span><br><span class="line">         p = p-&gt;pNext;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//销毁链表结点</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">destory</span> <span class="params">( LIST* pList )</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span> ( <span class="literal">NULL</span> == pList </span><br><span class="line">||   <span class="literal">NULL</span> == pList-&gt;pNext )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">free</span> ( pList );</span><br><span class="line">pList = <span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">printf</span> ( <span class="string">&quot;您已经需销毁，无需重复操作！\n&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">   LIST *p = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span> ( <span class="literal">NULL</span> != pList-&gt;pNext )</span><br><span class="line">&#123;</span><br><span class="line">      <span class="comment">//相当于头删</span></span><br><span class="line">p = pList-&gt;pNext;</span><br><span class="line">pList-&gt;pNext = p-&gt;pNext;</span><br><span class="line"><span class="comment">//释放p</span></span><br><span class="line"><span class="built_in">free</span> ( p );</span><br><span class="line">p = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span> ( pList );</span><br><span class="line">pList = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;学生信息已经全部销毁\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong><br><img src="https://img-blog.csdnimg.cn/20200401155917699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>主要看这里信息<br><img src="https://img-blog.csdnimg.cn/20200401155942891.png" alt="在这里插入图片描述"></p><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>这里只是通过链表对数据的简单操作，包括数据的存储，和数据的排序，以及数据的读取</p><blockquote><p>注意<br>这里的排序，第一次我想错了，想到交换每一个结点的连接顺序，通过改变链表的连接顺序来，实现data的有序输出，这样也是可以实现的，需要用到指针来保存地址，不过感觉太麻烦了。我们之间改变每一个结点上的数据域的值就可以，非常方便</p></blockquote><p>在一个，这里只是一个对数据的简单的操作，我们都知道基本的操作包括数据的增删查改，但是当我们程序运行结束以后，重新打开终端，我们的数据是不存在的，这里给大家分享一下，我在linux 系统下写的，在程序结束时将我们的数据写到文件中，等再次进入，数据依然存在</p><blockquote><p><a href="https://gitee.com/zfq0620/goods">商品信息管理系统</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言之指针与数组运算</title>
      <link href="/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/9.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%8C%87%E9%92%88%E4%B8%8E%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97/"/>
      <url>/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/9.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%8C%87%E9%92%88%E4%B8%8E%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言学习"><a href="#C语言学习" class="headerlink" title="C语言学习"></a>C语言学习</h1><h2 id="一-指针与一维数组"><a href="#一-指针与一维数组" class="headerlink" title="一.指针与一维数组"></a>一.指针与一维数组</h2><p><img src="https://img-blog.csdnimg.cn/20200401191236763.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>定义一个数组，定义一个指向数组首元素的地址</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="type">int</span>* p = arr;</span><br></pre></td></tr></table></figure><p>注意这句话</p><blockquote><p>数组名就是数组首元素的地址</p></blockquote><p>这里我们就可以对指针的操作来访问数组的元素</p><p>我能通过下面代码来理解一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> arr[]=&#123;<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line"><span class="type">int</span> * ptr;</span><br><span class="line">ptr=arr;</span><br><span class="line">* (ptr+<span class="number">2</span>)+=<span class="number">2</span>; <span class="comment">//指针加2 指向的是数组的第3个元素</span></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;*ptr= %d *(ptr+2)= %d\n&quot;</span>,*ptr,*(ptr+<span class="number">2</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*ptr= <span class="number">6</span>   *(ptr+<span class="number">2</span>)= <span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="二-指针与二维数组"><a href="#二-指针与二维数组" class="headerlink" title="二.指针与二维数组"></a>二.指针与二维数组</h2><p><img src="https://img-blog.csdnimg.cn/2020040119595389.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">3</span>];</span><br></pre></td></tr></table></figure><p>二维数组有2 行 3 列</p><p>   a的类型是：int (*)[3]–&gt;指向一维数组的指针<br>   a是a[0]的地址，a[0]是<code>int*</code>，a为啥不是<code>int</code> ? <code>**</code></p><p>   <strong>原因：</strong></p><ol><li>a[0]不是指针变量，而是一个一维数组的数组名</li><li>a+1移动了一个一维数组（12个字节），如果是int **,+1就会移动4个字节</li><li>a指向a[0],而a[0]又是一个一维数组，所以a指向一个一维数组<br>  所以 a 是一个指向一维数组的数组指针</li></ol><p>我们通过这个例子来理解一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">2</span>][<span class="number">3</span>]=&#123; &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125; &#125;;</span><br><span class="line"><span class="type">int</span> m,*p;</span><br><span class="line">p=&amp;a[<span class="number">0</span>][<span class="number">0</span>]; <span class="comment">//p指向二维数组第一元素的地址</span></span><br><span class="line">m=(*p)*(*(p+<span class="number">2</span>))*(*(p+<span class="number">4</span>)); <span class="comment">//m = 1*3*5</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;m = %d\n&quot;</span>,m);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行的结果为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">15</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言之指针数组和数组指针</title>
      <link href="/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/8.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E5%92%8C%E6%95%B0%E7%BB%84%E6%8C%87%E9%92%88/"/>
      <url>/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/8.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E5%92%8C%E6%95%B0%E7%BB%84%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言学习"><a href="#C语言学习" class="headerlink" title="C语言学习"></a>C语言学习</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>上次我们说了，指针函数和函数指针，今天我们来说一下，指针数组和数组指针，其中这些看起来很绕的东西，我们掌握对了方法还是挺好记的，还是老办法，看关键词那个再后面就是什么</p><ul><li>指针数组， 本质还是数组</li><li>数组指针， 本质还是指针</li></ul><h2 id="二-指针数组"><a href="#二-指针数组" class="headerlink" title="二.指针数组"></a>二.指针数组</h2><p>我们先来说一下指针数组，顾名思义，这是一个存放指针类型的数组<br>从定义上来看</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* p[<span class="number">3</span>]; <span class="comment">//没有括号括起来它还是数组</span></span><br></pre></td></tr></table></figure><p>这里我还是写一个程序来理解一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//定义一个有三个元素的指针数组</span></span><br><span class="line">   <span class="type">int</span>* p[<span class="number">3</span>];</span><br><span class="line">   <span class="type">int</span> arr[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">      p[i] = &amp;arr[i]; <span class="comment">//p数组存的是arr数组元素的地址</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, * p[i]);  <span class="comment">//加 * 就可以看到它的值</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序运行的结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="三-数组指针"><a href="#三-数组指针" class="headerlink" title="三.数组指针"></a>三.数组指针</h2><p>指向指针的数组） 又称行指针<br>如何定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> (* p)[<span class="number">3</span>];</span><br></pre></td></tr></table></figure><p>从形式来看，是一个指针变量，指向包含了两个元素的数组，每次指针加一时，都要横跨整个步长。似乎数组指针是C语言里专门用来指向二维数组的，它占有内存中一个指针的存储空间。</p><p>我还是用程序说明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">//定义一个有三个元素的指针数组</span></span><br><span class="line">   <span class="type">int</span> (*p)[<span class="number">3</span>];</span><br><span class="line">   <span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;; <span class="comment">//二维数组 2行 3列</span></span><br><span class="line">   </span><br><span class="line">   p = arr; <span class="comment">//将该二维数组的首地址赋给p，也就是arr[0]或&amp;arr[0][0]</span></span><br><span class="line">   p++; <span class="comment">//该语句执行过后，也就是p=p+1;p跨过行arr[0][]指向了行arr[1][]</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, *(*p+i));</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行的结果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><p>所以数组指针也称指向一维数组的指针，亦称行指针。</p>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言之程序的内存分断</title>
      <link href="/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/7.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E6%96%AD/"/>
      <url>/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/7.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E6%96%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>学习C语言，我们得先了解一下，我们所写的程序的本质，我定义的变量去了哪里，我们申请的空间存储在哪里，今天就来给大家简绍一下</p><h2 id="二-程序的内存分配"><a href="#二-程序的内存分配" class="headerlink" title="二.程序的内存分配"></a>二.程序的内存分配</h2><p>我我先看一下详细的内存分段<br><img src="https://img-blog.csdnimg.cn/20200401181306682.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>用户所使用的内存分段<br><img src="https://img-blog.csdnimg.cn/20200401181407229.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>平时我记着都是这五段<br>栈, 堆，未初始化数据，数据，代码段</p><blockquote><p>不同的地方可能分法略有差异</p></blockquote><p><strong>C&#x2F;C++编译的程序占用的内存分为以下几个部分</strong></p><ul><li><p>1、栈区（stack）：由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。</p></li><li><p>2、堆区（heap）：一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收 。注意它与数据结构中的堆是两回事，分配方式倒是类似于链表，呵呵。</p></li><li><p>3、全局区（静态区）（static）：全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。- 程序结束后由系统释放。</p></li><li><p>4、文字常量区：常量字符串就是放在这里的。程序结束后由系统释放</p></li><li><p>5、程序代码区：存放函数体的二进制代码。</p></li></ul><h2 id="三-静态内存和动态内存"><a href="#三-静态内存和动态内存" class="headerlink" title="三.静态内存和动态内存"></a>三.静态内存和动态内存</h2><p>静态内存分配好后，程序运行过程中一直存在不会被释放，且一旦分配好，其内存大小就固定下来不能改变，在编译和链接的阶段就会分配好。</p><p>动态内存是程序运行过程中，根据程序的需要分配和释放，其大小可变。</p><h2 id="四-堆和栈"><a href="#四-堆和栈" class="headerlink" title="四.堆和栈"></a>四.堆和栈</h2><p>在这里我们记住这句话，小栈大堆</p><blockquote><p>就像之前看到一个新闻，某程序员因为大量来定义变量，写程序，被公司告了，不知道为什么往下看就明白了</p></blockquote><p>堆和栈都是动态分配的，区别有两点：</p><ol><li><p>栈是由编译器分配与释放，速度比较快，堆是程序通过调用malloc或new分配，速度比较慢，调用free或delete释放。</p></li><li><p>栈是线性结构，堆是链表结构。</p></li></ol><h2 id="五-应用"><a href="#五-应用" class="headerlink" title="五.应用"></a>五.应用</h2><ul><li>全局变量和static修饰的静态变量都存放在静态内存区。</li><li>函数内部定义的局部变量，存储在栈上，函数退出时，其占用内存被收回。</li><li>通过调用malloc或new得到的内存在堆上，不再需要时要显示的调用free或delete来释放，否则会操作内存泄漏</li></ul><p><strong>程序说明</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;  <span class="comment">//全局初始化区 ，静态内存</span></span><br><span class="line"><span class="type">char</span> *p1;  <span class="comment">//全局未初始化区 ，静态内存</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="type">int</span> b;  <span class="comment">//栈 </span></span><br><span class="line"><span class="type">const</span> c; <span class="comment">//栈</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> s[] = <span class="string">&quot;abc&quot;</span>;  <span class="comment">//栈 </span></span><br><span class="line"><span class="type">char</span> *p2; <span class="comment">// 栈 </span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *p3 = <span class="string">&quot;123456&quot;</span>;  <span class="comment">//&quot;123456\0&quot;在常量区，静态内存,注意p3在栈上 </span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> c =<span class="number">0</span>； <span class="comment">//全局（静态）初始化区 </span></span><br><span class="line"></span><br><span class="line">p1 = (<span class="type">char</span> *)<span class="built_in">malloc</span>(<span class="number">10</span>); </span><br><span class="line">p2 = (<span class="type">char</span> *)<span class="built_in">malloc</span>(<span class="number">20</span>); </span><br><span class="line"><span class="comment">//分配 得来的10和20字节的区域就在堆区。 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">strcpy</span>(p1, <span class="string">&quot;123456&quot;</span>);  <span class="comment">//&quot;123456\0&quot;放在常量区，编译器可能会将它与p3所指向的&quot;123456&quot;优化成一个地方。 </span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><strong>这里要特别注意一下</strong></p><ul><li><p>const修饰的变量原来在哪，修饰完后还在哪,比如修饰全局变量，放在数据段,修饰局部变量，放在栈区</p></li><li><p>static 修饰的不管是全局变量还是局部变量都存在于全局变量区域，数据段</p></li></ul><p>在这里我们可以形象的理解，栈区的数据就像我们去饭店吃饭，告诉老板我们吃什么就好了，吃完直接就走，不用管碗谁来洗，桌子谁来收拾，<br>而在堆区，就像我们自己做饭，安装自己的口味来做自己特别喜欢的佳肴，吃完饭自己收拾所有的一切</p>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言笔试题中的那些坑（一）</title>
      <link href="/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/6.C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AF%95%E9%A2%98%E4%B8%AD%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/04/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/6.C%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AF%95%E9%A2%98%E4%B8%AD%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言面试"><a href="#C语言面试" class="headerlink" title="C语言面试"></a>C语言面试</h1><h2 id="一-strlen的坑"><a href="#一-strlen的坑" class="headerlink" title="一.strlen的坑"></a>一.strlen的坑</h2><p>首先我们来说一下，strlen这个函数，相信大家都知道，不就是一个求字符串长度的函数吗?</p><p>看看这道题，你是否会掉里面…..</p><blockquote><p>char x[ ]&#x3D;”abcdefg”;<br>char y[ ]&#x3D;{‘a’,’b’,’c’,’d’,’e’,’f’,’g’};<br>则正确的叙述为<br>A) 数组X和数组Y等价                 B) 数组x和数组Y的长度相同<br>C) 数组X的长度大于数组Y的长度       D) 数组X的长度小于数组Y的长度</p></blockquote><p>我第一次看到，义无反顾的选择 <code>C</code>  ,结果凉凉了</p><blockquote><p>其实这道题的考点，在于字符串末尾的结束符 ‘\0’ 以及strlen函数，是否计算’\0’</p></blockquote><p>我通过一个程序给大家看一看</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">char</span> arr[]=<span class="string">&quot;abcdefg&quot;</span>;</span><br><span class="line">   <span class="type">char</span> str[]=&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>&#125;; </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;arr= %d str= %d\n&quot;</span>,<span class="built_in">strlen</span>(arr),<span class="built_in">strlen</span>(str));</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里图片为证<br><img src="https://img-blog.csdnimg.cn/20200401163315954.png" alt="在这里插入图片描述"></p><blockquote><p>想必大家都知道了正确答案为 <code>D</code></p></blockquote><p><strong>那么为什么那，那个 14是哪来的？</strong></p><p>首先我们区分，strlen函数和sizeof 的区别</p><ul><li>strlen不计算字符串末尾的 <code>&#39;\0&#39;</code>，因为strlen 是求字符串长度的</li><li>sizeof 则包含<code>&#39;\0&#39;</code>,因为为 sizeof 是求所占空间的大小</li></ul><p>所以 x 字符串的长度就是 7个字母的长度 7</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> x[]=<span class="string">&quot;abcdefg&quot;</span>;</span><br></pre></td></tr></table></figure><p>而y 字符串，因为后面没有 ‘\0’ ,strlen 不会计算数组的边缘，越界后继续找，直到找到 ‘\0’ 为止，具体是多少，不一定在我这是14，在你们那可能是 10 等等，总之肯定是比 7 大的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> y[]=&#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>&#125;; </span><br></pre></td></tr></table></figure><h2 id="二-和-二者的关系"><a href="#二-和-二者的关系" class="headerlink" title="二.|| 和 | 二者的关系"></a>二.|| 和 | 二者的关系</h2><blockquote><p>首先 || 是逻辑运算符，而 | 是位运算符</p></blockquote><h3 id="1-逻辑运算符"><a href="#1-逻辑运算符" class="headerlink" title="1.逻辑运算符"></a>1.逻辑运算符</h3><p>先给大家看到题再说</p><blockquote><p>设x,y,z,t均为int型变量,则执行以下语句后,t的值为<br>x&#x3D;y&#x3D;z&#x3D;1;<br>t&#x3D;++x||++y&amp;&amp;++z;<br>A) 不定值      B) 2     C) 1     D) 0</p></blockquote><p>第一次做这个题真掉进去了直接选择 <code>B</code>，结果又凉了<br>我还是用程序给大家说明</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> x,y,z,t;</span><br><span class="line">   x=y=z=<span class="number">1</span>;</span><br><span class="line">   t=++x||++y&amp;&amp;++z;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;t= %d x= %d y= %d z= %d\n&quot;</span>,t,x,y,z);</span><br><span class="line"></span><br><span class="line">   <span class="type">int</span> a,b,c;</span><br><span class="line">   a = <span class="number">2</span>,b = <span class="number">0</span>;</span><br><span class="line">   c = a || b; </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c= %d\n&quot;</span>,c);</span><br><span class="line"></span><br><span class="line">   a = <span class="number">0</span>,b = <span class="number">0</span>;</span><br><span class="line">   c = a || b; </span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;c= %d\n&quot;</span>,c);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果<br><img src="https://img-blog.csdnimg.cn/20200401171153754.png" alt="在这里插入图片描述"><br>我们要理解下面两点</p><ul><li>逻辑 || （或）是有真则一定为真，而 &amp;&amp;（与）是两边都为真才为真</li><li>逻辑运算的结果只有 真（1），假（0）</li></ul><p>我们看看这道题,运行的优先级我用括号括起来，先看 ++x ，x&#x3D;2，x不为0.所有为真，那么运算的结果就为真，右边的将不在看，因为没有意义，所有y和z保持原来的值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t=(++x)||(++y&amp;&amp;++z);</span><br></pre></td></tr></table></figure><h3 id="2-位运算"><a href="#2-位运算" class="headerlink" title="2.位运算"></a>2.位运算</h3><p><strong>按位或运算符（|）</strong></p><p>参加运算的两个数，按二进制位进行“或”运算。<br>算规则：参加运算的两个数只要两个数中的一个为1，结果就为1。</p><blockquote><p>即  0 | 0&#x3D; 0 ,  1 | 0&#x3D; 1  ， 0 | 1&#x3D; 1  ,  1 | 1&#x3D; 1 。<br>例：2 | 4 即 00000010 | 00000100 &#x3D; 00000110<br>所以2 | 4的值为 6 </p></blockquote><p><strong>按位与运算符（&amp;）</strong></p><p>参加运算的两个数，按二进制位进行“与”运算。<br>运算规则：只有两个数的二进制同时为1，结果才为1，否则为0。（负数按补码形式参加按位与运算）</p><blockquote><p>即 0 &amp; 0&#x3D; 0 ，0 &amp; 1&#x3D; 0，1 &amp; 0&#x3D; 0， 1 &amp; 1&#x3D; 1。<br>例：3 &amp;5  即 00000011 &amp; 00000101 &#x3D; 00000001<br>所以 3 &amp; 5的值为1</p></blockquote><p><strong>异或运算符（^）</strong></p><p>参加运算的两个数，按二进制位进行“异或”运算。<br>运算规则：参加运算的两个数，如果两个相应位为“异”（值不同），则该位结果为1，否则为0。</p><blockquote><p>即 0 ^ 0&#x3D;0  ， 0 ^ 1&#x3D; 1  ， 1 ^ 0&#x3D; 1  ， 1 ^ 1&#x3D; 0 。<br>例： 2 ^ 4 即 00000010 ^ 00000100 &#x3D;00000110<br>所以 2 ^ 4 的值为6 </p></blockquote><h2 id="三-define中的那些坑"><a href="#三-define中的那些坑" class="headerlink" title="三.define中的那些坑"></a>三.define中的那些坑</h2><p>有的简单的笔试题会让我们写出 标准宏 MIN;，为什么要强调标准，一定一定要注意括号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MIN(a,b)   (((a)&lt;(b))?(a):(b))</span></span><br></pre></td></tr></table></figure><p> 给大家分享一个例题</p><blockquote><p>求答应的结果<br>#define SQR(X) X*X<br>main( )<br>{ int a&#x3D;10,k&#x3D;2,m&#x3D;1;<br>a&#x2F;&#x3D;SQR(k+m)&#x2F;SQR(k+m);<br>printf(“%d\n”,a);<br>}</p></blockquote><p>像这种题我们之间挪下来，在看</p><blockquote><p>a&#x2F;&#x3D; k+m * k+m &#x2F; k+m * k+m<br>a&#x2F;&#x3D;2+1<em>2+1&#x2F;2+1</em>2+1<br>a&#x3D;9</p></blockquote><p>则a的值为9，其实我吗求出的 a 为 9.5 但是注意a的数据类型是 int 型的，所有为 9，这就是考察我们的细心程度</p>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言之指针函数和函数指针</title>
      <link href="/2020/03/31/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/4.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%8C%87%E9%92%88%E5%87%BD%E6%95%B0%E5%92%8C%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88/"/>
      <url>/2020/03/31/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/4.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E6%8C%87%E9%92%88%E5%87%BD%E6%95%B0%E5%92%8C%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言之指针"><a href="#C语言之指针" class="headerlink" title="C语言之指针"></a>C语言之指针</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>在c语言中，有时候我们对基本的概念很容混淆分不清楚，今天来区分一下函数指针，和指针函数，我是这样区分的，看谁在后面本质就是什么</p><ul><li>指针函数：本质就是函数</li><li>函数指针：本质就是指针</li></ul><h2 id="二-指针函数"><a href="#二-指针函数" class="headerlink" title="二.指针函数"></a>二.指针函数</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><p>指针函数就是定义一个函数其返回值类型为一个指针，如何来定义一个指针函数<br>声明格式：类型说明符 * 函数名 (参数)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="title function_">function</span><span class="params">()</span>;</span><br><span class="line"><span class="type">int</span> *<span class="title function_">function</span><span class="params">()</span>;</span><br><span class="line"><span class="type">int</span> * <span class="title function_">function</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>我这里返回值的类型以整形<code>int</code>为例，这三种写法都是可以的，*号的位置无所谓，个人感觉第一种好理解一些</p><h3 id="2-示例"><a href="#2-示例" class="headerlink" title="2.示例"></a>2.示例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> *<span class="title function_">fun</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a =<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> &amp;a; </span><br><span class="line"> &#125; </span><br><span class="line"> </span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line"> &#123;</span><br><span class="line"><span class="type">int</span> *p=fun();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*p = %d&quot;</span>, *p);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="3-运行结果"><a href="#3-运行结果" class="headerlink" title="3.运行结果"></a>3.运行结果</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*p = <span class="number">10</span>；</span><br></pre></td></tr></table></figure><p><strong>注意</strong><br><code>int a = 10 </code> 前面加 <code>static</code> 来修饰的目的是，因为函数调用的时候申请栈区的一段地址空间，不加<code>static</code> 等调用结束，其他程序就有可能占用这片地址空间，会改变其里面的内容（当然我没加<code>static</code>我用vsCode 运行代码直接报错）</p><h2 id="三-函数指针"><a href="#三-函数指针" class="headerlink" title="三.函数指针"></a>三.函数指针</h2><h3 id="1-定义-1"><a href="#1-定义-1" class="headerlink" title="1.定义"></a>1.定义</h3><p>函数指针的本质就是指针我们可以理解为，它就是一个指向函数的指针<br>声明格式：类型说明符 (*函数名) (参数)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> (* function)();</span><br></pre></td></tr></table></figure><p>函数指针是需要把一个函数的地址赋值给它，有两种写法：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function = &amp;add; <span class="comment">//add为另一函数的函数名</span></span><br><span class="line">function = add; </span><br></pre></td></tr></table></figure><p>这两种写法都可以，因为函数名就可以标识它的地址</p><p>调用函数指针的方式也有两种：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = (* function());</span><br><span class="line">x = function();</span><br></pre></td></tr></table></figure><h3 id="2-示例-1"><a href="#2-示例-1" class="headerlink" title="2.示例"></a>2.示例</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">sub</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> x - y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个函数指针</span></span><br><span class="line"><span class="type">int</span> (* function)(<span class="type">int</span> a, <span class="type">int</span> b);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//第一种写法</span></span><br><span class="line">    function = add;</span><br><span class="line">    <span class="comment">//调用函数指针</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (* function)(<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//第二种写法</span></span><br><span class="line">    function = &amp;sub;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (*function)(<span class="number">3</span>,<span class="number">2</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-结果"><a href="#3-结果" class="headerlink" title="3.结果"></a>3.结果</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><h3 id="1-记忆"><a href="#1-记忆" class="headerlink" title="1.记忆"></a>1.记忆</h3><p>函数指针和指针函数在记忆发面我是这样记忆的</p><blockquote><p>用括号将 <code>*</code>括起来，说明指针的优先级高，它就是函数指针<br>没有括号的 函数的优先级大于指针，它就是指针函数</p></blockquote><h3 id="2-二者的区别"><a href="#2-二者的区别" class="headerlink" title="2.二者的区别"></a>2.二者的区别</h3><p><strong>定义不同</strong></p><ul><li>指针函数：本质就是函数，返回值为指针</li><li>函数指针：本质就是指针，指向一个函数</li></ul><p><strong>写法不同</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> (* function)(); <span class="comment">//函数指针</span></span><br><span class="line"><span class="type">int</span>* <span class="title function_">function</span><span class="params">()</span>;  <span class="comment">//指针函数</span></span><br></pre></td></tr></table></figure><p>大家可以根据上面的例子来好好理解一下</p>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言关键字之const和static</title>
      <link href="/2020/03/31/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/5.C%E8%AF%AD%E8%A8%80%E5%85%B3%E9%94%AE%E5%AD%97%E4%B9%8Bconst%E5%92%8Cstatic/"/>
      <url>/2020/03/31/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/5.C%E8%AF%AD%E8%A8%80%E5%85%B3%E9%94%AE%E5%AD%97%E4%B9%8Bconst%E5%92%8Cstatic/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言关键字"><a href="#C语言关键字" class="headerlink" title="C语言关键字"></a>C语言关键字</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>C语言有32个关键字，我们没有必要一个一个背下来，在使用过程中，我们会慢慢一个一个的熟悉，这里我给大家注意简绍一下，<code>const</code> 和<code>static</code>这两个关键字</p><h2 id="二-static"><a href="#二-static" class="headerlink" title="二.static"></a>二.static</h2><p>static关键字在c语言中比较常用，使用恰当能够大大提高程序的模块化特性，有利于扩展和维护</p><h3 id="1-static修饰变量"><a href="#1-static修饰变量" class="headerlink" title="1.static修饰变量"></a>1.static修饰变量</h3><p><strong>全局变量</strong><br>全局变量定义在函数体外部，在全局数据区分配存储空间，且编译器会自动对其初始化，当我们没有赋值是编译器自动优化为0</p><p>对于<code>普通全局变量</code>对整个工程可见，其他文件可以使用extern外部声明后直接使用。也就是说其他文件不能再定义一个与其相同名字的变量了（否则编译器会认为它们是同一个变量）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file1.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a); <span class="comment">//a = 10</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//file2.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>对于 <code>static</code> 修饰的全局变量，仅对当前文件可见，其他文件不可访问，其他文件可以定义与其同名的变量，两者互不影响</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file1.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a); <span class="comment">//a = 0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//file2.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>; <span class="comment">//这是完全可以的</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>在定义不需要与其他文件共享的全局变量时，加上static关键字能够有效地降低程序模块之间的耦合，避免不同文件同名变量的冲突，且不会误使用。</p><p><strong>局部变量</strong><br>普通局部变量是再熟悉不过的变量了，在任何一个函数内部定义的变量（不加static修饰符）都属于这个范畴,编译器也不会为其初始化化</p><blockquote><p>普通的局部变量存储在栈空间类，使用完毕后会立即被释放</p></blockquote><p>静态局部变量使用<code>static</code>修饰符定义，即使在声明时未赋初值，编译器也会把它初始化为0。且静态局部变量存储于进程的全局数据区，即使函数返回，它的值也会保持不变。</p><p>示例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun1</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a = %d\n&quot;</span>,a);</span><br><span class="line">    a++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a++ = %d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;static a = %d\n&quot;</span>,a);</span><br><span class="line">    a++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a++ = %d\n&quot;</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    fun1();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;========\n&quot;</span>);</span><br><span class="line">    fun1();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;********\n&quot;</span>);</span><br><span class="line">    fun2();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;========\n&quot;</span>);</span><br><span class="line">    fun2();</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">a++ = <span class="number">2</span></span><br><span class="line">========</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">a++ = <span class="number">2</span></span><br><span class="line">********</span><br><span class="line"><span class="type">static</span> a = <span class="number">1</span></span><br><span class="line">a++ = <span class="number">2</span></span><br><span class="line">========</span><br><span class="line"><span class="type">static</span> a = <span class="number">2</span></span><br><span class="line">a++ = <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="2-static修饰函数"><a href="#2-static修饰函数" class="headerlink" title="2.static修饰函数"></a>2.static修饰函数</h3><p>函数的使用方式与全局变量类似，在函数的返回类型前加上static，就是静态函数。其特性如下：</p><ul><li>静态函数只能在声明它的文件中可见，其他文件不能引用该函数</li><li>不同的文件可以使用相同名字的静态函数，互不影响</li></ul><blockquote><p>非静态函数可以在另一个文件中直接引用，甚至不必使用extern声明</p></blockquote><p>示例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file1.c </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">fun</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello from fun\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    fun(); <span class="comment">//只能在本文件中调用</span></span><br><span class="line">    fun1(); <span class="comment">//不同文件的普通函数可以直接调用</span></span><br><span class="line">    <span class="comment">//fun2(); //这里就不能调用另一个文件static修饰的fun2();</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//file2.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">fun1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello from static fun1\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">fun2</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello from static fun1\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三-const"><a href="#三-const" class="headerlink" title="三.const"></a>三.const</h2><p>我们记住一点，const 距离谁近就修饰谁，谁的值不能被改变</p><h3 id="1-const-修饰普通变量"><a href="#1-const-修饰普通变量" class="headerlink" title="1.const 修饰普通变量"></a>1.const 修饰普通变量</h3><p>当一个变量用 const 修饰后就不允许改变它的值了<br>比如 </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//a = 5; 错误</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> arr[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="comment">//arr[0] = 0; 错误</span></span><br></pre></td></tr></table></figure><p>变量a和数组arr 中的内容都是不能被修改的，否则编译就会出错</p><h3 id="2-const修饰指针的三种效果"><a href="#2-const修饰指针的三种效果" class="headerlink" title="2.const修饰指针的三种效果"></a>2.const修饰指针的三种效果</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> *p = &amp;a;</span><br></pre></td></tr></table></figure><p><strong>1.const int*p&#x3D;&amp;a；</strong><br>const 和 int的位置是可以互换的，修饰的是 *p ，那么 <em>p 就不可变。</em>p 表示的是指针变量 p 所指向的内存单元里面的内容，此时这个内容不可变</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a =<span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> *p = &amp;a;</span><br><span class="line"><span class="comment">//*p = 20; 就不能使用 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.int*const p&#x3D;&amp;a；</strong><br>const距离 p 比较近，此时 const 修饰的是 p，所以 p 中存放的内存单元的地址不可变，而内存单元中的内容可变。即 p 的指向不可变，p 所指向的内存单元的内容可变。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">fun</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a =<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p = &amp;a;</span><br><span class="line">*p = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//p = &amp;b; 这就不能使用了  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.const int*const p&#x3D;&amp;a；</strong><br>此时 *p 和 p 都被修饰了，那么 p 中存放的内存单元的地址和内存单元中的内容都不可变。</p><pre><code class="c">void fun()&#123;    int a =10;    int b = 5;    const int * const p = &amp;a;    //*p = 20; 这也不行    //p = &amp;b; 这就不能使用了  &#125;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python安装第三方库的问题</title>
      <link href="/2020/03/30/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/4.python/1.python%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/03/30/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/4.python/1.python%E5%AE%89%E8%A3%85%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="python的使用"><a href="#python的使用" class="headerlink" title="python的使用"></a>python的使用</h1><h2 id="一-问题"><a href="#一-问题" class="headerlink" title="一.问题"></a>一.问题</h2><p>输入下面命令安装第三方库的时候，提示<code> You are using pip version 19.2.3, however version 20.0.2 is available.</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Pillow</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330110914910.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提示pip版本太低<br><img src="https://img-blog.csdnimg.cn/20200330111051891.png" alt="在这里插入图片描述"><br>根据提示继续输入命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330111142952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>结果还是这样<br><img src="https://img-blog.csdnimg.cn/20200330111313896.png" alt="在这里插入图片描述"></p><h2 id="二-解决办法"><a href="#二-解决办法" class="headerlink" title="二.解决办法"></a>二.解决办法</h2><p>pip源在国外，这里需要使用国内的源，输入下面指令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip -i https:<span class="comment">//pypi.douban.com/simple</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330172555443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>安装三方包也是</strong></p><p>这里以pillow包为例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow -i https:<span class="comment">//pypi.douban.com/simple</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200330173055109.png" alt="在这里插入图片描述"><br>这样，这就成功了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubMx+FreeRTOS互斥锁和递归互斥锁（五）</title>
      <link href="/2020/03/29/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/39.STM32CubMx+FreeRTOS%E4%BA%92%E6%96%A5%E9%94%81%E5%92%8C%E9%80%92%E5%BD%92%E4%BA%92%E6%96%A5%E9%94%81/"/>
      <url>/2020/03/29/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/39.STM32CubMx+FreeRTOS%E4%BA%92%E6%96%A5%E9%94%81%E5%92%8C%E9%80%92%E5%BD%92%E4%BA%92%E6%96%A5%E9%94%81/</url>
      
        <content type="html"><![CDATA[<h1 id="FreeRTOS系统"><a href="#FreeRTOS系统" class="headerlink" title="FreeRTOS系统"></a>FreeRTOS系统</h1><h2 id="一-简绍"><a href="#一-简绍" class="headerlink" title="一.简绍"></a>一.简绍</h2><p>互斥锁，谁获得的消息谁来释放<br>递归互斥锁，可以连续获得两次，同时释放的时候也释放两次</p><h2 id="二-STM32CubMx配置"><a href="#二-STM32CubMx配置" class="headerlink" title="二.STM32CubMx配置"></a>二.STM32CubMx配置</h2><h3 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h3><p><img src="https://img-blog.csdnimg.cn/20200329164654360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-添加互斥锁"><a href="#2-添加互斥锁" class="headerlink" title="2.添加互斥锁"></a>2.添加互斥锁</h3><p><img src="https://img-blog.csdnimg.cn/20200329160954188.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2添加递归互斥锁"><a href="#2添加递归互斥锁" class="headerlink" title="2添加递归互斥锁"></a>2添加递归互斥锁</h3><p><img src="https://img-blog.csdnimg.cn/20200329161135952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200329164758734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-互斥锁"><a href="#三-互斥锁" class="headerlink" title="三.互斥锁"></a>三.互斥锁</h2><h3 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StartDefaultTask_KEY1</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  osSemaphoreId semaphore = (osSemaphoreId) argument;</span><br><span class="line"><span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nkey1按下\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">osThreadResume(myTask01Handle);</span><br><span class="line">osThreadResume(myTask02Handle);</span><br><span class="line"></span><br><span class="line"><span class="comment">//=================获得====================</span></span><br><span class="line"><span class="keyword">if</span>(osMutexWait(myMutex011Handle, osWaitForever) == osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;获得成功\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;获得失败\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=================释放====================</span></span><br><span class="line"><span class="keyword">if</span>(osMutexRelease(myMutex011Handle) == osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;释放成功\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;释放失败\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartDefaultTask_KEY1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StartTask01</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN StartTask01 */</span></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">osThreadSuspend(<span class="literal">NULL</span>);</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;我是任务1\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartTask01 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">StartTask02</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN StartTask02 */</span></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">osThreadSuspend(<span class="literal">NULL</span>);</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;我是任务2\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartTask02 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>只能获得一次释放一次，只有在释放完成后才可以大家都共享信号量</p><h3 id="2-测试"><a href="#2-测试" class="headerlink" title="2.测试"></a>2.测试</h3><p><img src="https://img-blog.csdnimg.cn/20200329165301340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>当存在获取两次信号的时候，就会阻塞</p></blockquote><h2 id="四-递归互斥锁"><a href="#四-递归互斥锁" class="headerlink" title="四.递归互斥锁"></a>四.递归互斥锁</h2><h3 id="1-代码-1"><a href="#1-代码-1" class="headerlink" title="1.代码"></a>1.代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StartDefaultTask_KEY1</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  osSemaphoreId semaphore = (osSemaphoreId) argument;</span><br><span class="line"><span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nkey1按下\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">osThreadResume(myTask01Handle);</span><br><span class="line">osThreadResume(myTask02Handle);</span><br><span class="line"></span><br><span class="line"><span class="comment">//=================获得====================</span></span><br><span class="line"><span class="keyword">if</span>(osRecursiveMutexWait(myRecursiveMutex01Handle, osWaitForever) == osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;获得成功\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;获得失败\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//=================获得====================</span></span><br><span class="line"><span class="keyword">if</span>(osRecursiveMutexWait(myRecursiveMutex01Handle, osWaitForever) == osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;获得成功\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;获得失败\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=================释放====================</span></span><br><span class="line"><span class="keyword">if</span>(osRecursiveMutexRelease(myRecursiveMutex01Handle) == osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;释放成功\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;释放失败\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//=================释放====================</span></span><br><span class="line"><span class="keyword">if</span>(osRecursiveMutexRelease(myRecursiveMutex01Handle) == osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;释放成功\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;释放失败\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartDefaultTask_KEY1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-测试-1"><a href="#2-测试-1" class="headerlink" title="2.测试"></a>2.测试</h3><p><img src="https://img-blog.csdnimg.cn/20200329172219563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubMx+FreeRTOS二值信号量和计数信号量（四）</title>
      <link href="/2020/03/29/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/38.STM32CubMx+FreeRTOS%E4%BA%8C%E5%80%BC%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%92%8C%E8%AE%A1%E6%95%B0%E4%BF%A1%E5%8F%B7%E9%87%8F%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
      <url>/2020/03/29/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/38.STM32CubMx+FreeRTOS%E4%BA%8C%E5%80%BC%E4%BF%A1%E5%8F%B7%E9%87%8F%E5%92%8C%E8%AE%A1%E6%95%B0%E4%BF%A1%E5%8F%B7%E9%87%8F%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="FreeRTOS系统操作"><a href="#FreeRTOS系统操作" class="headerlink" title="FreeRTOS系统操作"></a>FreeRTOS系统操作</h1><h2 id="一-理解信号量"><a href="#一-理解信号量" class="headerlink" title="一.理解信号量"></a>一.理解信号量</h2><p> <strong>二值信号量</strong><br> 二值信号量主要用于任务同步，二值信号量可以在某个特殊的中断发生时，让任务解除阻塞，相当于让任务与中断同步。中断give，任务take。适用于中断频率比较大的同步当中。</p><p><strong>计数信号量</strong><br>一个二值信号量最多只可以锁存一个中断事件。在锁存的事件还未被处理之前，如果还有中断事件发生，那么后续发生的中断事件将会丢失。如果用计数信号量代替二值信号量，那么，这种丢中断的情形将可以避免。</p><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><p>我们通过添加两个按键KEY1和KEY2，来控制信号量的获得和释放，然后通过串口来打印信息来显示<br><strong>所以先添加两个按键的任务</strong><br><img src="https://img-blog.csdnimg.cn/20200329140215534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-二值信号量"><a href="#三-二值信号量" class="headerlink" title="三.二值信号量"></a>三.二值信号量</h2><h3 id="1-STM32CubMx添加二值信号量"><a href="#1-STM32CubMx添加二值信号量" class="headerlink" title="1.STM32CubMx添加二值信号量"></a>1.STM32CubMx添加二值信号量</h3><p><img src="https://img-blog.csdnimg.cn/20200329141230652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-设置操作句柄"><a href="#2-设置操作句柄" class="headerlink" title="2.设置操作句柄"></a>2.设置操作句柄</h3><p>添加完二值信号量，先生成代码，找到操作二值信号量的句柄<br><img src="https://img-blog.csdnimg.cn/20200329141528435.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200329141834685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-修改代码"><a href="#3-修改代码" class="headerlink" title="3.修改代码"></a>3.修改代码</h3><p>KEY1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StartDefaultTask_KEY1</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* USER CODE BEGIN StartDefaultTask_KEY1 */</span></span><br><span class="line"><span class="comment">/* Infinite loop */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">semaphore是传过来的一个句柄 操作信号量的</span></span><br><span class="line"><span class="comment">StartDefaultTask_KEY1 的实际参数是myBinarySem01Handle 设置的二值信号量名字</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">  osSemaphoreId semaphore = (osSemaphoreId) argument;</span><br><span class="line"><span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(semaphore != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(osSemaphoreRelease(semaphore) == osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); <span class="comment">//挂起所有任务保证串口正常打印</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;释放成功，剩余信号量：%d\n&quot;</span>,osSemaphoreGetCount(semaphore));</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); <span class="comment">//挂起所有任务保证串口正常打印</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已全部释放，剩余信号量：%d\n&quot;</span>,osSemaphoreGetCount(semaphore));</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartDefaultTask_KEY1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>KEY2</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StartTaskKEY2</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN StartTaskKEY2 */</span></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  osSemaphoreId semaphore = (osSemaphoreId) argument;</span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port, KEY2_Pin) == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY2_GPIO_Port, KEY2_Pin) == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(semaphore != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//等待信号量</span></span><br><span class="line"><span class="keyword">if</span>(osSemaphoreWait(semaphore, <span class="number">0</span>) == osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); <span class="comment">//挂起所有任务保证串口正常打印</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;获得成功，剩余信号量：%d\n&quot;</span>,osSemaphoreGetCount(semaphore));</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll(); <span class="comment">//挂起所有任务保证串口正常打印</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;已全部获得，剩余信号量：%d\n&quot;</span>,osSemaphoreGetCount(semaphore));</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartTaskKEY2 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>函数</strong><br>获得信号量 osSemaphoreWait();<br>释放信号量 osSemaphoreRelease();<br>获得信号量的个数 osSemaphoreGetCount()</p><h3 id="4-测试结果"><a href="#4-测试结果" class="headerlink" title="4.测试结果"></a>4.测试结果</h3><p>二值信号量，信号量只有一个，要不存在是1，要么释放就为0<br><img src="https://img-blog.csdnimg.cn/20200329142752479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-计数信号量"><a href="#四-计数信号量" class="headerlink" title="四.计数信号量"></a>四.计数信号量</h2><h3 id="1-STM32CubMx添加计数信号量"><a href="#1-STM32CubMx添加计数信号量" class="headerlink" title="1.STM32CubMx添加计数信号量"></a>1.STM32CubMx添加计数信号量</h3><p><img src="https://img-blog.csdnimg.cn/20200329135042659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200329135332524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-设置操作句柄-1"><a href="#2-设置操作句柄-1" class="headerlink" title="2.设置操作句柄"></a>2.设置操作句柄</h3><p>添加好计数信号量之后，生成代码，然后在freertos.c 找到操作计数信号量的句柄复制<br><img src="https://img-blog.csdnimg.cn/20200329135610904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200329140442319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-代码部分"><a href="#3-代码部分" class="headerlink" title="3.代码部分"></a>3.代码部分</h3><p>代码和测试二值信号量的代码相同不用修改</p><h3 id="4-测试结果-1"><a href="#4-测试结果-1" class="headerlink" title="4.测试结果"></a>4.测试结果</h3><p><img src="https://img-blog.csdnimg.cn/20200329133925742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubMx+FreeRTOS消息队列（三）</title>
      <link href="/2020/03/29/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/37.STM32CubMx+FreeRTOS%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2020/03/29/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/37.STM32CubMx+FreeRTOS%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="FreeRTOS系统操作"><a href="#FreeRTOS系统操作" class="headerlink" title="FreeRTOS系统操作"></a>FreeRTOS系统操作</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>我们可以把消息队列比作是一个存放消息的容器，当我们需要使用消息的时候可以取出消息供自己使用。消息队列是分布式系统中重要的组件，使用消息队列主要是为了通过异步处理提高系统性能和削峰、降低系统耦合性。目前使用较多的消息队列有ActiveMQ，RabbitMQ，Kafka，RocketMQ，我们后面会一一对比这些消息队列。</p><p>另外，我们知道队列 Queue 是一种先进先出的数据结构，所以消费消息时也是按照顺序来消费的。比如生产者发送消息1,2,3…对于消费者就会按照1,2,3…的顺序来消费。但是偶尔也会出现消息被消费的顺序不对的情况，比如某个消息消费失败又或者一个 queue 多个consumer 也会导致消息被消费的顺序不对，我们一定要保证消息被消费的顺序正确。</p><p>除了上面说的消息消费顺序的问题，使用消息队列，我们还要考虑如何保证消息不被重复消费？如何保证消息的可靠性传输（如何处理消息丢失的问题）？……等等问题。所以说使用消息队列也不是十全十美的，使用它也会让系统可用性降低、复杂度提高，另外需要我们保障一致性等问题。</p><h2 id="二-测试准备"><a href="#二-测试准备" class="headerlink" title="二.测试准备"></a>二.测试准备</h2><p>我们需要一个按键任务，和两个普通的任务，按键操作发出一个消息，来观察其他两个普通任务收到消息的情况，来很好的理解消息队列<br><img src="https://img-blog.csdnimg.cn/20200329145824195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-代码部分"><a href="#三-代码部分" class="headerlink" title="三.代码部分"></a>三.代码部分</h2><h3 id="1-按键KEY"><a href="#1-按键KEY" class="headerlink" title="1.按键KEY"></a>1.按键KEY</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StartDefaultTask_KEY</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN StartDefaultTask_KEY */</span></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line"><span class="type">uint16_t</span> ProducerValue = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY_GPIO_Port,KEY_Pin) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(HAL_GPIO_ReadPin(KEY_GPIO_Port,KEY_Pin) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//生产者 按键按下后发送消息 </span></span><br><span class="line"><span class="keyword">if</span>(osMessagePut(myQueue01Handle,ProducerValue,<span class="number">0</span>) != osOK)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspendAll();  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;发送失败\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">++ProducerValue;</span><br><span class="line"></span><br><span class="line">osThreadSuspendAll();  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;发送成功\n&quot;</span>);</span><br><span class="line">osThreadResumeAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(HAL_GPIO_ReadPin(KEY_GPIO_Port,KEY_Pin) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">osDelay(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartDefaultTask_KEY */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint16_t</span> ProducerValue = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>添加消息的时候 写的是 uint16_t ,所有这里也要定义<br>默认的数据类型是 uint32_t 没有这句代码 可以到软件修改<br><img src="https://img-blog.csdnimg.cn/20200329150808942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>产生消息</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osMessagePut(myQueue01Handle,ProducerValue,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>这个参数  myQueue01Handle  是 操作消息队列的句柄<br><img src="https://img-blog.csdnimg.cn/20200329151203954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-任务1"><a href="#2-任务1" class="headerlink" title="2.任务1"></a>2.任务1</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StartTask01</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN StartTask01 */</span></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">osEvent event;</span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">event = osMessageGet(myQueue01Handle,osWaitForever);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(event.status == osEventMessage)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;任务一接收的数据：%d&quot;</span>,event.value.v);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartTask01 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-任务2"><a href="#3-任务2" class="headerlink" title="3.任务2"></a>3.任务2</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">StartTask02</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN StartTask02 */</span></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  osEvent event;</span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">event = osMessageGet(myQueue01Handle,osWaitForever); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(event.status == osEventMessage)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;任务二接收的数据：%d&quot;</span>,event.value.v);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartTask02 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四-测试结果"><a href="#四-测试结果" class="headerlink" title="四.测试结果"></a>四.测试结果</h2><p>这里我添加的两个任务的优先级都是一样的，所以一会是任务一得到消息，一会又是任务二<br><img src="https://img-blog.csdnimg.cn/20200329151916957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>如果将任务一的优先级调到，比任务二的优先级高，则只能是任务一收的消息，因为任务一收到消息之后就将消息删除了，所以任务二是永远收不到消息的</p><p>如果将 osMessageGet()函数得到数据后删除消息 改为osMessagePeek()函数 得到后不删除消，则会显示任务一和任务二都能得到消息</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建博客之添加搜索功能</title>
      <link href="/2020/03/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/4.hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>/2020/03/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/4.hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo博客功能优化"><a href="#hexo博客功能优化" class="headerlink" title="hexo博客功能优化"></a>hexo博客功能优化</h1><h2 id="一-简绍"><a href="#一-简绍" class="headerlink" title="一.简绍"></a>一.简绍</h2><p>在搭建博客中本地的搜索是非常方便的，特别是存在很多文章的时候，我的主题是sakura 搜索功能如下图<br><img src="https://img-blog.csdnimg.cn/20200328140941406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-sakura主题"><a href="#二-sakura主题" class="headerlink" title="二.sakura主题"></a>二.sakura主题</h2><p>在sakura主题中是自带主题的但是我们无法使用，不管我们输入什么都不起作用<br><img src="https://img-blog.csdnimg.cn/20200328144657412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>解决办法</strong><br>简简单单输入下面命令安装相关的插件就可以正常使用了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure><h2 id="三-其他主题"><a href="#三-其他主题" class="headerlink" title="三.其他主题"></a>三.其他主题</h2><h3 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h3><p>到我们的博客根目录执行下面代码，安装插件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><h3 id="2-修改站点配置文件"><a href="#2-修改站点配置文件" class="headerlink" title="2.修改站点配置文件"></a>2.修改站点配置文件</h3><p>还是在我们的博客根目录下，打开_config.yml 配置文件，在最底下添加下面代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: <span class="number">10000</span></span><br></pre></td></tr></table></figure><h3 id="3-修改主题配置文件"><a href="#3-修改主题配置文件" class="headerlink" title="3.修改主题配置文件"></a>3.修改主题配置文件</h3><p>修改主体下 _config.yml配置文件，搜索local_search，修改enable为true</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  <span class="meta"># <span class="keyword">if</span> auto, trigger search by changing input</span></span><br><span class="line">  <span class="meta"># <span class="keyword">if</span> manual, trigger search by pressing enter key or search button</span></span><br><span class="line">  trigger: <span class="keyword">auto</span></span><br><span class="line">  <span class="meta"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: <span class="number">1</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>修改成功之后，我们就可以先在本地测试，就可以看到效果了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建博客之hexo命令失效</title>
      <link href="/2020/03/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/5.hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/"/>
      <url>/2020/03/28/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/5.hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%91%BD%E4%BB%A4%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="入坑集合"><a href="#入坑集合" class="headerlink" title="入坑集合"></a>入坑集合</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>搭建博客的首要任务就是配置好环境，在配置环境好我们在命令行输入 hexo 后显示如下提示，证明我们是配置成功的<br><img src="https://img-blog.csdnimg.cn/20200328142425670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>但是问题出来了，往下看</strong><br>我们输入三剑客命令不起作用了，提示的命令也变少了<br><img src="https://img-blog.csdnimg.cn/20200328142859949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200328142826980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-问题解决"><a href="#二-问题解决" class="headerlink" title="二.问题解决"></a>二.问题解决</h2><p>其实我们仔细观察就能发现问题，这两个输入命令的根目录不同，一个是在博客根目录，一个是在主题的目录下</p><blockquote><p>现在感觉问题好像不是问题了</p></blockquote><p>一般我们运行命令的目录是博客的根目录下进行的<br><img src="https://img-blog.csdnimg.cn/20200328144016769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在此路径下再输入命令，就可以执行了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo s  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubeMx配置串口输入输出</title>
      <link href="/2020/03/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/34.STM32CubMx%E9%85%8D%E7%BD%AE%E4%B8%B2%E5%8F%A3%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/"/>
      <url>/2020/03/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/34.STM32CubMx%E9%85%8D%E7%BD%AE%E4%B8%B2%E5%8F%A3%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="stm32串口的配置"><a href="#stm32串口的配置" class="headerlink" title="stm32串口的配置"></a>stm32串口的配置</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>我们的目的就是，将我们的开发板通过utb-ttl连接我们的电脑，然后我们通过我们的电脑屏幕和我们的开发板进行交互，这是我们使用STM32CubMx进行相关的配置，第一次使用这个软件的话，我们可以先看一下，前面的教程</p><blockquote><p><a href="https://blog.csdn.net/weixin_45631738/article/details/105148822">STM32CubMx 创建一个工程</a></p></blockquote><h2 id="二-STM32CubMX配置串口"><a href="#二-STM32CubMX配置串口" class="headerlink" title="二.STM32CubMX配置串口"></a>二.STM32CubMX配置串口</h2><p>我们这里配置串口 USART1<br><img src="https://img-blog.csdnimg.cn/20200327205535271.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-代码部分"><a href="#三-代码部分" class="headerlink" title="三.代码部分"></a>三.代码部分</h2><p>1.我们打开usart.c<br><img src="https://img-blog.csdnimg.cn/20200327210138958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加如下代码 重新printf</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch,FILE *f)</span></span><br><span class="line">&#123;</span><br><span class="line">HAL_UART_Transmit(&amp;huart1,(<span class="type">uint8_t</span> *)&amp;ch,<span class="number">1</span>,<span class="number">0xffff</span>);</span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">fgetc</span><span class="params">(FILE *f)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> ch = <span class="number">0</span> ;</span><br><span class="line">HAL_UART_Receive(&amp;huart1,&amp;ch,<span class="number">1</span>,<span class="number">0xffff</span>);</span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.跳转到usart.h ,添加头文件<br><img src="https://img-blog.csdnimg.cn/20200327210635927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200327210824657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.测试代码<br><img src="https://img-blog.csdnimg.cn/20200327211457783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>这样我们通过串口就可以和开发板进行交互了<br><img src="https://img-blog.csdnimg.cn/20200327212918254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows问题之部分软件中文显示乱码</title>
      <link href="/2020/03/27/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/3.Windows%E9%97%AE%E9%A2%98%E4%B9%8B%E9%83%A8%E5%88%86%E8%BD%AF%E4%BB%B6%E4%B9%B1%E7%A0%81/"/>
      <url>/2020/03/27/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/3.Windows%E9%97%AE%E9%A2%98%E4%B9%8B%E9%83%A8%E5%88%86%E8%BD%AF%E4%BB%B6%E4%B9%B1%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="windows问题记录"><a href="#windows问题记录" class="headerlink" title="windows问题记录"></a>windows问题记录</h1><h2 id="一-win10-部分软件中文乱码"><a href="#一-win10-部分软件中文乱码" class="headerlink" title="一.win10 部分软件中文乱码"></a>一.win10 部分软件中文乱码</h2><p>我们打开部分软件出现，部分中文汉字乱码的问题，如下图<br><img src="https://img-blog.csdnimg.cn/20200327185438122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-解决办法"><a href="#二-解决办法" class="headerlink" title="二.解决办法"></a>二.解决办法</h2><p>1.我们先打开我们的控制面板，打开到时钟和区域<br><img src="https://img-blog.csdnimg.cn/20200327185538809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.打开区域<img src="https://img-blog.csdnimg.cn/20200327185632317.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.点击管理下的 更改系统区域设置<br><img src="https://img-blog.csdnimg.cn/20200327185719965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.如下设置，后重新电脑<br><img src="https://img-blog.csdnimg.cn/20200327190037500.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-总结"><a href="#三-总结" class="headerlink" title="三.总结"></a>三.总结</h2><p>注意修改后必须重启之后才会生效<br><img src="https://img-blog.csdnimg.cn/20200327190226966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 问题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubeMx+Freertos系统之任务的挂起和取消（二）</title>
      <link href="/2020/03/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/2.STM32CubMx+Freertos%E7%B3%BB%E7%BB%9F%E4%B9%8B%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%8C%82%E8%B5%B7%E5%92%8C%E5%8F%96%E6%B6%88/"/>
      <url>/2020/03/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/2.STM32CubMx+Freertos%E7%B3%BB%E7%BB%9F%E4%B9%8B%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%8C%82%E8%B5%B7%E5%92%8C%E5%8F%96%E6%B6%88/</url>
      
        <content type="html"><![CDATA[<h1 id="Freertos任务的操作"><a href="#Freertos任务的操作" class="headerlink" title="Freertos任务的操作"></a>Freertos任务的操作</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>Freertos对任务的挂起和取消这一块，也特别重要，这里我以小灯的实验为例</p><h2 id="二-STM32CubMX配置"><a href="#二-STM32CubMX配置" class="headerlink" title="二.STM32CubMX配置"></a>二.STM32CubMX配置</h2><p>首先我们还是需要两个task任务，一个用于点灯操作，一个用于按键按下后操作点灯任务的挂起和取消挂起<br><img src="https://img-blog.csdnimg.cn/20200327134400721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-代码部分"><a href="#三-代码部分" class="headerlink" title="三.代码部分"></a>三.代码部分</h2><p>修改freertos.c代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点灯的任务</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">StartDefaultTask_LED</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">/* USER CODE BEGIN StartDefaultTask_LED */</span></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);</span><br><span class="line">    osDelay(<span class="number">500</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartDefaultTask_LED */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按键判断任务</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">StartTask_KEY</span><span class="params">(<span class="type">void</span> <span class="type">const</span> * argument)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN StartTask_KEY */</span></span><br><span class="line">  <span class="comment">/* Infinite loop */</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">char</span> big=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="comment">//KEY 按下挂起</span></span><br><span class="line"><span class="keyword">if</span> (HAL_GPIO_ReadPin(KEY_GPIO_Port,KEY_Pin)==<span class="number">1</span> &amp;&amp; big==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">osThreadSuspend(Task_LEDHandle);</span><br><span class="line">big = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//KEY1 按下取消挂起</span></span><br><span class="line"><span class="keyword">if</span> (HAL_GPIO_ReadPin(KEY1_GPIO_Port,KEY1_Pin)==<span class="number">1</span> &amp;&amp; big==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">osThreadResume(Task_LEDHandle);</span><br><span class="line">big = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    osDelay(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END StartTask_KEY */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>函数解析</strong><br>1.挂起</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">osThreadSuspend(osThreadId);  <span class="comment">//单个挂起</span></span><br><span class="line">osThreadSuspendAll(<span class="type">void</span>);  <span class="comment">//全部挂起</span></span><br></pre></td></tr></table></figure><p>2.取消挂起</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">osThreadResume(osThreadId); <span class="comment">//取消挂起</span></span><br><span class="line">osThreadResumeAll(<span class="type">void</span>); <span class="comment">//全部取消挂起</span></span><br></pre></td></tr></table></figure><blockquote><p>注意<br>osThreadId 可以在freertos.c代码这个部分找，也可以直接在STM32CubMx 新建的task 看到任务的名字</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200327135547945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubeMx创建工程</title>
      <link href="/2020/03/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/3.%E4%BD%BF%E7%94%A8STM32CubMx%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E5%B7%A5%E7%A8%8B/"/>
      <url>/2020/03/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/3.%E4%BD%BF%E7%94%A8STM32CubMx%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="stm32学习"><a href="#stm32学习" class="headerlink" title="stm32学习"></a>stm32学习</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>学习stm32的开发，第一个就是建立一个工程文件，我们可以选择下载stm32的固件库，来自己进行配置，但是感觉特别的麻烦，今天就给大家介绍一个软件STM32CubMx 直接可以创建一个工程，然后再配合keil5使用非常方便</p><blockquote><p>想要自己配置也可以看一下stm32的固件库，这里是stm32f1系列的<br>下载地址：<a href="https://www.lanzous.com/iapfruh">stm32固件库</a><br>模板文件：<a href="https://www.lanzous.com/iapgs2b">工程模板</a></p></blockquote><h2 id="二-STM32CubMx"><a href="#二-STM32CubMx" class="headerlink" title="二.STM32CubMx"></a>二.STM32CubMx</h2><h3 id="1-首先我们得下载安装软件"><a href="#1-首先我们得下载安装软件" class="headerlink" title="1.首先我们得下载安装软件"></a>1.首先我们得下载安装软件</h3><p>傻瓜式的安装就可以了</p><blockquote><p>下载地址：<a href="https://download.csdn.net/download/weixin_45631738/12271078">STM32CubMx </a></p></blockquote><h3 id="2-创建工程"><a href="#2-创建工程" class="headerlink" title="2.创建工程"></a>2.创建工程</h3><p><img src="https://img-blog.csdnimg.cn/20200327202206449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200327202344135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>基本配置<br><img src="https://img-blog.csdnimg.cn/2020032720274727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200327202853766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-其他简绍"><a href="#3-其他简绍" class="headerlink" title="3.其他简绍"></a>3.其他简绍</h3><p>io口配置<br><img src="https://img-blog.csdnimg.cn/20200327203527182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>时钟配置<br><img src="https://img-blog.csdnimg.cn/20200327203303646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020032720393122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200327204047225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="4-生成"><a href="#4-生成" class="headerlink" title="4.生成"></a>4.生成</h3><p><img src="https://img-blog.csdnimg.cn/20200327204210586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-总结"><a href="#三-总结" class="headerlink" title="三.总结"></a>三.总结</h2><p>当出现此界面就说明工程创建成功<br><img src="https://img-blog.csdnimg.cn/20200327204502813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubeMx+Freertos系统开发点灯（一）</title>
      <link href="/2020/03/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/1.STM32CubeMx+Freertos%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%82%B9%E4%BA%AE%E5%B0%8F%E7%81%AF/"/>
      <url>/2020/03/27/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/STM32/1.STM32CubeMx+Freertos%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E7%82%B9%E4%BA%AE%E5%B0%8F%E7%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="STM32-告别裸机开发"><a href="#STM32-告别裸机开发" class="headerlink" title="STM32 告别裸机开发"></a>STM32 告别裸机开发</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>回想刚接触的单片就是 stc89c51单片机，由于后面的学习，发现51单片机的硬件太少，无法满足需求，所以就接触了STM32单片机，不管是51单片机还是STM32单片机，一开始的学习和使用都是裸机开发，也就是跑的前后台系统</p><p><strong>什么是前后台系统</strong></p><blockquote><p>前后台系统是由一个死循环和若干个中断服务程序组成，应用程序是一个无限循环，循环中调用api函数来实现相应的功能，这个大循环就叫做后台系统，中断服务程序用于处理系统的异步事件，也就叫做前台系统，前台是中断级，而后台是任务级</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200325224235712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样的前后台系统是有弊端的，我给大家举个例子来理解一下，比如一个发射出去的导弹，一个任务程序在进行一半的时候，发生中断需要调整飞行状态，那么该中断程序会在该任务执行下来后进入中断程序，这显然无法做到实时性，就在这及短的时间可以就会飞其它地方去</p><p>所以为了解决这个问题，我们是得了解一下实时操作系统，实时操作系统很多比如 RT-Thread,ucos,VxWorks 等，今天给大家介绍的是freertos 应为这个是开源免费的，而且用的面很广所以推荐给大家<br><img src="https://img-blog.csdnimg.cn/20200325225543933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-STM32CubeMx创建工程"><a href="#二-STM32CubeMx创建工程" class="headerlink" title="二.STM32CubeMx创建工程"></a>二.STM32CubeMx创建工程</h2><h3 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h3><p>当然这里我们可以选择下载Freertos系统的源码进行相应的系统移植，但是这样有的麻烦，我就给大家简绍一个简单的方法，使用STM32CubeMx 软件来直接生成相关的代码</p><blockquote><p>当然想了解Freertos系统源码的可以去官网下载，注意这个是外国的网站加载会比较慢<br>下载地址：<a href="https://www.freertos.org/">Freertos官网</a></p></blockquote><blockquote><p>关于STM32CubMx的下载<br>下载地址：<a href="https://pan.baidu.com/s/1jrg2DnRwwP2Kc-GOcIg9vQ">提取码为 vlpk</a><br>如果百度云下载慢也可以在此处下载：<a href="https://download.csdn.net/download/weixin_45631738/12271078"> STM32CubMx</a></p></blockquote><h3 id="2-根据自己的开发板创建工程"><a href="#2-根据自己的开发板创建工程" class="headerlink" title="2.根据自己的开发板创建工程"></a>2.根据自己的开发板创建工程</h3><p>创建新项目<br><img src="https://img-blog.csdnimg.cn/20200325233943334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择自己的开发板，收到之后双击下面搜索到的开发板<br><img src="https://img-blog.csdnimg.cn/20200325234224242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200325234334296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-基本的配置"><a href="#3-基本的配置" class="headerlink" title="3.基本的配置"></a>3.基本的配置</h3><p>SYS<br><img src="https://img-blog.csdnimg.cn/20200325234627521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>RCC<br><img src="https://img-blog.csdnimg.cn/2020032523473747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>GPIO 直接在右边芯片处鼠标点击配置<br><img src="https://img-blog.csdnimg.cn/20200325235112922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200325235247528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>配置Freertos系统<br><img src="https://img-blog.csdnimg.cn/20200325235516122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200326000000527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>时钟<br><img src="https://img-blog.csdnimg.cn/2020032600015364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200326000538710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>注意</strong><br>项目的路径，一定要是英文的，否则生成的代码，我们无法正常打开，会报错误</p><p><img src="https://img-blog.csdnimg.cn/20200326000613559.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020032600073286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-代码修改"><a href="#三-代码修改" class="headerlink" title="三.代码修改"></a>三.代码修改</h2><p>在freertos.c 找到新建的任务对于的函数，添加对于的点灯代码就可以了<br><img src="https://img-blog.csdnimg.cn/20200326001443299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-DelayUntil周期延时"><a href="#四-DelayUntil周期延时" class="headerlink" title="四.DelayUntil周期延时"></a>四.DelayUntil周期延时</h2><p>由于Freertos的系统延时 <code>osDelay()</code>不是很准，所以我们说一下使用周期延时<br>首先我来 STM32cubMx打开周期延时的配置<br><img src="https://img-blog.csdnimg.cn/20200327132744956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>代码中这样配置<br><img src="https://img-blog.csdnimg.cn/20200327132948853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>添加下面两句代码就可以了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint32_t</span> PreviousWakeTime = osKernelSysTick();</span><br><span class="line"></span><br><span class="line">osDelayUntil(&amp;PreviousWakeTime,<span class="number">500</span>); <span class="comment">//单位为ms</span></span><br></pre></td></tr></table></figure><h2 id="五-总结"><a href="#五-总结" class="headerlink" title="五.总结"></a>五.总结</h2><p>这里我们只修改了默认的任务，我们也可以添加任务，然后也可以用点灯的程序来测试（注意配置不同的io口来点亮小灯），最后烧写到开发板的时候我们就可以看到效果了<br><img src="https://img-blog.csdnimg.cn/20200326002207742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些年写下的诗篇</title>
      <link href="/2020/03/24/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/5.%E8%AF%97%E8%AF%8D/1.%E9%82%A3%E4%BA%9B%E5%B9%B4%E5%86%99%E4%B8%8B%E7%9A%84%E8%AF%97%E7%AF%87/"/>
      <url>/2020/03/24/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/5.%E8%AF%97%E8%AF%8D/1.%E9%82%A3%E4%BA%9B%E5%B9%B4%E5%86%99%E4%B8%8B%E7%9A%84%E8%AF%97%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>落下情<br>桃花落下各有主,<br>惟有观者苦自知.<br>可怜春风未自取,<br>但留清香梦中思</p><p>.<br>心灵葬花<br>(眼中花、泪中情，心灵葬花、泪中不语)<br>因为缘分<br>我们想聚在同一蓝天下<br>因为梦想<br>你化作美丽的鲜花<br>因为希望<br>我化作纯洁的水滴<br>只希望能够滋润你<br>因为阳光 <br>        你的身边充满了温暖的气息<br>因为温度<br>我无法接近你<br>只好看着你守护你<br>因为爱<br>我盼着清晨的来临<br>      因为我会变成纯洁的露水<br>滋润你<br>我知道你可能需要<br>  因为这样你会更美丽<br>因为记忆<br>  美好的时光将要逝去<br>  时光带走了你的美丽<br>    落下的花瓣以成为葬礼<br>因为爱<br>留下了记忆<br>你还会美丽<br>时光终逝<br>记忆终忘<br>想看你最后一次<br>等到花瓣落尽<br>等到天时地利<br>        等到最后一滴露水化为眼泪<br>待到梦中相遇<br>滋润你更美丽<br>—《倘若上天能够开口，一切的浮云都会平静》</p><p>笑中泪<br>潸然泪下不知苦,<br>恰似苦中更有苦,<br>笑显满脸容,<br>笑中有笑,苦自知</p><p>童真<br>童真无力恰有心,<br> 望天独看夜月魂。<br>                谁知苦恨繁伤艰,<br>                待到梦中成追思。</p><p>   独恋<br>情是心中景<br>泪是眼中花<br>有了景谁去赏花<br>哭过笑过<br>走了累了<br>有谁问起过<br>百花盛开时<br>蝴蝶飞舞<br>独赏<br>花之爱<br>蝴蝶自知<br>最后<br>却是黄昏<br>心中的千言万语<br>化作了相思<br>无人倾诉<br>望着天空<br>燕雀以去<br>黑夜逼近<br>群星闪烁<br>最亮的一颗会是你吗<br>时光蹉跎<br>光阴似箭<br>失去了记忆留下了回忆<br>梦在远方<br>何时能唱起理想之歌<br>用爱的花笔<br>画下逝去的悲剧<br>即使千种风情<br>也敌不过一滴泪水的逝去<br>在繁花盛开之季<br>蝴蝶即飞之时<br>独留清香<br>看着远去的背影<br>独恋<br>—残雪流年累—</p><pre><code> 追梦</code></pre><p>屋子还是这样的屋子<br>窗内窗外<br>唯有玻璃相隔<br>空气之温分为两世<br>窗外化实<br>窗内生虚<br>虚实相生<br>而可观之<br>离去的朋友还在<br>逝去的快乐存在<br>那样的人存在<br>那样的事还在<br>过去还会是现在<br>这与时间隔绝<br>与空间相连<br>只因以心相生<br>自知而起<br>是真是假<br>是虚是实<br>因在思中<br>独留明窗映空房<br>日中所思之<br>夜中必梦也<br>夜中梦之<br>日中将见<br>乃梦之趣也<br>吴之所爱<br>梦之所向<br>可为景也<br>屋子还是这样的屋子<br>人还是这样的人<br>做着那样的事<br>黑夜逼近<br>在望<br>窗不是那样的窗<br>而是自己<br>人生如梦<br>谁领梦中之梦<br>如此<br>以是夜<br>追梦</p><p> </p><pre><code> 泪雨风情</code></pre><p>日子还是这样的日子<br>蓝天在上头<br>大地在下头<br>生活还是如此<br>他在那头<br>我在这头<br>静气恒生<br>忽见<br>天昏地暗<br>狂风暴雨<br>电闪雷鸣<br>袭卷而来<br>超想之见<br>此为憾至<br>随之<br>叫声喊声<br>欣喜声<br>声声入耳<br>以引共鸣<br>时不久<br>雨携冰<br>冰携风<br>风携雨<br>而来<br>此为何之<br>乃为九月<br>所见之称奇也<br>心不安<br>声不平<br>久之<br>一半见明<br>以过<br>安然<br>如此以致梦境<br>叹为观之<br>谁知泪雨风情<br>落下了<br>点点滴滴<br>是花瓣<br>如此之艳<br>却以落之而了之<br>惜为观也<br>泪有心风无情<br>呜呼哀哉<br>—9月12日陈仓高中所见</p><p> </p><p>追月，思<br>月明风清，月圆之日，乃十五夜，如是也，遥望何时出，天阴无情，月有情，此忧愁，清风吹许，凉意在心头，燕雀何飞过，眼上薄雾映处，无情，谁知，中秋月，嫦娥美，独赏风情，那世的绣女，今世缘，何在，思之生，闭眼，寻遍天山无觅处，苦多情，万花飘尽此生情，自是梦中相见处，何时伤感，何时流，赏月之夜，夜无月，情何以堪，桂花香，香何处，今忧在，千古风情，直得留，听雨，只聊在思之，无知处，折断忧愁，入梦…</p><p> </p><p>梦思情<br>情风爱雨催梦醒，<br>无情恰似胜有情，<br>梦醒不敌思之苦。<br>了却心处苦多情，<br>风霜雪月诉自心。<br>长夜慢慢方恨少，<br>落花唯美蝶思情。<br>来日方长梦何多，<br>谁知悔恨忆留年。</p><pre><code>                月下 </code></pre><p>花田月下风弄影，<br>坐看花影少蝶情。<br>思花恋旧赏其后，<br>不知花知知我情。</p><p>   孤思业，往生<br>              千百次默然回首<br>夜里灯火长明<br>叹为睡之室<br>星点灯光亮如昼<br>只勤于业绩<br>唯吾劳于命<br>不知何时眠<br>梦中见思景<br>虞美人将见<br>蝴蝶相思飞<br>忽觉醒<br>灯开书放衣了<br>以夜半<br>人生易有命<br>吾之爱画<br>有长之技<br>需练无时弃远<br>而习武也<br>有所爱之胜也<br>此有学之事<br>然唯晚加以习<br>如练之以久<br>必有所成<br>鸟鸣渐末<br>却以为晨<br>夜里思情梦未了<br>不得不以先忧起<br>身其事以了<br>操其思空处<br>同在黑夜下<br>繁星点点映思心<br>凉气凌人更待时<br>然以了后累不以<br>挣其前后只为时<br>待到五日以尽日<br>思家未了室之空<br>千载万难向车去<br>拥挤不堪何以觉<br>往我何归时<br>黑夜慢慢随风行<br>伊人思之情未了<br>上天有缘<br>赐之座也<br>站之拥挤家路长<br>其之辛苦<br>更待以何人说<br>只唯回家<br>飞花雪夜<br>往车快以行<br>霓彩霞里分区明<br>路出彩霞黑入夜<br>以觉待过时之久<br>今朝有梦梦今朝<br>梦有蝴蝶飞<br>无心速醒美景<br>念其梦必思情<br>伊人何方在<br>岂又未敢言<br>勇于敢言处<br>时而未答也<br>略有多情在<br>飞蛾扑火爱何以<br>自有欢喜别有悲<br>往窗之玻璃<br>更待为何人<br>只映自己黑白影<br>往家以达<br>其温暖不可言乎<br>玩其寻我无多人<br>自有乐趣在<br>流光易去<br>忽逢走之时<br>家有排徊不能出<br>何其所能相违缘<br>桥下溪先走<br>桥上无一人<br>唯吾登车去<br>更叹何时归<br>忆陶源明之快哉<br>往我此生以<br>反反复复待五日<br>未能比他更自在<br>辛苦遭遇在三年<br>三年以过命何在<br>此之辛苦为往生<br>她生业绩位之前<br>必有努力处<br>为我所之赏<br>此为伊人往友情<br>更待于其业绩同<br>往三年无几时<br>唯伊人载物台<br>追其业绩必有成<br>人生命运何待以<br>唯有忧人自来去<br>何以胜此行<br>待到蝶追月<br>更为赞不绝</p><p> <br>    今宵<br>今宵玉女梦思情<br>何处男儿月下鸣<br>明月触窗照我影<br>我待明月几时归<br>知晓落花应忧在<br>泪语伤感此重眠<br>寻寻觅觅梦绣女<br>岂敢未敢开心言</p><p>十五情<br>爆竹声声击长空，<br>灯火放飞梦中情。<br>元宵滚出节日趣，<br>探月思星留佳人。<br>月下身影几多人，<br>欢声笑语批竹声。<br>可惜日后忙于业，<br>更待明年此日时。</p><p>采蝶<br>清风冷月凉如水，<br>落花苦对采凤蝶。<br>坐看水月无意去，<br>采蝶双飞何时归。<br>天遥地远无尽日，<br>生死相许情胜天。<br>我望日后何归去，<br>恰似流水送我情。</p><pre><code>               桃李花开</code></pre><p>桃李不言春风度<br>景上添花生情处<br>花开一夜凋于风<br>惟有观者留其情<br>可惜采蝶无意伴<br>留得蜜蜂传情来<br>此时一过待明年<br>不知留情于何处</p><p>夜雨<br>夜里细雨几点点<br>屋前菜花一片片<br>灯下春风丝缕缕<br>生得情来一连连</p><pre><code>月影</code></pre><p>夜色雪花凋零<br>冷暖不记<br>梦里花开的季节<br>那么美丽<br>留给了四季<br>写进了忆里<br>寒风刺烛<br>风易行烛易动<br>月色通室<br>月生清室生明<br>万物皆静生<br>窗下思一人<br>满地落花无情物<br>不堪其回首<br>唯天地之一<br>异月下佳人<br>望月情传许<br>月照醉美人<br>斗转星移<br>久久归去<br>遥想美人<br>未见何解心<br>花开花落无时尽<br>待到蝴蝶追忆时<br>今昔是何年<br>故时月今时圆<br>思美人兮<br>待其可穿越</p><pre><code>          静夜      静夜秋雨长明灯      几时冷落几时情      夜里寻她千百渡      梦雨消生意踌躇                忆童年</code></pre><p>落日的余晖撒向了大地<br>笔直的公路通到了家里<br>踏着小轮追着大轮行驶在风里<br>流着汗水带着快乐被清风送进了心里<br>这也许就是童年<br>可他已经消沉在岁月的长河中<br>无法改变无法重来更无法交换<br>唯有一次次的思念再思念<br>可他终将是过去<br>如今抓的住的唯有现在<br>珍惜把握现在<br>才能让未来少许遗憾</p><p>种子<br>细雨无声初见<br>西风依旧日寒<br>生得土中土<br>愿活人上人<br>外面繁花似景<br>此处焦土一片<br>只得将头埋下<br>深深的埋下<br>为了不让故土的逝去<br>根儿一次次的抓地<br>快马无情的踩过头颅<br>花香片刻冲淡你的眼<br>黑暗依旧陪伴着你<br>不要害怕失败的魅力<br>因为成功活在坚持里<br>醒来吧<br>待西风过后<br>天朗气清<br>丰收之时<br>冲破古土<br>向这光的高度<br>此处唯你之最</p><p>   十五<br>月色不入户<br>寒风抚过窗<br>爆竹声绕儿<br>烟火生凄凉<br>望灯送梦去<br>大业在何方<br>又时十五夜<br>深思唯心堂</p><p>万刀伤他千百次<br>生得其果可自承<br>一曲新词唤风起<br>但愿风筝待梦归</p><pre><code>                  感伤              新燕檐下独守              屋内灯火依旧              床前月光独留              寂寞冷落心头</code></pre><p>归愿<br>凉月如眉<br>星火如醉<br>此夜通明<br>积水月光影<br>帘上月光行<br>屋内坐一人<br>手中笔有神<br>纸上空流意<br>灯光惹人心<br>当年舒豪语<br>定取业绩归<br>历经数十年<br>辛苦不知数<br>可惜力不足<br>不知何归处<br>当年愿筝飞<br>今日风无缘<br>筝落已<br>梦无归<br>灯忽灭<br>黑暗生<br>前方无路寻<br>暗处车何走</p><p>   同语<br>寂寞杀场何冷落<br>千百考生依日寒<br>谁知沙场无硝烟<br>战战拼杀惹心寒<br>数年辛苦归于尽<br>无可奈何愁离别<br>那时景恋此时情<br>伤感无泪何言语<br>父母情动之又生<br>唯有此刻重旗鼓<br>放下的再度重起<br>失去的再度重归<br>心怀壮志遇万山<br>无此硝烟又奈何<br>杀他片甲唯曾留</p>]]></content>
      
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ff跑酷的日子</title>
      <link href="/2020/03/24/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/4.%E8%BF%90%E5%8A%A8/2.FF%E8%B7%91%E9%85%B7%E8%A7%86%E9%A2%91/"/>
      <url>/2020/03/24/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/4.%E8%BF%90%E5%8A%A8/2.FF%E8%B7%91%E9%85%B7%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom:75%;"><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=v0939bez7wm" allowFullScreen="true"style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> 跑酷 </tag>
            
            <tag> 运动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小时候跑酷的我们</title>
      <link href="/2020/03/24/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/4.%E8%BF%90%E5%8A%A8/3.%E5%B0%8F%E6%97%B6%E5%80%99%E8%B7%91%E9%85%B7%E7%9A%84%E6%88%91%E4%BB%AC/"/>
      <url>/2020/03/24/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/4.%E8%BF%90%E5%8A%A8/3.%E5%B0%8F%E6%97%B6%E5%80%99%E8%B7%91%E9%85%B7%E7%9A%84%E6%88%91%E4%BB%AC/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom:75%;"><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=c0716gkn2at" allowFullScreen="true"style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> 跑酷 </tag>
            
            <tag> 运动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智能氛围灯</title>
      <link href="/2020/03/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/2.%E5%B5%8C%E5%85%A5%E5%BC%8F%E9%A1%B9%E7%9B%AE/1.%E6%99%BA%E8%83%BD%E6%B0%9B%E5%9B%B4%E7%81%AF/"/>
      <url>/2020/03/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/2.%E5%B5%8C%E5%85%A5%E5%BC%8F%E9%A1%B9%E7%9B%AE/1.%E6%99%BA%E8%83%BD%E6%B0%9B%E5%9B%B4%E7%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266"><a href="#ESP8266" class="headerlink" title="ESP8266"></a>ESP8266</h1><p>@[TOC]</p><h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p>最近想着这做一个氛围灯，所以就在网上买了一个灯，将里面的电路进行了改装，今天就把我做的分享给大家<br><img src="https://img-blog.csdnimg.cn/35c39fb502b54418ae725314ea3aefb9.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"></p><h1 id="二、代码部分"><a href="#二、代码部分" class="headerlink" title="二、代码部分"></a>二、代码部分</h1><p>注意修改代码的设备秘钥，<code>char auth[] = &quot;8dd8b63&quot;;/****设备秘钥****/</code>，代码支持小爱同学的控制，与智能配网，连接网络在一分钟内没有连接成功，将进入深度睡眠模式。按下复位开关后可进行重启设备再次连接</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//WS2812氛围灯</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_PRINT Serial</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_LIGHT</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Adafruit_NeoPixel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_BUTTON</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_BUTTON_PULLDOWN</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_BUTTON_LONGPRESS_POWERDOWN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//按键</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> key 13</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;8dd8b63&quot;</span>;<span class="comment">/****设备秘钥****/</span></span><br><span class="line"><span class="comment">//RGB灯</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIN 15  <span class="comment">//  DIN PIN (GPIO15, D8)</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUMPIXELS 5  <span class="comment">// Number of you led</span></span></span><br><span class="line">Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);</span><br><span class="line"></span><br><span class="line"><span class="comment">//指示灯</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> led 12</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 新建组件对象</span></span><br><span class="line">BlinkerRGB <span class="title function_">RGB1</span><span class="params">(<span class="string">&quot;RGB&quot;</span>)</span>;</span><br><span class="line">BlinkerButton <span class="title function_">Button1</span><span class="params">(<span class="string">&quot;BTN1&quot;</span>)</span>; <span class="comment">//指示灯</span></span><br><span class="line">BlinkerButton <span class="title function_">Button2</span><span class="params">(<span class="string">&quot;BTN2&quot;</span>)</span>; <span class="comment">//rgb</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> LED_R=<span class="number">0</span>,LED_G=<span class="number">0</span>,LED_B=<span class="number">0</span>,LED_Bright=<span class="number">255</span>;<span class="comment">// RGB和亮度</span></span><br><span class="line"><span class="type">bool</span> WIFI_Status = <span class="literal">true</span>;</span><br><span class="line"><span class="type">int</span> colorT = <span class="number">1000</span>; <span class="comment">//色温</span></span><br><span class="line"><span class="type">char</span> wsMode; <span class="comment">//模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配网函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">smartConfig</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  Serial.println(<span class="string">&quot;\r\nWait for Smartconfig...&quot;</span>);</span><br><span class="line">  WiFi.beginSmartConfig();<span class="comment">//等待手机端发出的用户名与密码</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    digitalWrite(led, HIGH);  </span><br><span class="line">    delay(<span class="number">1000</span>);                      </span><br><span class="line">    digitalWrite(led, LOW);    </span><br><span class="line">    delay(<span class="number">1000</span>);                      </span><br><span class="line">    <span class="keyword">if</span> (WiFi.smartConfigDone())<span class="comment">//退出等待</span></span><br><span class="line">    &#123;</span><br><span class="line">      Serial.println(<span class="string">&quot;SmartConfig Success&quot;</span>);</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;SSID:%s\r\n&quot;</span>, WiFi.SSID().c_str());</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;PSW:%s\r\n&quot;</span>, WiFi.psk().c_str());</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置wifi函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">WIFI_Set</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;\r\n正在连接&quot;</span>);</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(WiFi.status()!=WL_CONNECTED)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(WIFI_Status)</span><br><span class="line">        &#123;</span><br><span class="line">            Serial.print(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">            digitalWrite(led, HIGH);  </span><br><span class="line">            delay(<span class="number">500</span>);                       </span><br><span class="line">            digitalWrite(led, LOW);    </span><br><span class="line">            delay(<span class="number">500</span>);                 </span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span>(count&gt;=<span class="number">5</span>)<span class="comment">//5s后连接失败</span></span><br><span class="line">            &#123;</span><br><span class="line">                WIFI_Status = <span class="literal">false</span>;</span><br><span class="line">                Serial.println(<span class="string">&quot;WiFi连接失败，请用手机进行配网&quot;</span>); </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            smartConfig();  <span class="comment">//微信智能配网</span></span><br><span class="line">        &#125;</span><br><span class="line">     &#125;  </span><br><span class="line">     Serial.println(<span class="string">&quot;连接成功&quot;</span>);  </span><br><span class="line">     Serial.print(<span class="string">&quot;IP:&quot;</span>);</span><br><span class="line">     Serial.println(WiFi.localIP());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//控制rgb灯</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SET_RGB</span><span class="params">(<span class="type">int</span> R,<span class="type">int</span> G,<span class="type">int</span> B,<span class="type">int</span> bright)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">uint16_t</span> i = <span class="number">0</span>; i &lt; NUMPIXELS; i++) <span class="comment">//把灯条变色</span></span><br><span class="line">    &#123;</span><br><span class="line">        pixels.setPixelColor(i,R,G,B);</span><br><span class="line">    &#125;</span><br><span class="line">    pixels.setBrightness(bright);<span class="comment">//亮度</span></span><br><span class="line">    pixels.show();    <span class="comment">//送出显示</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//指示灯按键回调函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> </span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">    <span class="keyword">if</span> (state==<span class="string">&quot;on&quot;</span>) &#123;</span><br><span class="line">      </span><br><span class="line">        digitalWrite(led, LOW);</span><br><span class="line">        <span class="comment">// 反馈开关状态</span></span><br><span class="line">        Button1.print(<span class="string">&quot;on&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(state==<span class="string">&quot;off&quot;</span>)&#123;</span><br><span class="line"></span><br><span class="line">        digitalWrite(led, HIGH);</span><br><span class="line">        <span class="comment">// 反馈开关状态</span></span><br><span class="line">        Button1.print(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//RGB按键回调函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">button2_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> </span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">    <span class="keyword">if</span> (state==<span class="string">&quot;on&quot;</span>) &#123;</span><br><span class="line">    </span><br><span class="line">      SET_RGB(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line">      SET_RGB(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line">      <span class="comment">// 反馈开关状态</span></span><br><span class="line">      Button2.print(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(state==<span class="string">&quot;off&quot;</span>)&#123;</span><br><span class="line">    </span><br><span class="line">      SET_RGB(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">      <span class="comment">// 反馈开关状态</span></span><br><span class="line">      Button2.print(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//小爱电源类回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) </span><br><span class="line">  &#123;</span><br><span class="line">        </span><br><span class="line">        SET_RGB(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,LED_Bright);        </span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) </span><br><span class="line">  &#123;  </span><br><span class="line">        SET_RGB(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//APP RGB颜色设置回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">rgb1_callback</span><span class="params">(<span class="type">uint8_t</span> r_value, <span class="type">uint8_t</span> g_value, </span></span><br><span class="line"><span class="params">                    <span class="type">uint8_t</span> b_value, <span class="type">uint8_t</span> bright_value)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));</span></span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;R value: &quot;</span>, r_value);</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;G value: &quot;</span>, g_value);</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;B value: &quot;</span>, b_value);</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;Rrightness value: &quot;</span>, bright_value);</span><br><span class="line">    LED_Bright = bright_value;</span><br><span class="line">    SET_RGB(r_value,g_value,b_value,LED_Bright);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//小爱设置颜色回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotColor</span><span class="params">(<span class="type">int32_t</span> color)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set color: &quot;</span>, color);</span><br><span class="line">    <span class="type">int</span> colorR,colorG,colorB;</span><br><span class="line">    colorR = color &gt;&gt; <span class="number">16</span> &amp; <span class="number">0xFF</span>;</span><br><span class="line">    colorG = color &gt;&gt;  <span class="number">8</span> &amp; <span class="number">0xFF</span>;</span><br><span class="line">    colorB = color       &amp; <span class="number">0xFF</span>;</span><br><span class="line"></span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;colorR: &quot;</span>, colorR, <span class="string">&quot;, colorG: &quot;</span>, colorG, <span class="string">&quot;, colorB: &quot;</span>, colorB);</span><br><span class="line">    SET_RGB(colorR,colorG,colorB,LED_Bright);</span><br><span class="line"></span><br><span class="line">    BlinkerMIOT.color(color);<span class="comment">//反馈小爱控制状态</span></span><br><span class="line">    BlinkerMIOT.print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小爱调亮度回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotBright</span><span class="params">(<span class="type">const</span> String &amp; bright)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set brightness: &quot;</span>, bright);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> colorW = bright.toInt();</span><br><span class="line"></span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;now set brightness: &quot;</span>, colorW);</span><br><span class="line">    LED_Bright = colorW;</span><br><span class="line">    SET_RGB(LED_R,LED_G,LED_B,LED_Bright);</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;亮度调节中...%d&quot;</span>,colorW);</span><br><span class="line">    </span><br><span class="line">    BlinkerMIOT.brightness(colorW);<span class="comment">//反馈小爱控制状态</span></span><br><span class="line">    BlinkerMIOT.print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//色温控制 色温范围为1000-10000</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotColoTemp</span><span class="params">(<span class="type">int32_t</span> colorTemp)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set colorTemperature: &quot;</span>, colorTemp);</span><br><span class="line"></span><br><span class="line">    colorT = colorTemp;</span><br><span class="line"></span><br><span class="line">    BlinkerMIOT.colorTemp(colorTemp);</span><br><span class="line">    BlinkerMIOT.print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//小爱同学模式控制</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotMode</span><span class="params">(<span class="type">uint8_t</span> mode)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set mode: &quot;</span>, mode);</span><br><span class="line">    <span class="comment">//日光</span></span><br><span class="line">    <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_DAY) &#123;    </span><br><span class="line">        SET_RGB(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,LED_Bright);  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//月光</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_NIGHT) &#123;</span><br><span class="line">        SET_RGB(<span class="number">255</span>,<span class="number">181</span>,<span class="number">0</span>,LED_Bright);  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//彩光</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_COLOR) &#123;</span><br><span class="line">       </span><br><span class="line">        pixels.setPixelColor(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">        pixels.setPixelColor(<span class="number">1</span>,<span class="number">0</span>,<span class="number">255</span>,<span class="number">184</span>);</span><br><span class="line">        pixels.setPixelColor(<span class="number">2</span>,<span class="number">255</span>,<span class="number">231</span>,<span class="number">192</span>);</span><br><span class="line">        pixels.setPixelColor(<span class="number">3</span>,<span class="number">0</span>,<span class="number">59</span>,<span class="number">255</span>);</span><br><span class="line">        pixels.setPixelColor(<span class="number">4</span>,<span class="number">209</span>,<span class="number">22</span>,<span class="number">255</span>);</span><br><span class="line">        pixels.setBrightness(LED_Bright);<span class="comment">//亮度</span></span><br><span class="line">        pixels.show();    <span class="comment">//送出显示</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//温馨</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_WARMTH) &#123;</span><br><span class="line">        SET_RGB(<span class="number">255</span>,<span class="number">38</span>,<span class="number">0</span>,LED_Bright);   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//电视模式</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_TV) &#123;</span><br><span class="line">        <span class="comment">// Your mode function</span></span><br><span class="line">        SET_RGB(<span class="number">255</span>,<span class="number">0</span>,<span class="number">154</span>,LED_Bright); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//阅读模式</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_READING) &#123;</span><br><span class="line">        <span class="comment">// Your mode function</span></span><br><span class="line">        SET_RGB(<span class="number">0</span>,<span class="number">255</span>,<span class="number">164</span>,LED_Bright); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//电脑模式</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == BLINKER_CMD_MIOT_COMPUTER) &#123;</span><br><span class="line">        <span class="comment">// Your mode function</span></span><br><span class="line">        SET_RGB(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>,LED_Bright); </span><br><span class="line">    &#125;</span><br><span class="line">    wsMode = mode;</span><br><span class="line">    BlinkerMIOT.mode(mode);</span><br><span class="line">    BlinkerMIOT.print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化串口</span></span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    </span><br><span class="line">    pixels.begin();<span class="comment">//WS2812初始化</span></span><br><span class="line">    pixels.show();</span><br><span class="line">    pinMode(led, OUTPUT);</span><br><span class="line">    pinMode(key, INPUT);</span><br><span class="line">    <span class="meta">#<span class="keyword">if</span> defined(BLINKER_PRINT)</span></span><br><span class="line">        BLINKER_DEBUG.stream(BLINKER_PRINT);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    WIFI_Set();</span><br><span class="line"></span><br><span class="line">    Button1.print(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">    Button2.print(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//初始化blinker</span></span><br><span class="line">    Blinker.begin(auth, WiFi.SSID().c_str(), WiFi.psk().c_str());</span><br><span class="line">    Button1.attach(button1_callback);<span class="comment">//Button1这个组件被触发就执行这个回调 指示灯</span></span><br><span class="line">    Button2.attach(button2_callback);<span class="comment">//Button2这个组件被触发就执行这个回调 rgb</span></span><br><span class="line">    RGB1.attach(rgb1_callback);<span class="comment">//注册调节颜色的回调函数</span></span><br><span class="line">  BlinkerMIOT.attachPowerState(miotPowerState);<span class="comment">//小爱同学电源控制类</span></span><br><span class="line">    BlinkerMIOT.attachColor(miotColor);<span class="comment">//小爱调节颜色</span></span><br><span class="line">    BlinkerMIOT.attachMode(miotMode);<span class="comment">//小爱同学模式控制</span></span><br><span class="line">    BlinkerMIOT.attachColorTemperature(miotColoTemp);<span class="comment">//小爱同学色温控制</span></span><br><span class="line">    BlinkerMIOT.attachBrightness(miotBright);<span class="comment">//小爱调节RGB亮度</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、硬件电路"><a href="#三、硬件电路" class="headerlink" title="三、硬件电路"></a>三、硬件电路</h1><p>硬件部分如下所示</p><ul><li>无线充电的发出板与接收模块</li><li>ws2812 rgb灯5个</li><li>18650的锂电池</li><li>电池充电模块</li><li>3.7v转5v模块</li><li>ESP8266 12F模块</li><li>按键和指示灯<br><img src="https://img-blog.csdnimg.cn/f0d109b074a543e5a52d40866ff590dc.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="请添加图片描述"></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小爱同学+ESP8266+blinker数据监测</title>
      <link href="/2020/03/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/6.%E5%B0%8F%E7%88%B1%E5%90%8C%E5%AD%A6+ESP8266+blinker%E7%9B%91%E6%B5%8B%E6%95%B0%E6%8D%AE/"/>
      <url>/2020/03/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/6.%E5%B0%8F%E7%88%B1%E5%90%8C%E5%AD%A6+ESP8266+blinker%E7%9B%91%E6%B5%8B%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="blinker数据反馈"><a href="#blinker数据反馈" class="headerlink" title="blinker数据反馈"></a>blinker数据反馈</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>这一节我们主要说一下通过小爱同学来控制esp8266开发板采集温湿度数据，然后语言播报</p><p>这里我们用到的模块还是DHT11温湿度传感器，没有配置DHT库的朋友，可以看前面的教程，这里就不多说了</p><h2 id="二-app配置"><a href="#二-app配置" class="headerlink" title="二.app配置"></a>二.app配置</h2><p>这次我们的设备是用于读取数据的，所以设备名称就不能是灯了，我们就起名为传感器<img src="https://img-blog.csdnimg.cn/20200323155156119.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-小爱同学接入"><a href="#三-小爱同学接入" class="headerlink" title="三.小爱同学接入"></a>三.小爱同学接入</h2><h3 id="1-代码部分"><a href="#1-代码部分" class="headerlink" title="1.代码部分"></a>1.代码部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_PRINT Serial  <span class="comment">//用于打开串口</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_SENSOR   <span class="comment">//定义为语音控制传感器设备 </span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DHT.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;774c60aac10f&quot;</span>; <span class="comment">//上一步中在app中获取到的Secret Key（新建设备的秘钥）</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;ZFQ&quot;</span>; <span class="comment">//你的WiFi热点名称</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;123456789&quot;</span>; <span class="comment">//你的WiFi密码</span></span><br><span class="line"> </span><br><span class="line">BlinkerNumber <span class="title function_">HUMI</span><span class="params">(<span class="string">&quot;humi&quot;</span>)</span>;</span><br><span class="line">BlinkerNumber <span class="title function_">TEMP</span><span class="params">(<span class="string">&quot;temp&quot;</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHTPIN 2 <span class="comment">//</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHTTYPE DHT11   <span class="comment">// DHT 11</span></span></span><br><span class="line"><span class="comment">//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321</span></span><br><span class="line"><span class="comment">//#define DHTTYPE DHT21   // DHT 21 (AM2301)</span></span><br><span class="line"> </span><br><span class="line">DHT <span class="title function_">dht</span><span class="params">(DHTPIN, DHTTYPE)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int32_t</span> humi_read = <span class="number">0</span>;<span class="comment">//湿度 小爱同学只能查整数的数据 </span></span><br><span class="line"><span class="type">float</span> temp_read = <span class="number">0</span>; <span class="comment">//温度</span></span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">heartbeat</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//反馈湿度数据</span></span><br><span class="line">    HUMI.print(humi_read);</span><br><span class="line">    <span class="comment">//设置ui组件图标和颜色</span></span><br><span class="line">    HUMI.icon(<span class="string">&quot;fas fa-tint&quot;</span>);</span><br><span class="line">    HUMI.color(<span class="string">&quot;#0099FF &quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//反馈温度数据</span></span><br><span class="line">    TEMP.print(temp_read);</span><br><span class="line">    TEMP.icon(<span class="string">&quot;fas fa-thermometer-empty&quot;</span>);</span><br><span class="line">    TEMP.color(<span class="string">&quot;#FF3300&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">miotQuery</span><span class="params">(<span class="type">int32_t</span> queryCode)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;MIOT Query codes: &quot;</span>, queryCode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (queryCode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//同时查询传感器数据</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_ALL_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query All&quot;</span>);</span><br><span class="line">            BlinkerMIOT.temp(temp_read);</span><br><span class="line">            BlinkerMIOT.humi(humi_read);</span><br><span class="line">            BlinkerMIOT.pm25(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.co2(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//查询pm2.5</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_PM25_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query PM25&quot;</span>);</span><br><span class="line">            BlinkerMIOT.pm25(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//查询湿度</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_HUMI_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query HUMI&quot;</span>);</span><br><span class="line">            BlinkerMIOT.humi(humi_read);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//查询温度</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_TEMP_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query TEMP&quot;</span>);</span><br><span class="line">            BlinkerMIOT.temp(temp_read);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">//查询CO2</span></span><br><span class="line">        <span class="keyword">case</span> BLINKER_CMD_QUERY_TIME_NUMBER :</span><br><span class="line">            BLINKER_LOG(<span class="string">&quot;MIOT Query co2&quot;</span>);</span><br><span class="line">            BlinkerMIOT.co2(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span> :</span><br><span class="line">            BlinkerMIOT.temp(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.humi(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.pm25(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.co2(<span class="number">20</span>);</span><br><span class="line">            BlinkerMIOT.print();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    BLINKER_DEBUG.stream(Serial);</span><br><span class="line">    BLINKER_DEBUG.debugAll();</span><br><span class="line">    </span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line">    Blinker.attachHeartbeat(heartbeat);</span><br><span class="line">    BlinkerMIOT.attachQuery(miotQuery); <span class="comment">//小爱同学 数据反馈</span></span><br><span class="line">    dht.begin();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line"> </span><br><span class="line">    <span class="type">float</span> h = dht.readHumidity();</span><br><span class="line">    <span class="type">float</span> t = dht.readTemperature();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (isnan(h) || isnan(t))</span><br><span class="line">    &#123;</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Failed to read from DHT sensor!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Humidity: &quot;</span>, h, <span class="string">&quot; %&quot;</span>);</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Temperature: &quot;</span>, t, <span class="string">&quot; *C&quot;</span>);</span><br><span class="line">        humi_read = h;</span><br><span class="line">        temp_read = t;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    Blinker.delay(<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-代码说明"><a href="#2-代码说明" class="headerlink" title="2.代码说明"></a>2.代码说明</h3><ol><li><p>我们这边是小米的小爱同学来控制传感器</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_SENSOR   <span class="comment">//定义为语音控制传感器设备 </span></span></span><br></pre></td></tr></table></figure></li><li><p>设置回调函数</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BlinkerMIOT.attachQuery(miotQuery); <span class="comment">//小爱同学 数据反馈</span></span><br></pre></td></tr></table></figure></li><li><p>语言控制实现函数</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">miotQuery</span><span class="params">(<span class="type">int32_t</span> queryCode)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>特别注意，小爱同学测试湿度时我们定义的 湿度不能是浮点型(小数)，负责语音控制时就会出错</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int32_t</span> humi_read = <span class="number">0</span>;</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-语音控制"><a href="#3-语音控制" class="headerlink" title="3. 语音控制"></a>3. 语音控制</h3><p>如何通过小爱同学语音来控制，这里需要注意一下</p><blockquote><p>我们可以参考一下：<a href="https://doc.blinker.app/?file=home-%E9%A6%96%E9%A1%B5">blinker开发文档</a></p></blockquote><p><strong>小爱支持的语言指令</strong></p><ul><li>灯<br>打开&#x2F;关闭{门口}的{灯}<br>把{卧室}的{灯}调为{红色}<br>颜色范围为0-16777215(0xFFFFFF)<br>把{卧室}的{灯}的{亮度调高一点}<br>亮度范围为1-100<br>把{门口}的{灯}的{色温}调到{1400}<br>色温范围为1000-10000<br>把{卧室}的{灯}调为{月光模式}<br>查询{卧室}的{灯}的状态</li><li>插座<br>打开&#x2F;关闭{厨房}的{插座}<br>{客厅}的{插座}是否打开</li><li>传感器<br>{设备名}室内{温度}&#x2F;{湿度}&#x2F;{PM2.5}&#x2F;{空气质量}&#x2F;{二氧化碳含量}</li></ul><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>这篇说的不是很详细，因为我们前面已经说了arduino环境的搭建已经库的导入，esp8266模块的添加，以及app端的配置，程序的烧写等等，所以在这里就不在浪费大家时间了，具体代码有注释可以查看</p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小爱同学+ESP8266+blinker点灯</title>
      <link href="/2020/03/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/5.%E5%B0%8F%E7%88%B1%E5%90%8C%E5%AD%A6+ESP8266+blinker%E7%82%B9%E7%81%AF/"/>
      <url>/2020/03/23/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/5.%E5%B0%8F%E7%88%B1%E5%90%8C%E5%AD%A6+ESP8266+blinker%E7%82%B9%E7%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="小爱同学控制"><a href="#小爱同学控制" class="headerlink" title="小爱同学控制"></a>小爱同学控制</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>前面的教程都说了用blinker app来控制开发板上面的灯，以及温湿度数据的反馈，但都是通过通过按键来控制的，今天我们来用语音控制，来操作我们开发板上面的小灯</p><p>其实我们可以，直接用blinker app里面的语音控制，直接将我们的语音指令录制到相应的组件中，当我们发起语音指令时，就可以对该组件的控制，来控制我们的开发板，但是我们得进入app里面才可以控制，所以我们就学习一下通过小爱同学来控制</p><p><img src="https://img-blog.csdnimg.cn/20200323094907905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="二-app端添加设备"><a href="#二-app端添加设备" class="headerlink" title="二. app端添加设备"></a>二. app端添加设备</h2><p>首先我们打开我们的blinker app，来添加一个设备<br>没有app的朋友点击下方下载</p><blockquote><p>下载地址：<a href="https://www.lanzous.com/ia8v62h">blinker app</a><br>其他版本也可通过  <a href="https://diandeng.tech/home">blinker官网下载</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200314173855921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200323103936127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>这里比较简单，我就不多说了，不会的朋友可以先看一下上一节的教程 <a href="https://blog.csdn.net/weixin_45631738/article/details/104861693">esp8266+blinker 点灯</a></p><h2 id="三-小爱同学接入"><a href="#三-小爱同学接入" class="headerlink" title="三. 小爱同学接入"></a>三. 小爱同学接入</h2><h3 id="1-简绍"><a href="#1-简绍" class="headerlink" title="1.简绍"></a>1.简绍</h3><p>blinker支持多种智能音响控制，如天猫精灵、百度小度、小米小爱、京东叮咚等。<br>Blinker支持多种语音助手控制，如天猫精灵、百度小度等</p><blockquote><p>通常语音助手都是对特定的设备类型进行支持，确定设备类型后，才能响应对应的语音指令。使用blinker方案开发设备，也需要先设定设备类型，支持的设备类型如下：</p></blockquote><p>对于<strong>天猫精灵</strong>,blinker DIY支持将设备模拟成三种类型的智能家居：插座、灯、传感器。</p><table><thead><tr><th align="left">设备类型</th><th align="center">支持功能</th><th align="center">blinker宏</th></tr></thead><tbody><tr><td align="left">传感器</td><td align="center">可以查询传感器获取到的数据</td><td align="center">BLINKER_ALIGENIE_SENSOR</td></tr><tr><td align="left">灯</td><td align="center">开关灯、设置颜色、亮度、色温、模式</td><td align="center">BLINKER_ALIGENIE_LIGHT</td></tr><tr><td align="left">插座</td><td align="center">开关设备</td><td align="center">BLINKER_ALIGENIE_OUTLET</td></tr></tbody></table><p>对于<strong>小爱同学</strong>,blinker DIY支持将设备模拟成三种类型的智能家居：插座、灯、传感器。</p><table><thead><tr><th align="left">设备类型</th><th align="center">支持功能</th><th align="center">blinker宏</th></tr></thead><tbody><tr><td align="left">传感器</td><td align="center">可以查询传感器获取到的数据</td><td align="center">BLINKER_MIOT_SENSOR</td></tr><tr><td align="left">灯</td><td align="center">开关灯、设置颜色、亮度、色温、模式</td><td align="center">BLINKER_MIOT_LIGHT</td></tr><tr><td align="left">插座</td><td align="center">开关设备</td><td align="center">BLINKER_MIOT_OUTLET</td></tr></tbody></table><p>此教程以小爱同学控制为例，将设备设定为灯</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_ALIGENIE_SENSOR</span></span><br></pre></td></tr></table></figure><p>定义好类型后就可以对 attachPowerState 进行操作了</p><h3 id="2-代码部分"><a href="#2-代码部分" class="headerlink" title="2.代码部分"></a>2.代码部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_PRINT Serial  <span class="comment">//用于打开串口</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI      <span class="comment">//用于指定设备接入方式 wifi 接入</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_LIGHT   <span class="comment">//定义为语音控制灯设备</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;774c60aac10f&quot;</span>; <span class="comment">//上一步中在app中获取到的Secret Key（新建设备的秘钥）</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;ZFQ&quot;</span>; <span class="comment">//你的WiFi热点名称</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;123456789&quot;</span>; <span class="comment">//你的WiFi密码</span></span><br><span class="line"></span><br><span class="line">BlinkerButton <span class="title function_">Button1</span><span class="params">(<span class="string">&quot;btn-abc&quot;</span>)</span>; <span class="comment">//btn-abc 名称要和app新建组件一致</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// app 端按下按键即会执行该函数 回调函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> &#123;</span><br><span class="line">     </span><br><span class="line">     BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">     <span class="keyword">if</span> (state==<span class="string">&quot;on&quot;</span>) &#123;</span><br><span class="line"></span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">        <span class="comment">// 反馈开关状态</span></span><br><span class="line">        Button1.print(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(state==<span class="string">&quot;off&quot;</span>)&#123;</span><br><span class="line"></span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        <span class="comment">// 反馈开关状态</span></span><br><span class="line">        Button1.print(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小爱电源类回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">miotPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state == BLINKER_CMD_ON) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);       </span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化串口，并开启调试信息</span></span><br><span class="line"></span><br><span class="line">    Serial.begin(<span class="number">115200</span>);    </span><br><span class="line">    BLINKER_DEBUG.stream(Serial); <span class="comment">//串口打印调试信息</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化有LED的IO</span></span><br><span class="line"></span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);  <span class="comment">//LED_BUILTIN 宏就是开发板指示灯的io口</span></span><br><span class="line"></span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化blinker</span></span><br><span class="line"></span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line"></span><br><span class="line">    Button1.attach(button1_callback); <span class="comment">//绑定按键执行回调函数</span></span><br><span class="line">  </span><br><span class="line">    BlinkerMIOT.attachPowerState(miotPowerState); <span class="comment">//小爱电源控制</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    Blinker.run();  <span class="comment">/*每次运行都会将设备收到的数据进行一次解析。</span></span><br><span class="line"><span class="comment">                    在使用WiFi接入时，该语句也负责保持网络连接*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-代码讲解"><a href="#3-代码讲解" class="headerlink" title="3.代码讲解"></a>3.代码讲解</h3><p>添加小爱同学，从代码上来就添加了三个部分</p><ol><li><p>定义为语音控制灯设备</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_MIOT_LIGHT   <span class="comment">//定义为语音控制灯设备</span></span></span><br></pre></td></tr></table></figure></li><li><p>小爱电源控制</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BlinkerMIOT.attachPowerState(miotPowerState); <span class="comment">//小爱电源控制</span></span><br></pre></td></tr></table></figure></li><li><p>小爱电源类回调函数实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">miotPowerState</span><span class="params">(<span class="type">const</span> String &amp; state)</span></span><br><span class="line">&#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;need set power state: &quot;</span>, state);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (state ==BLINKER_CMD_ON) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);       </span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (state == BLINKER_CMD_OFF) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        BlinkerMIOT.powerState(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">        BlinkerMIOT.print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意修改代码的 网络配置处和 key 设备秘钥</p></blockquote></li></ol><h3 id="4-米家的配置"><a href="#4-米家的配置" class="headerlink" title="4.米家的配置"></a>4.米家的配置</h3><p>首先我们打开米家，按照图片提示添加blinker设备，在绑定blinker的时候需要输入账号和密码，绑定成功我们点击一下同步设备，就可以看到我们的设备了</p><blockquote><p>注意：只有添加了小爱同学相关代码的设备才能在此处显示出来</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200323105236374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>等我们一切完成就绪就可以通过小爱同学来控制我们的设备了，这里只是简单的打开开发板上面的小灯，下一节我们来说用小爱同学控制测试温湿度信息</p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266+blinker测温湿度</title>
      <link href="/2020/03/22/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/4.ESP8266+blinker%E6%B5%8B%E6%B8%A9%E6%B9%BF%E5%BA%A6/"/>
      <url>/2020/03/22/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/4.ESP8266+blinker%E6%B5%8B%E6%B8%A9%E6%B9%BF%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="blinker数据反馈"><a href="#blinker数据反馈" class="headerlink" title="blinker数据反馈"></a>blinker数据反馈</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>我们在做智能家居项目的时候，数据的反馈是必不可少的，比如测温度湿度等等，将得到的数据通过服务器发送到我们的app端，实时的观测数据，今天简&#x3D;简绍的是blinker 的心跳包来反馈数据</p><h2 id="二-心跳包"><a href="#二-心跳包" class="headerlink" title="二.心跳包"></a>二.心跳包</h2><p>我们先来了解一下什么是心跳包</p><blockquote><p>在blinker app上，点击设备图标进入设备控制页面时，app会向设备发送一个状态查询指令（心跳查询）<br>此后，WiFi设备，每59秒会返回一次心跳包；Ble(蓝牙)设备，每29秒返回一次心跳包</p></blockquote><p>状态查询指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;get&quot;</span>:<span class="string">&quot;state&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>默认状态下，wifi接入设备会返回</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;state&quot;</span>:<span class="string">&quot;online&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>BLE（蓝牙）接入设备会返回</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;state&quot;</span>:<span class="string">&quot;connected&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>blinker提供了改写心跳包内容的方法，使用此方法可将一些数据放置在心跳包中返回，该方法可用于数据同步、状态查询。</p><blockquote><p><strong>但是注意</strong><br>设备端不主动发送数据（我们在app上不刷新的话我们检测的数据是不会变得），一切反馈都是由客户端（APP）发起。这样设计可以节约服务器资源，避免浪费。</p></blockquote><h2 id="三-心跳包初始化ui"><a href="#三-心跳包初始化ui" class="headerlink" title="三.心跳包初始化ui"></a>三.心跳包初始化ui</h2><h3 id="1-代码部分"><a href="#1-代码部分" class="headerlink" title="1.代码部分"></a>1.代码部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;Your Device Secret Key&quot;</span>;</span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;Your WiFi network SSID or name&quot;</span>;</span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;Your WiFi network WPA password or WEP key&quot;</span>;</span><br><span class="line"><span class="comment">// 新建组件对象</span></span><br><span class="line">BlinkerButton <span class="title function_">Button1</span><span class="params">(<span class="string">&quot;btn-abc&quot;</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 按下按键即会执行该函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 心跳包函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">heartbeat</span><span class="params">()</span> &#123;</span><br><span class="line">    Button1.icon(<span class="string">&quot;fas fa-lightbulb&quot;</span>);</span><br><span class="line">    Button1.color(<span class="string">&quot;#fddb00&quot;</span>);</span><br><span class="line">    Button1.text(<span class="string">&quot;关灯&quot;</span>,<span class="string">&quot;打开啦&quot;</span>);</span><br><span class="line">    Button1.print(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化串口</span></span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    <span class="comment">// 初始化有LED的IO</span></span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">    <span class="comment">// 初始化blinker</span></span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line">    Button1.attach(button1_callback);</span><br><span class="line">    <span class="comment">//注册一个心跳包</span></span><br><span class="line">    Blinker.attachHeartbeat(heartbeat);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码的目的就是在进入软件控制界面后初始化ui界面</p><p>下面代码是对Button1 组件的初始化，当用户调用Button1.print(“on”);这些设置才会一并发送，APP收到这些数据，即会改变组件上显示的内容</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Button1.icon(<span class="string">&quot;fas fa-lightbulb&quot;</span>);</span><br><span class="line">Button1.color(<span class="string">&quot;#fddb00&quot;</span>);</span><br><span class="line">Button1.text(<span class="string">&quot;关灯&quot;</span>,<span class="string">&quot;打开啦&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="2-ui库的使用"><a href="#2-ui库的使用" class="headerlink" title="2.ui库的使用"></a>2.ui库的使用</h3><p>我们可以在下面 图标库中找到我们想要的图标</p><blockquote><p>点击此处：<a href="https://fontawesome.dashgame.com/">图标库</a></p></blockquote><p>我们只需要根据 图标的名字来更换 下面代码中 <code>fa-</code> 后面的内容就可以了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Button1.icon(<span class="string">&quot;fas fa-lightbulb&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="四-温湿度测试"><a href="#四-温湿度测试" class="headerlink" title="四.温湿度测试"></a>四.温湿度测试</h2><p> 在这里我就用DHT11模块来测量温湿度数据，然后再通过心跳包的形式发送到app上面</p><h3 id="1-DHT-库的安装"><a href="#1-DHT-库的安装" class="headerlink" title="1.DHT 库的安装"></a>1.DHT 库的安装</h3><p> 首先我们下载DHT库，然后将这个库文件解压到我们arduino 软件安装目录下的 libraries文件夹下</p><blockquote><p>下载地址：<a href="https://www.lanzous.com/iaj4i5g">DHT11库文件</a></p></blockquote><p> <img src="https://img-blog.csdnimg.cn/20200322192443273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-app端ui组件设置"><a href="#2-app端ui组件设置" class="headerlink" title="2.app端ui组件设置"></a>2.app端ui组件设置</h3><p> 首先我们添加两个数据组件，将数据键值分别设为humi（温度）和temp（湿度） 如图</p><blockquote><p>此图借用的是Arduino中文社区的图片<br><img src="https://img-blog.csdnimg.cn/20200322194648552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><p> 我们可以再添加一个调试组件，用以观察APP收到的数据，方便调试程序。</p><h3 id="3-代码部分"><a href="#3-代码部分" class="headerlink" title="3.代码部分"></a>3.代码部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DHT.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;774c60aac10f&quot;</span>; <span class="comment">//上一步中在app中获取到的Secret Key（新建设备的秘钥）</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;ZFQ&quot;</span>; <span class="comment">//你的WiFi热点名称</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;123456789&quot;</span>; <span class="comment">//你的WiFi密码</span></span><br><span class="line"> </span><br><span class="line">BlinkerNumber <span class="title function_">HUMI</span><span class="params">(<span class="string">&quot;humi&quot;</span>)</span>;</span><br><span class="line">BlinkerNumber <span class="title function_">TEMP</span><span class="params">(<span class="string">&quot;temp&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHTPIN 2  <span class="comment">//接的是GPIO2端口</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DHTTYPE DHT11   <span class="comment">// DHT 11</span></span></span><br><span class="line"><span class="comment">//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321</span></span><br><span class="line"><span class="comment">//#define DHTTYPE DHT21   // DHT 21 (AM2301)</span></span><br><span class="line"> </span><br><span class="line">DHT <span class="title function_">dht</span><span class="params">(DHTPIN, DHTTYPE)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">float</span> humi_read = <span class="number">0</span>, temp_read = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">heartbeat</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//反馈温度数据</span></span><br><span class="line">    HUMI.print(humi_read);</span><br><span class="line">    <span class="comment">//设置ui组件图标和颜色</span></span><br><span class="line">    HUMI.icon(<span class="string">&quot;fas fa-thermometer-2&quot;</span>);</span><br><span class="line">    HUMI.color(<span class="string">&quot;#fddb10&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//反馈湿度数据</span></span><br><span class="line">    TEMP.print(temp_read);</span><br><span class="line">    TEMP.icon(<span class="string">&quot;fas fa-heart&quot;</span>);</span><br><span class="line">    HUMI.color(<span class="string">&quot;#fddb01&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Serial.begin(<span class="number">115200</span>);</span><br><span class="line">    BLINKER_DEBUG.stream(Serial);</span><br><span class="line">    BLINKER_DEBUG.debugAll();</span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line"> </span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line">    Blinker.attachHeartbeat(heartbeat);</span><br><span class="line">    dht.begin();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line"> </span><br><span class="line">    <span class="type">float</span> h = dht.readHumidity();</span><br><span class="line">    <span class="type">float</span> t = dht.readTemperature();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (isnan(h) || isnan(t))</span><br><span class="line">    &#123;</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Failed to read from DHT sensor!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Humidity: &quot;</span>, h, <span class="string">&quot; %&quot;</span>);</span><br><span class="line">        BLINKER_LOG(<span class="string">&quot;Temperature: &quot;</span>, t, <span class="string">&quot; *C&quot;</span>);</span><br><span class="line">        humi_read = h;</span><br><span class="line">        temp_read = t;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    Blinker.delay(<span class="number">2000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ol><li><p>配置自己的模块联网代码，不会的可以看一下 <a href="https://blog.csdn.net/weixin_45631738/article/details/104861693">前一个教程 </a></p></li><li><p>注意配置<code>#define DHTPIN D7</code> 模块的io口，我们可以根据自己的连接来定义这个宏，不同的开发板书写上可能会不同，大家注意一下</p></li><li><p>我们根据我们所所选择的模块，来在代码此处修改</p> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> DHTTYPE DHT11   <span class="comment">// DHT 11</span></span></span><br><span class="line"><span class="comment">//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321</span></span><br><span class="line"><span class="comment">//#define DHTTYPE DHT21   // DHT 21 (AM2301)</span></span><br></pre></td></tr></table></figure></li><li><p>blinker下的所有延时操作，都需要使用Blinker.delay(val);替代，否则会导致设备断开连接</p></li></ol><blockquote><p>同时我们也可以自己可以在心跳包里添加ui组件美化的代码，来优化组件</p></blockquote><h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h3><p>我们连接好开发板，将程序烧写进去，我们就可以看到对应的数据了<br><img src="https://img-blog.csdnimg.cn/20200322211021841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200322211043441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p> 这篇文章参考arduino中文社区里的教程，自己测试了一边，有的地方书写的不够详细，包括如何和DHT11连接，如何设置IO口，以及程序如何下载进开发板，这些问题都挺简单的，不会的可以先去看一下前一篇文章，blinker点灯的文章，同时也可以和我交流</p>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2020/03/22/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/3.vscode/1.vsCode%E9%85%8D%E7%BD%AEc_c++%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/03/22/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/3.vscode/1.vsCode%E9%85%8D%E7%BD%AEc_c++%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-vsCode配置c-c-环境date-2020-03-22-15-53-54tags-vscode-开发工具"><a href="#title-vsCode配置c-c-环境date-2020-03-22-15-53-54tags-vscode-开发工具" class="headerlink" title="title: vsCode配置c&#x2F;c++环境date: 2020-03-22 15:53:54tags: - vscode - 开发工具"></a>title: vsCode配置c&#x2F;c++环境<br>date: 2020-03-22 15:53:54<br>tags:<br> - vscode<br> - 开发工具</h2><h1 id="vsCode配置"><a href="#vsCode配置" class="headerlink" title="vsCode配置"></a>vsCode配置</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>最近发现了一个挺不错的软件vsCode，之前使用 visual studio 由于占的内存空间比较大，每次启动都不是很方便，对于vsCode 这个比较小巧的软件，内部集成了各种插件，根据编程的不同来选择配置，在这里推荐给大家</p><h2 id="二-软件下载与语言配置"><a href="#二-软件下载与语言配置" class="headerlink" title="二.软件下载与语言配置"></a>二.软件下载与语言配置</h2><p>1.注意，安装很简单，傻瓜式的安装就可以了</p><blockquote><p>下载地址：<a href="https://www.lanzous.com/ia2kt9a">vsCode下载</a></p></blockquote><p>2.我们安装完成后界面是英文版的我们需要安装中文的插件</p><blockquote><p>在vsCode商店搜索 chinese 直接安装，重启软件就可以显示中文了</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200322142956788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-vsCode配置c-c"><a href="#三-vsCode配置c-c" class="headerlink" title="三.vsCode配置c&#x2F;c++"></a>三.vsCode配置c&#x2F;c++</h2><h3 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a>1.准备</h3><blockquote><p>先点击此处下载编译的包：<a href="https://www.lanzous.com/iaix1kh">Mingw-w64</a></p></blockquote><h3 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h3><ol><li><p>首先我们将下载好的压缩包解压到我们vsCode软件安装的目录下<br><img src="https://img-blog.csdnimg.cn/20200322141049204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>打开电脑，找到环境变量的设置（可以在搜索框打上环境 进行搜索）<img src="https://img-blog.csdnimg.cn/20200322141316155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200322141725181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p> 注意添加完环境变量，保存退出</p></li></ol><h3 id="3-安装vsCode相关插件"><a href="#3-安装vsCode相关插件" class="headerlink" title="3.安装vsCode相关插件"></a>3.安装vsCode相关插件</h3><ol><li><p>我们打开vsCode ，安装下面4个插件</p><ul><li>C&#x2F;C++</li><li>C&#x2F;C++ Compile Run</li><li>C&#x2F;C++ GNU Global</li><li>Code Runner</li></ul></li></ol><p><img src="https://img-blog.csdnimg.cn/20200322142532309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="4-新建测试文件"><a href="#4-新建测试文件" class="headerlink" title="4.新建测试文件"></a>4.新建测试文件</h3><p>打开一个保存代码的目录，新建一个<code> .c</code> 文件,写上测试代码<br><img src="https://img-blog.csdnimg.cn/20200322143531664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="5-运行与调试"><a href="#5-运行与调试" class="headerlink" title="5.运行与调试"></a>5.运行与调试</h3><p>1.点击上面的小三角形，运行我们会发现出现了乱码<br><img src="https://img-blog.csdnimg.cn/2020032214425810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.按F5 运行，出来次选项框，选择第一个<br><img src="https://img-blog.csdnimg.cn/20200322144636215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>再次选择第一个<br><img src="https://img-blog.csdnimg.cn/20200322144752807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>注意：在出现的代码界面修改下面部分（是让运行结果通过电脑的命令窗口输出），我们可以不用修改（直接在软件终端输出）<br><img src="https://img-blog.csdnimg.cn/20200322145011726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>返回测试代码，按F5 运行<br><img src="https://img-blog.csdnimg.cn/20200322145208731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击配置任务后继续点第一个<br><img src="https://img-blog.csdnimg.cn/20200322145243570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>然后再运行的时候我们就可以看到运行结果了<br><img src="https://img-blog.csdnimg.cn/20200322152032307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="6-单步运行调试"><a href="#6-单步运行调试" class="headerlink" title="6.单步运行调试"></a>6.单步运行调试</h3><p>我们用鼠标点击代码行号前面，来设置断点，然后按F5调试，一步一步运行<br><img src="https://img-blog.csdnimg.cn/20200322153002935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="7-控制台乱码"><a href="#7-控制台乱码" class="headerlink" title="7.控制台乱码"></a>7.控制台乱码</h3><p>打开电脑的控制面板，找到时钟和区域，如下设置即可，设置完后需要重启电脑<br><img src="https://img-blog.csdnimg.cn/20200322153653764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>网上配置的方法也挺多的，有的是一键运行exe文件来文件来配置，但是我测试没有成功，大家也可以去尝试一下</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vsCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blinker点灯开关组件</title>
      <link href="/2020/03/22/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/3.blinker%E7%82%B9%E7%81%AF%E5%BC%80%E5%85%B3%E7%BB%84%E4%BB%B6/"/>
      <url>/2020/03/22/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/3.blinker%E7%82%B9%E7%81%AF%E5%BC%80%E5%85%B3%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>前面我们说了，用于通过blinker来实现点亮开发板上面的小灯，但是用的开关组件只是按一下打开灯或者再按一下熄灭灯，从app上看不清到底是开灯的还是关灯着，所以这次说一下，按键后反馈组件的状态</p><h2 id="二-组件简绍"><a href="#二-组件简绍" class="headerlink" title="二.组件简绍"></a>二.组件简绍</h2><p>在编辑模式下，点击按键进入编辑组件页面，可以看到 按键类型 有两种：普通按键、开关按键<br><img src="https://img-blog.csdnimg.cn/2020032216190763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>普通按键</strong><br>每次按下发送的指令为  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;btn-abc&quot;</span>:<span class="string">&quot;tap&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p><strong>开关按键</strong><br>按键本身会保存开关状态，默认为off，按下时会发送  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;btn-abc&quot;</span>:<span class="string">&quot;on&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>保存的状态为on时，按下会发送  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;btn-abc&quot;</span>:<span class="string">&quot;off&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>设备端可以发送指令改变当前按键的开关状态  </p><h2 id="三-代码部分"><a href="#三-代码部分" class="headerlink" title="三.代码部分"></a>三.代码部分</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">define BLINKER_WIFI</span><br><span class="line"> </span><br><span class="line"><span class="comment">#include &lt;Blinker.h&gt;</span></span><br><span class="line"> </span><br><span class="line">char auth[] = <span class="string">&quot;Your Device Secret Key&quot;</span>;</span><br><span class="line">char ssid[] = <span class="string">&quot;Your WiFi network SSID or name&quot;</span>;</span><br><span class="line">char pswd[] = <span class="string">&quot;Your WiFi network WPA password or WEP key&quot;</span>;</span><br><span class="line"></span><br><span class="line">// 新建组件对象</span><br><span class="line">BlinkerButton Button1(<span class="string">&quot;btn-abc&quot;</span>);</span><br><span class="line"> </span><br><span class="line">// 按下按键即会执行该函数</span><br><span class="line">void button1_callback(const String &amp; state) &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">    <span class="keyword">if</span> (state==<span class="string">&quot;on&quot;</span>) &#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line">        // 反馈开关状态</span><br><span class="line">        Button1.<span class="built_in">print</span>(<span class="string">&quot;on&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(state==<span class="string">&quot;off&quot;</span>)&#123;</span><br><span class="line">        digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">        // 反馈开关状态</span><br><span class="line">        Button1.<span class="built_in">print</span>(<span class="string">&quot;off&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void <span class="function"><span class="title">setup</span></span>() &#123;</span><br><span class="line">    // 初始化串口</span><br><span class="line">    Serial.begin(115200);</span><br><span class="line">    // 初始化有LED的IO</span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">    // 初始化blinker</span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line">    Button1.attach(button1_callback);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void <span class="function"><span class="title">loop</span></span>() &#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html添加背景音乐</title>
      <link href="/2020/03/21/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3.html%20cs%20js/1.html%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90/"/>
      <url>/2020/03/21/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/3.html%20cs%20js/1.html%E6%B7%BB%E5%8A%A0%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-html添加背景音乐date-2020-03-21-10-21-53tags-HTML-编程语言"><a href="#title-html添加背景音乐date-2020-03-21-10-21-53tags-HTML-编程语言" class="headerlink" title="title: html添加背景音乐date: 2020-03-21 10:21:53tags: - HTML - 编程语言"></a>title: html添加背景音乐<br>date: 2020-03-21 10:21:53<br>tags:<br> - HTML<br> - 编程语言</h2><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>给html网页添加背景音乐的方法，这里简绍两种方式</p><ul><li>标签 embed </li><li>标签 audio</li></ul><h2 id="二-教程"><a href="#二-教程" class="headerlink" title="二.教程"></a>二.教程</h2><p><strong>标签 embed</strong><br>在<head>标签里面的title标签下添加如下的代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;embed src=<span class="string">&quot;music.mp3&quot;</span> hidden=<span class="string">&quot;flase&quot;</span> autostart=<span class="string">&quot;true&quot;</span> loop=<span class="string">&quot;true&quot;</span>&gt;</span><br></pre></td></tr></table></figure><blockquote><p>说明</p><ol><li>src 就是音乐文件所放的路径</li><li>hidden&#x3D;”true” 表示隐藏音乐播放按钮，相反false表示开启音乐播放按钮</li><li>autostart&#x3D;”true 表示打开网页加载完后自动播放</li><li>loop&#x3D;”true” 表示循环播放，反之false播放一次</li></ol></blockquote><p><strong>标签 audio</strong><br>在<body>标签里下添加如下的代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio autoplay=<span class="string">&quot;autoplay&quot;</span> loop=<span class="string">&quot;loop&quot;</span> preload=<span class="string">&quot;auto&quot;</span> controls=<span class="string">&quot;controls&quot;</span></span><br><span class="line">    src=<span class="string">&quot;music.mp3&quot;</span>&gt;</span><br><span class="line">&lt;/audio&gt;    </span><br></pre></td></tr></table></figure><blockquote><p>说明</p></blockquote><ol><li>使用autoplay&#x3D;”autoplay”，则背景音乐将在音网页打开后就自动马上播放。</li><li>使用controls&#x3D;”controls”，则为了在页面内显示显示控件，如播放按钮。</li><li>使用”loop&#x3D;”loop”，则是为了是背景音乐重复播放。</li><li>使用preload&#x3D;”auto”，则音频在页面加载的同时进行加载，并预备播放。</li><li>使用src&#x3D;””，即是在””内加入背景音乐的保存路径</li></ol><p>如果想隐藏播放按钮，则使用下面语句</p><blockquote><p>直接使用css的display控制audio标签的显示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line"> audio&#123;</span><br><span class="line">         display: none;</span><br><span class="line">     &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建博客之添加文章评论</title>
      <link href="/2020/03/19/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/3.hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/03/19/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/3.hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>我们在搭建完博客之后，整个项目的文章评论系统是无法使用的，需要我们自己来搭建使用</p><blockquote><p>在这里我给大家简绍的是通过leanCloud 来实现</p></blockquote><h2 id="二-开始教程"><a href="#二-开始教程" class="headerlink" title="二.开始教程"></a>二.开始教程</h2><h3 id="1-LeanCloud申请账户"><a href="#1-LeanCloud申请账户" class="headerlink" title="1.LeanCloud申请账户"></a>1.LeanCloud申请账户</h3><p>我们首先进入<a href="https://leancloud.cn/">LeanCloud官网</a>, 点击控制台，然后按照提示来申请一个自己的账户，过程中需要实名认证，我们安装提示来，都是挺简单的，在这里我就不多说了<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200319144019.png"></p><h3 id="2-新建class"><a href="#2-新建class" class="headerlink" title="2.新建class"></a>2.新建class</h3><p>我们登录我们账户，进入控制台，创建一个新应用，点击存储，按下面图标新建class， class名称必须为 Counter<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200319145124.png"></p><h3 id="3-添加ID和Key"><a href="#3-添加ID和Key" class="headerlink" title="3.添加ID和Key"></a>3.添加ID和Key</h3><p>按下下面的图片提示，复制ID和Key<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200319145539.png"></p><p>复制之后，更改主题配置文件 _config.yml 中的 leancloud_visitors: 。注意将enable设为true</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Show number of visitors to each article.</span><br><span class="line"># You can visit https:<span class="comment">//leancloud.cn get AppID and AppKey.</span></span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  app_id: <span class="meta">#your App ID</span></span><br><span class="line">  app_key: <span class="meta">#your App Key</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong><br>我看了好多教程，有的朋友说再修改之后不起作用，我们可以将 </p><ul><li>app_id改为 appid    </li><li>app_key改为appkey</li></ul><p><strong>特别注意</strong></p><blockquote><p>如果按照上面修改不起作用再往下看<br>我的博客主题是sakura 所以安装上面修改是不起作用的，我们可以这样修改</p></blockquote><p>我们还是更改主题配置文件_config.yml 中的  Valine</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Valine</span><br><span class="line">valine: <span class="literal">true</span></span><br><span class="line">v_appId: #你刚才复制的id号</span><br><span class="line">v_appKey: #你刚才复制的key</span><br></pre></td></tr></table></figure><h3 id="4-设置安全域名"><a href="#4-设置安全域名" class="headerlink" title="4.设置安全域名"></a>4.设置安全域名</h3><p>安装下面图片提示来填写</p><blockquote><p><strong>注意</strong></p><ol><li>下面的域名就是访问你博客主页的域名，也就是码云 pages 生成的那个域名</li><li>这里的端口号可以不用写，如果要写就有注意格式，常用的默认端口号<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200319151419.png"></li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200319150742.png"></p><h2 id="三-总结"><a href="#三-总结" class="headerlink" title="三.总结"></a>三.总结</h2><p>在我们配置结束以后，我们就运行如下的命令同步到博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g --d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino+esp8266+blinker物联网开发</title>
      <link href="/2020/03/14/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/2.Arduino+esp8266+blinker%E7%89%A9%E8%81%94%E7%BD%91%E5%BC%80%E5%8F%91/"/>
      <url>/2020/03/14/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/2.Arduino+esp8266+blinker%E7%89%A9%E8%81%94%E7%BD%91%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="blinker点灯"><a href="#blinker点灯" class="headerlink" title="blinker点灯"></a>blinker点灯</h1><h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>为了加深为物联网知识的认识，今天就教大家如何用手机app来控制我们的开发板。我们的开发环境是以arduino IDE为开发基础，通过blinker服务器来控制我们的esp8266 WiFi模块，来点灯</p><h2 id="二-开发环境的搭建"><a href="#二-开发环境的搭建" class="headerlink" title="二.开发环境的搭建"></a>二.开发环境的搭建</h2><h3 id="1-arduino的安装"><a href="#1-arduino的安装" class="headerlink" title="1.arduino的安装"></a>1.arduino的安装</h3><p>选择 arduino开发的环境原因是，它有好的库，所以在开发过程中就非常的简单<br><img src="https://img-blog.csdnimg.cn/20200314160401338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>软件下载地址：<a href="https://www.lanzous.com/ia8ubed">arduino 1.8.11</a></p></blockquote><h3 id="2-添加esp8266开发板"><a href="#2-添加esp8266开发板" class="headerlink" title="2.添加esp8266开发板"></a>2.添加esp8266开发板</h3><ul><li><p>我们刚安装的 ide中是没有 esp8266开发板选项的。我们需要自己手动安装</p></li><li><p>我们首先下载，这个安装包，然后直接运行就可以将其导入</p><blockquote><p>下载地址：<a href="https://www.lanzous.com/ia8vh4f">esp8266开发板</a></p></blockquote></li></ul><p><img src="https://img-blog.csdnimg.cn/20200314161407586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们打开工具，点击开发板观察到，多出来上面的开发板选项就证明安装成功</p><h3 id="3-blinker库的导入"><a href="#3-blinker库的导入" class="headerlink" title="3. blinker库的导入"></a>3. blinker库的导入</h3><p>我们是通过blinker服务器进行开发的，所有我们需要添加blinker库，正因为有这些库，我们只需要使用里面封装好的函数就可以了</p><blockquote><p>下载地址：<a href="https://www.lanzous.com/ia8vgch">blinker库文件</a></p></blockquote><p><strong>添加方法</strong><br>我们需要将我们下载的文件，解压到我们arduino 软件安装目录下的 libraries文件夹下<br><img src="https://img-blog.csdnimg.cn/20200314162346556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>安装成功我们可以看到如下<br><img src="https://img-blog.csdnimg.cn/20200314162650792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="4-驱动的安装"><a href="#4-驱动的安装" class="headerlink" title="4.驱动的安装"></a>4.驱动的安装</h3><p>一般我们所使用的wifi模块如下<br><img src="https://img-blog.csdnimg.cn/20200314162826675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们插上开发板后，打开电脑的设备管理器<br><img src="https://img-blog.csdnimg.cn/20200314163336688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果和上面图片显示的不一样，出现感叹号就需要安装驱动</p><blockquote><p>下载地址：<a href="https://www.lanzous.com/ia8w61c">ch341SER驱动</a></p></blockquote><h3 id="4-手机端安装app"><a href="#4-手机端安装app" class="headerlink" title="4.手机端安装app"></a>4.手机端安装app</h3><p>我们需要在手机端进行操控所有还需要安装blinker app</p><blockquote><p>下载地址：<a href="https://www.lanzous.com/ia8v62h">blinker app</a><br>其他版本也可通过  <a href="https://diandeng.tech/home">blinker官网下载</a></p></blockquote><h2 id="三-开发第一个点灯程序"><a href="#三-开发第一个点灯程序" class="headerlink" title="三.开发第一个点灯程序"></a>三.开发第一个点灯程序</h2><h3 id="1-添加设备"><a href="#1-添加设备" class="headerlink" title="1.添加设备"></a>1.添加设备</h3><p><img src="https://img-blog.csdnimg.cn/20200314173855921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-载入示例"><a href="#2-载入示例" class="headerlink" title="2.载入示例"></a>2.载入示例</h3><p>我们也可以看看下面的组件，有好多种，我们可以先尝试最简单的<br><img src="https://img-blog.csdnimg.cn/20200314174921202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-代码部分"><a href="#3-代码部分" class="headerlink" title="3.代码部分"></a>3.代码部分</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> BLINKER_WIFI</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Blinker.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;Your Device Secret Key&quot;</span>;</span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;Your WiFi network SSID or name&quot;</span>;</span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;Your WiFi network WPA password or WEP key&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 新建组件对象</span></span><br><span class="line">BlinkerButton <span class="title function_">Button1</span><span class="params">(<span class="string">&quot;btn-abc&quot;</span>)</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 按下按键即会执行该函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">button1_callback</span><span class="params">(<span class="type">const</span> String &amp; state)</span> &#123;</span><br><span class="line">    BLINKER_LOG(<span class="string">&quot;get button state: &quot;</span>, state);</span><br><span class="line">    digitalWrite(LED_BUILTIN, !digitalRead(LED_BUILTIN));</span><br><span class="line">    Blinker.vibrate();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化串口，并开启调试信息</span></span><br><span class="line">    Serial.begin(<span class="number">115200</span>);    </span><br><span class="line">    BLINKER_DEBUG.stream(Serial);</span><br><span class="line">    <span class="comment">// 初始化有LED的IO</span></span><br><span class="line">    pinMode(LED_BUILTIN, OUTPUT);</span><br><span class="line">    digitalWrite(LED_BUILTIN, HIGH);</span><br><span class="line">    <span class="comment">// 初始化blinker</span></span><br><span class="line">    Blinker.begin(auth, ssid, pswd);</span><br><span class="line">    Button1.attach(button1_callback);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">void</span> <span class="title function_">loop</span><span class="params">()</span> &#123;</span><br><span class="line">    Blinker.run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要修改的部分<br><strong>配置esp8266连接网络的部分</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> auth[] = <span class="string">&quot;abcdefghijkl&quot;</span>; <span class="comment">//上一步中在app中获取到的Secret Key</span></span><br><span class="line"><span class="type">char</span> ssid[] = <span class="string">&quot;blinkerssid&quot;</span>; <span class="comment">//你的WiFi热点名称</span></span><br><span class="line"><span class="type">char</span> pswd[] = <span class="string">&quot;123456789&quot;</span>; <span class="comment">//你的WiFi密码</span></span><br></pre></td></tr></table></figure><h3 id="4-代码讲解"><a href="#4-代码讲解" class="headerlink" title="4.代码讲解"></a>4.代码讲解</h3><p><strong>新建组件并绑定回调函数</strong><br>blinker app上每个UI组件在设备端都可以创建一个对应的对象。创建方式如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">组件类型  对象名(键名)</span><br></pre></td></tr></table></figure><p>app中组件对应的键名可以在界面编辑模式下看到。<br>使用组件的数据键名创建对应的对象，这个对象就与blinker app界面上的UI组件进行了绑定。<br>blinker库定义了多种组件类型，对应app上UI组件类型，如<br>BlinkerSlider  滑块组件<br>BlinkerRGB   颜色拾取组件<br>BlinkerNumber  数值组件<br>BlinkerText   文本组件<br>如下，创建了按键组件和数值组件对应的对象：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BlinkerButton <span class="title function_">Button1</span><span class="params">(<span class="string">&quot;btn-abc&quot;</span>)</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200314180851549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200314181334483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最后的代码，主要的作用就是，在blinker收到数据后对数据的解析</p><p><strong>开启调试信息</strong><br>我们可以在setup中添加如下的语句，以查询调试信息</p><blockquote><p><code>BLINKER_DEBUG.stream(Serial);</code> 用于指定调试信息输出的串口，设备开发时候使用<br><code>BLINKER_DEBUG.debugAll();</code> 可以查看更多的内部信息</p></blockquote><h3 id="5-程序烧写"><a href="#5-程序烧写" class="headerlink" title="5.程序烧写"></a>5.程序烧写</h3><p>我们在改为代码之后就可以往esp8266开发板内烧写程序了</p><p>注意</p><ul><li>一般所购买的wifi模块，通过数据线就可以连接进行烧写</li><li>特殊的我们需要用到usb-ttl 来为其烧写程序<br><img src="https://img-blog.csdnimg.cn/20200314183007214.png" alt="在这里插入图片描述"><blockquote><p>有的开发板的引脚没有标出来，我们可以参考这篇文 <a href="https://blog.csdn.net/weixin_45631738/article/details/104579850">开发板原理图</a></p></blockquote></li></ul><p><strong>等连接好之后我们就可以烧写测试了</strong><br><img src="https://img-blog.csdnimg.cn/20200314182255942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-总结"><a href="#四-总结" class="headerlink" title="四.总结"></a>四.总结</h2><p>这个是比较简单的程序，我们先搞明白，后面再进行拓展学习，注意一点现在市面上的wifi模块的开发板很多，所以在模块的选择和电脑的连接上存在差异，相信这也不是什么大的问题，祝大家点灯成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+gitee搭建私人博客成功避开所有坑</title>
      <link href="/2020/03/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/1.hexo+gitee(%E7%A0%81%E4%BA%91)%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%81%BF%E5%BC%80%E6%89%80%E6%9C%89%E5%9D%91/"/>
      <url>/2020/03/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/1.hexo+gitee(%E7%A0%81%E4%BA%91)%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%81%BF%E5%BC%80%E6%89%80%E6%9C%89%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><ul><li><p>为什么要搭建博客，因为某天突然看到好多大神级别的人物在发自己搭建的博客，效果特别的好，作为小白的我看了之后，蠢蠢欲动，于是乎一下走上了不归的试坑道路</p></li><li><p>搭建个人博客，一方面可以记录我们生活的方方面面，按照自己的需求设计自己的模块，可以说是私人订制了，另一方面就是给别人提供了一种了解你自己的渠道，可以说是自己的一个名片，因为我们需要的是让更多的人认识我们，而不是我们认识更多的人</p></li></ul><blockquote><p>在此请允许我秀一下成功后的喜悦，<a href="https://zfq0620.gitee.io/">我的博客</a></p></blockquote><h2 id="二-为什么使用hexo-码云搭建"><a href="#二-为什么使用hexo-码云搭建" class="headerlink" title="二.为什么使用hexo+码云搭建"></a>二.为什么使用hexo+码云搭建</h2><ol><li><p>我感觉搭建博客最简单的方法就是，在一个服务器上面去搭建，比如说阿里云，腾讯云等等，我们只需要在服务器的文件系统上传压缩包并解压，用测试域名就可以看到效果了，但是现在服务器都是收费的，从理想的角度来考虑，当然要选择一个可以长期使用而且不收费的服务器</p></li><li><p>所有我们选择码云，因为码云上有gitee pages(免费的静态网页托管服务)，目前码云支持Jekyll、Hugo、Hexo编译静态资源，不知道什么是<a href="https://gitee.com/help/articles/4136#article-header0">Jekyll、Hugo、Hexo</a> 可以打开链接看看<br><img src="https://img-blog.csdnimg.cn/20200307165045742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>选择hexo的原因是，hexo基于Node.js实现的，而且目前主流的vue前端一般都是使用npm或者yarn来跑项目，因此使用hexo搭建博客比较简单</p></li></ol><h2 id="三-hexo-本地博客搭建"><a href="#三-hexo-本地博客搭建" class="headerlink" title="三.hexo 本地博客搭建"></a>三.hexo 本地博客搭建</h2><p><strong>这里我以windows系统为例，因为我条件限制，希望理解</strong></p><h3 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h3><p>这里我们需要下载安装两个软件，我们就去官网下载一下<a href="https://nodejs.org/en/">node.js</a>和 <a href="https://git-scm.com/download/win">git</a><br>如果git 下载比较慢的话，我给大家分享一下我的下载链接</p><blockquote><ol><li><a href="https://www.lanzous.com/ia8ufcf">node.js</a></li><li><a href="https://www.lanzous.com/i9iqtvi">git</a></li></ol></blockquote><h3 id="2-Node-js-的安装配置"><a href="#2-Node-js-的安装配置" class="headerlink" title="2.Node.js 的安装配置"></a>2.Node.js 的安装配置</h3><p>我们下载完 node.js 进行安装就可以了。</p><blockquote><p>关于配置可以参考这两篇文章</p><ol><li><a href="https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=2&sn=643a205068a006fb162c2c1397d42d47&chksm=fcf0887acb87016ca195976dbedb279c1c7f4c579016cca11143f21a6dffbb89080d0cabf44d&scene=21#wechat_redirect">node.js的安装</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzU3MDI4NTM5Mg==&mid=2247484485&idx=3&sn=9f7895c0f5ba0e29b93afdc140bda9e6&chksm=fcf0887acb87016cca4e902de7a501c52368ea52bebbe6e75cb10ea8b784c13f5dcabf042ca3&scene=21#wechat_redirect">node.js的环境配置</a></li></ol></blockquote><h3 id="3-hexo-的安装"><a href="#3-hexo-的安装" class="headerlink" title="3.hexo 的安装"></a>3.hexo 的安装</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接下来我们安装hexo，打开git 命令行，执行如下命令</span></span><br><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200307170441173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>注意：输入hexo 按回车，出现下面help 就说明安装成功</p></blockquote><h3 id="4-初始化项目文件"><a href="#4-初始化项目文件" class="headerlink" title="4.初始化项目文件"></a>4.初始化项目文件</h3><p>在准备放项目文件的目录，可以通过windows的cmd终端或者git bash 执行如下的命令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog   <span class="comment">//注意：blog为项目的文件夹名可自定义</span></span><br></pre></td></tr></table></figure><p>执行命令就会开始下载文件<br><img src="https://img-blog.csdnimg.cn/20200307171000690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载成功之后的目录是这样的<br><img src="https://img-blog.csdnimg.cn/2020030719010916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307191025235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="5-本地测试项目"><a href="#5-本地测试项目" class="headerlink" title="5.本地测试项目"></a>5.本地测试项目</h3><p>输入常用的hexo 命令进行本地的测试</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment">//清空已经存在的hexo网站文件</span></span><br><span class="line">hexo <span class="title function_">generate</span><span class="params">(可简写g)</span> <span class="comment">//依据网页文件和新的css样式生成新的网站文件</span></span><br><span class="line">hexo <span class="title function_">server</span><span class="params">(可简写为s)</span> <span class="comment">//启动本地服务器，可以在localhost：4000查看网站修改效果</span></span><br></pre></td></tr></table></figure><p>我们先 输入 hexo g 生成网站文件<br><img src="https://img-blog.csdnimg.cn/20200307194109630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后再启动本地服务器，我在在浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> 就能看到样式内容了<br><img src="https://img-blog.csdnimg.cn/20200307194337111.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307194654587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>到这里本地测试就结束了，关键我们要放在服务器上面，本地测试适用于我们，一边修改代码，一边刷新网页查看修改好的样子</p><h2 id="四-主题模块"><a href="#四-主题模块" class="headerlink" title="四.主题模块"></a>四.主题模块</h2><ol><li><p>一般默认安装的主题是一个 landscape 主题，但是我感觉不是很花哨，而且hexo的主题特别多，都挺漂亮的，我们可以选择更改</p><blockquote><p><a href="https://hexo.io/themes/">hexo官方主题：https://hexo.io/themes/</a></p></blockquote></li><li><p>给大家推荐一个主题 sakura，我搭建的主题就是这个，效果还是挺不错的,<a href="https://github.com/honjun/hexo-theme-sakura">sakura下载链接</a><br><img src="https://img-blog.csdnimg.cn/20200307223006950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>下载之后，我们将hexo-theme-sakura-master中的主题样式复制到 根目录下的 theme 目录下<br><img src="https://img-blog.csdnimg.cn/20200307222330953.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020030722243065.png" alt="在这里插入图片描述"></p></li><li><p>修改更目录下的配置文件 _config.yml</p></li></ol><blockquote><p>注意<br>theme： Sakura    &#x2F;&#x2F;此处的主题名字要和theme文件夹下主题名一致</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200307222845632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5. 重新运行测试,查看效果</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="五-码云部署"><a href="#五-码云部署" class="headerlink" title="五.码云部署"></a>五.码云部署</h2><ol><li>首先我们需要注册码云的账号，然后在创建一个仓库，这里初次使用码云的话可以，先看一下<a href="https://blog.csdn.net/weixin_45631738/article/details/104414876">码云入门</a></li><li>当然注册账号我们可以直接进入码云官网：<a href="https://gitee.com/">https://gitee.com/</a>都是中文一看就会的那种</li><li>创建仓库<br> 特别要注意这里有个大坑：<code>仓库名称，使用语言(JavaScript)，访问权限(公开)</code><br> <img src="https://img-blog.csdnimg.cn/20200307201109990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307201826785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><blockquote><p>作为小白的我，成功的掉进这个坑里爬了好几天，没爬出来，最终请教大神帮忙，才发现是此处的原因。<br>当时，写的仓库名不是我的用户名，导致码云pages部署的路径有问题，导致相对路径不对，读不到css样式和js运行文件，所有进去后就是这个样子，所以依次告警大家不要入坑</p></blockquote></li></ol><p><img src="https://img-blog.csdnimg.cn/20200307224725494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="4"><li><p>获取仓库地址<br> <img src="https://img-blog.csdnimg.cn/20200307202408310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>输入下面命令，安装git相关插件(用于代码上传到码云仓库)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save </span><br></pre></td></tr></table></figure></li><li><p>修改配置文件 在blog主目录下找到 _config.yml 打开进行配置，在代码的最底下找到此处<br> <img src="https://img-blog.csdnimg.cn/20200307202747687.png" alt="在这里插入图片描述"><br> 修改之后的样子，<br> <strong>特别注意这里还有个坑</strong>：<code>修改代码时候注意空格</code>，例如 repo： 后面都是有空格的，删除空格之后，后面运行的时候就会报错，这是编码的规定<br><img src="https://img-blog.csdnimg.cn/20200307203008590.png" alt="在这里插入图片描述"></p></li><li><p>开始部署，我们需要输入以下命令</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">//清除原来生成的网页文件</span></span><br><span class="line">hexo g  <span class="comment">//生成网页文件</span></span><br><span class="line">hexo d  <span class="comment">//上传到远程在码云上新建的仓库</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>hexo g</code> 和 <code>hexo d</code> 可替换成 <code>hexo g --d</code></p></blockquote><p>此时会弹出对话框让我们输入码云的用户名和密码(如果我们之前配置过则此处不会提示)，我们输完以后，就会开始上传，此时在项目的根目录会生成.deploy_git文件夹（上传的是此外文件夹下的内容，也就是生成的网站文件）<br><img src="https://img-blog.csdnimg.cn/20200307205213501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>注意</strong></p><blockquote><p>如果你是第一次使用 git bash ，那这里你可能会出错，我们还需要配置一下用户名和邮箱，输入下面命令</p><ol><li><code>git config --global user.name &quot;ZHAI&quot;</code>      &#x2F;&#x2F;用户名自定义</li><li><code>git config --global user.email zfq0620@126.com</code>  &#x2F;&#x2F;邮箱也是一样的自定义，这里是我自己的配置</li></ol></blockquote><p>登录码云账户，打开和自己用户名相同的仓库观察，如果出现和.deploy_git或者public文件夹下的文件就证明文件上传成功<br><img src="https://img-blog.csdnimg.cn/20200307205625309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="8"><li>开启pages功能<br><img src="https://img-blog.csdnimg.cn/20200307210149690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307210929528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 这样我们就可以点击生成的域名来看我们搭建的效果了<a href="https://zfq0620.gitee.io/">https://zfq0620.gitee.io</a></li></ol><h2 id="六-博客使用"><a href="#六-博客使用" class="headerlink" title="六.博客使用"></a>六.博客使用</h2><h3 id="1-编写文章"><a href="#1-编写文章" class="headerlink" title="1.编写文章"></a>1.编写文章</h3><blockquote><p>首先我给大家推荐一个软件 vsCode,这个软件占用空间很小，插件很多，功能特别强大，我们可以打开我们整个文件夹，进行修改代码，写文章，对我们提高效率很有帮助<br>下载：<a href="https://www.lanzous.com/ia2kt9a">vsCode.exe</a><br><img src="https://img-blog.csdnimg.cn/20200309100627872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><p><strong>方法一</strong><br>通过命令来实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new hello  <span class="comment">//hello 为博客的文件名</span></span><br></pre></td></tr></table></figure><p>同时会在 根目录下 &#x2F;source&#x2F;_posts 目录下生成hello.md<br><img src="https://img-blog.csdnimg.cn/20200307213138179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>方法二</strong><br>手动到根目录下 &#x2F;source&#x2F;_posts 目录下，创建一个makedown 文件进行编写就可以了</p><p>文件开头可以参考这里来写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title： file_name</span><br><span class="line">tag： 标签名</span><br><span class="line">categories： 分类</span><br><span class="line">comment： 是否允许评论(<span class="literal">true</span> or <span class="literal">false</span>)</span><br><span class="line">description：描述</span><br><span class="line">---</span><br><span class="line">文章的正文部分，可以参考markdown 语法格式来写</span><br></pre></td></tr></table></figure><h3 id="2-发布文章"><a href="#2-发布文章" class="headerlink" title="2.发布文章"></a>2.发布文章</h3><p>我们还是使用命令，推送到gitee上</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g --d</span><br></pre></td></tr></table></figure><p>推送成功之后，我们观察码云的远程仓库，我们的md格式的文件会自动生成到对应的目录，并且转化成html格式</p><p>我们在去浏览我们的网站，如何发现和之前一样没有找到我们发布的文章，我们就到码云的page服务，去更新<br><img src="https://img-blog.csdnimg.cn/20200307215838546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><p>将 csdn 博客导出在我们自己新建的博客中的方法<br><img src="https://img-blog.csdnimg.cn/20200307220217873.png" alt="在这里插入图片描述"><br>点击导出，格式为makedown，复制到 &#x2F;source&#x2F;_posts 目录下，并加以修改添加一下部分，进行分类</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title： file_name</span><br><span class="line">tag： 标签名</span><br><span class="line">categories： 分类</span><br><span class="line">comment： 是否允许评论(<span class="literal">true</span> or <span class="literal">false</span>)</span><br><span class="line">description：描述</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
            <tag> web项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机屏幕投屏到电脑</title>
      <link href="/2020/02/20/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/2.%E6%8A%95%E5%B1%8F%E8%BD%AF%E4%BB%B6/"/>
      <url>/2020/02/20/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/2.%E6%8A%95%E5%B1%8F%E8%BD%AF%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>有时候我们需要将手机屏幕上的内容，投屏到电脑上，然后可以在电脑上通过鼠标来控制手机，省去了一边看手机一边看电脑的麻烦，大大的提高了工作的效率，但是现在在百度上下载的软件，好多都比较麻烦不是下载这个就是安装那个的，广告还挺多，影响人的使用心。今天我给大家推荐一个投屏的软件，是某大神写到代码，非常的简单好用<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200311205520.png"></p><h2 id="二-下载"><a href="#二-下载" class="headerlink" title="二.下载"></a>二.下载</h2><p><a href="https://www.lanzous.com/ia5ip1e">点击此处下载文件</a></p><h2 id="三-使用教程"><a href="#三-使用教程" class="headerlink" title="三.使用教程"></a>三.使用教程</h2><p><strong>有线连接</strong></p><ol><li>开启开发者模式，打开手机设置-关于手机（找到手机的全部参数-连续点击版本来开启开发者模式，不同的手机操作可能存在差异，不会的可以百度</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200311203619.png"></p><ol start="2"><li>在手机设置里面找到更多设置-开发者模式，打开开发者模式,往下拉找到 usb调试<blockquote><p>上面的开关是保证可以正常连接，下面的是保证电脑的鼠标可以点击控制</p></blockquote></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200311204154.png"></p><ol start="3"><li>解压下载好的 scrcpy压缩包，然后让手机和电脑连接，点击 scrcpy.exe 运行程序,我们就可以看到效果了</li></ol><p><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200311205325.png"></p><p><strong>无线连接</strong></p><ol><li>有线连接成功后可以尝试无线连接。</li><li>首先还是要用数据线把手机和电脑连接起来，按windows+r键，然后输入cmd，打开「命令提示符」，切换到scrcpy目录下（输入E: 就会切换到E盘，通过cd + 文件夹名 切换到相应的目录）</li><li>在「命令提示符」中输入 .\adb tcpip 5555，然后拔下手机。继续输入 .\adb connect 手机IP地址:5555 。你手机的IP地址可以在，设置– 关于手机 – 状态中查看。输入完成后打开 scrcpy.exe  即可无线连接手机了。 比收费还好用哦</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>西理工跑酷</title>
      <link href="/2020/02/20/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/4.%E8%BF%90%E5%8A%A8/1.%E8%A5%BF%E5%AE%89%E7%90%86%E5%B7%A5%E8%B7%91%E9%85%B7%E8%A7%86%E9%A2%91/"/>
      <url>/2020/02/20/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/4.%E8%BF%90%E5%8A%A8/1.%E8%A5%BF%E5%AE%89%E7%90%86%E5%B7%A5%E8%B7%91%E9%85%B7%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom:75%;"><iframe frameborder="0" src="https://v.qq.com/txp/iframe/player.html?vid=p3045zl2c2f" allowFullScreen="true"style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
      
      
      
        <tags>
            
            <tag> 日常 </tag>
            
            <tag> 运动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+sakura主题美化合集</title>
      <link href="/2020/02/20/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2.hexo+sakura%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E5%90%88%E9%9B%86/"/>
      <url>/2020/02/20/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/7.%E9%A1%B9%E7%9B%AE/1.web%E9%A1%B9%E7%9B%AE/1.%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/2.hexo+sakura%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><p>我们搭建了自己的博客后，肯定需要美化，打造属于自己的个性博客，但是百度上面好多大神发的教程比较散，我尝试了以后汇总了一下分享给大家</p><ul><li>主题基本修改</li><li>添加通讯以及美化背景</li><li>添加2d板娘</li></ul><h2 id="二-主题基本修改"><a href="#二-主题基本修改" class="headerlink" title="二.主题基本修改"></a>二.主题基本修改</h2><p>主题基本的修改我给大家推荐的是 <a href="https://yremp.live/hexo-sakura/">yremp大神</a> 的这篇文章<br><img src="https://img-blog.csdnimg.cn/20200310115912131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>包含的修改项</strong></p><ul><li>顶部站点名字</li><li>顶部导航栏</li><li>头像</li><li>社交栏</li><li>顶部图片和效果</li><li>通知栏</li><li>startdash</li><li>Discovery</li><li>文章封面和内容</li><li>归档子页面 </li><li>清单子页面</li><li>友情链接相关配置</li><li>左下角播放器</li><li>切换背景</li><li>评论不在白名单问题<blockquote><p>大家可以根据自己的需求简单的修改</p></blockquote></li></ul><h2 id="三-添加通讯以及美化背景"><a href="#三-添加通讯以及美化背景" class="headerlink" title="三.添加通讯以及美化背景"></a>三.添加通讯以及美化背景</h2><p>这块我给大家推荐的是 <a href="https://blog.csdn.net/cungudafa/article/details/104295156">cungudafa大神</a> 的这篇文章<br><img src="https://img-blog.csdnimg.cn/20200310122203275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>包含的修改项</strong></p><ol><li>背景样式的修改(花瓣飘落、文字，爱心，连线，飘动的彩带，鼠标点击爆炸等等)</li><li>背景图片的切换，不蒜子网页计数</li><li>在线通讯,绑定微信实时提醒</li></ol><blockquote><p>当然如果这满足不了你美化的需求，还可以看看这篇文章，<a href="https://blog.csdn.net/qq_36759224/article/details/85420403">TRHX大神</a> 有背景的雪花飘落，背景的代码雨等等</p></blockquote><h2 id="四-添加2D板娘"><a href="#四-添加2D板娘" class="headerlink" title="四.添加2D板娘"></a>四.添加2D板娘</h2><p><strong>2d板娘，就是下面图片的效果，下面我给大家两种方法</strong><br><img src="https://img-blog.csdnimg.cn/20200310123643936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="1-通过core-js安装"><a href="#1-通过core-js安装" class="headerlink" title="1.通过core-js安装"></a>1.通过core-js安装</h3><p>这种方式也是最普通的方法，因为我们在搭建博客的时间基本的环境(node.js和hexo)已经搭建好了，所以直接安装 live2d 的插件就好了</p><p><strong>开始教程</strong><br>1.我们执行下面命令安装 live2d 模块，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p><strong>案例</strong></p><blockquote><p>但是在我安装的时候，直接就报错了，原因是core-js的版本太低了，无法安装liv2d，所以得升级<br><img src="https://img-blog.csdnimg.cn/20200310130604320.png" alt="在这里插入图片描述"><br>我们输入下面命令查看core-js 的版本<br><code>npm ls core-js   </code><br>因为core-js（是专门管理插件的，也就是我们node_modules 的文件夹）它在升级后之前的版本就不能用了<br><img src="https://img-blog.csdnimg.cn/20200310130854330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我的之前版本是 core-js@2 所以安装不了，我们可以先卸载，然后在安装新版本<br><code>npm uninstall --save core-js@^2</code>  &#x2F;&#x2F;卸载<br><code>npm install --save core-js@^3</code>   &#x2F;&#x2F;安装<br><img src="https://img-blog.csdnimg.cn/2020031013114633.png" alt="在这里插入图片描述"><br>然后我们就可以安装 hexo-helper-live2d 模块了</p></blockquote><p>安装成功后是这样子的<br><img src="https://img-blog.csdnimg.cn/20200310132039446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>特别注意core-js的使用</strong><br>如何我们不用这个模块了，不要直接去文件夹自己手动删除，这里会让整个文件系统出错，所有我们需要输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//例如</span><br><span class="line">npm install --save + 模块名称    //安装了该模块</span><br><span class="line">npm uninstall --save + 模块名称  //卸载该模块</span><br></pre></td></tr></table></figure><p>2.下载我们的版娘<br>我们可以使用一下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-wanko </span><br></pre></td></tr></table></figure><p>注意：live2d-widget-model-wanko 为板娘主题的名字，我们可以按照自己的喜好选择</p><p><strong>live2d模型仓库</strong><br>live2d-widget-model-chitose<br>live2d-widget-model-epsilon2_1<br>live2d-widget-model-gf<br>live2d-widget-model-haru&#x2F;01 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haru&#x2F;02 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haruto<br>live2d-widget-model-hibiki<br>live2d-widget-model-hijiki<br>live2d-widget-model-izumi<br>live2d-widget-model-koharu<br>live2d-widget-model-miku<br>live2d-widget-model-ni-j<br>live2d-widget-model-nico<br>live2d-widget-model-nietzsche<br>live2d-widget-model-nipsilon<br>live2d-widget-model-nito<br>live2d-widget-model-shizuku<br>live2d-widget-model-tororo<br>live2d-widget-model-tsumiki<br>live2d-widget-model-unitychan<br>live2d-widget-model-wanko<br>live2d-widget-model-z16</p><blockquote><p>大家可以在 <a href="https://github.com/xiazeyu/live2d-widget-models">github下载</a>，但是我建议大家使用命令去安装<br>模型预览大家可以进入<a href="https://blog.csdn.net/weixin_34321753/article/details/93895440">此文章预览对应的板娘</a></p></blockquote><p>3.在站点配置文件 或 主题配置文件(_config.yml) 的末尾添加如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># enable: false</span></span><br><span class="line">  scriptFrom: <span class="built_in">local</span> <span class="comment"># 默认</span></span><br><span class="line">  pluginRootPath: live2dw/ <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  pluginJsPath: lib/ <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  pluginModelPath: assets/ <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  tagMode: <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  debug: <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko <span class="comment"># 修改项 npm-module package name </span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">true</span> <span class="comment"># 手机中是否展示</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong><br>我们需要改的就是use 这个地方，我们下载的那个主题，我们就修改成什么名字，当然在 display 项中也可以修改显示的位置已经大小<br><img src="https://img-blog.csdnimg.cn/20200310134508559.png" alt="在这里插入图片描述"></p><h3 id="2-直接修改文件安装"><a href="#2-直接修改文件安装" class="headerlink" title="2.直接修改文件安装"></a>2.直接修改文件安装</h3><p>我们先下载这个大神的 <a href="https://www.lanzous.com/ia41avg">主题包</a></p><p>1.然后解压 live2d-widget文件解压到本地博客目录的themes&#x2F;sakura&#x2F;source 下</p><p>2.修改刚解压过来live2d-widget文件夹下的 autoload.js 文件，如下：<br>将</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const live2d_path = <span class="string">&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;</span>;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const live2d_path = <span class="string">&quot;/live2d-widget/&quot;</span>;</span><br></pre></td></tr></table></figure><p>3.在 &#x2F;themes&#x2F;sakura&#x2F;layout&#x2F;_layout.ejs 代码的尾部,新增如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;/live2d-widget/autoload.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>4.主题配置文件_congig.yml 代码末尾,新增如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>5.想修改看板娘大小、位置、格式、文本内容等，可查看并修改 <code>waifu-tips.js</code> 、 <code>waifu-tips.json</code> 和 <code>waifu.css</code><br><img src="https://img-blog.csdnimg.cn/20200310141439371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>注意：大神的项目需要 jQuery 和 font-awesome 支持</p></blockquote><h3 id="3-注意"><a href="#3-注意" class="headerlink" title="3. 注意"></a>3. 注意</h3><p><strong>我在测试的时候遇到了一个坑</strong></p><blockquote><p>同时使用这两种导致第一种添加的2d看板娘没有办法修改样式，一直是同一个，代码部分的修改不起任何作用</p></blockquote><h2 id="五-文章相关"><a href="#五-文章相关" class="headerlink" title="五.文章相关"></a>五.文章相关</h2><h3 id="1-文章加密"><a href="#1-文章加密" class="headerlink" title="1.文章加密"></a>1.文章加密</h3><p>我们在写的文章需要输入密码访问，我们可以采取 Hexo-Blog-Encrypt插件对其加密<br><strong>方法</strong></p><ol><li>首先我们需要在hexo 根目录的package.json 中添加 <code>&quot;hexo-blog-encrypt&quot;: &quot;1.1.*&quot;</code>依赖<br>然后执行 <code>npm install</code> 命令，该插件会自动安装<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200315105134.png"></li><li>在更目录下_config.yml 中启用该插件,将下面代码复制到根目录下_config.yml 代码末尾 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Security</span><br><span class="line">#<span class="meta">#</span></span><br><span class="line"><span class="meta">encrypt:</span></span><br><span class="line">enable: <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li>在你的文章的头部添加上对应的字段，如 <code>password, abstract, message</code> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hello world</span><br><span class="line">date: <span class="number">2016</span><span class="number">-03</span><span class="number">-30</span> <span class="number">21</span>:<span class="number">18</span>:<span class="number">02</span></span><br><span class="line">tags:</span><br><span class="line">- fdsafsdaf</span><br><span class="line">password: Mike</span><br><span class="line">abstract: Welcome to my blog, enter password to read.</span><br><span class="line">message: Welcome to my blog, enter password to read.</span><br><span class="line">---</span><br></pre></td></tr></table></figure> password 为你设置的访问密码,message为提示信息</li></ol><h3 id="2-文章添加视频"><a href="#2-文章添加视频" class="headerlink" title="2.文章添加视频"></a>2.文章添加视频</h3><p>我们发表的文章中，有时候就有插入视频的需求，或者可以单独展示我们的视频列表等等</p><p><strong>方法一:借助其他播放器（推荐）</strong></p><ol><li>我们只需要在我们的文章内容中添加上如下的代码就可以实现了<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;div style=<span class="string">&quot;position: relative; width: 100%; height: 0; padding-bottom:75%;&quot;</span>&gt;</span><br><span class="line">&lt;iframe src=<span class="string">&quot;//player.bilibili.com/player.html?aid=18436497&amp;cid=159622547&amp;page=1&quot;</span> </span><br><span class="line">scrolling=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> frameborder=<span class="string">&quot;no&quot;</span> framespacing=<span class="string">&quot;0&quot;</span> allowfullscreen=<span class="string">&quot;true&quot;</span></span><br><span class="line">style=<span class="string">&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;</span>&gt; </span><br><span class="line">&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></li><li>其实我们可以直接复制那些播放平台下面的通用代码用，但是显示的效果不怎么好，所以需要加以修改<blockquote><p>注意<br>不同的平台只需要更换视频外链接就可以了，我这里是以b站上的视频为例</p></blockquote></li></ol><p><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200315133001.png"></p><p><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200315133531.png"></p><p><strong>方法二:本地安装插件</strong></p><ol><li>首先执行如下命令来，安装视频播放器的插件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-dplayer</span><br></pre></td></tr></table></figure></li><li>在需要插入的地方输入如下的代码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer <span class="string">&quot;url=http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4&quot;</span> </span><br><span class="line"> <span class="string">&quot;autoplay=true&quot;</span> <span class="string">&quot;preload=metadata&quot;</span> <span class="string">&quot;hotkey=true&quot;</span> %&#125;</span><br></pre></td></tr></table></figure>相关的选项列表如下<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/Snipaste_2020-03-15-15-58-43.png"></li></ol><blockquote><p>注意:如果使用腾讯视频、优酷视频等在线视频网站的资源，需要先进行视频地址解析</p></blockquote><h3 id="3-文章添加音乐"><a href="#3-文章添加音乐" class="headerlink" title="3.文章添加音乐"></a>3.文章添加音乐</h3><p><strong>方法一: meting-js（推荐）</strong></p><ol><li>添加音乐列表<blockquote><p>这里我给大家推荐 MetingJS 它是基于Meting API 的 APlayer 衍生播放器<br>支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p></blockquote></li></ol><p>首先我们需要修改根目录下的_config.yml文件，在文件末尾添加如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">meting: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这里我们以网易音乐为例，只需要在文章中添加如下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">&lt;meting-js</span><br><span class="line">  server=<span class="string">&quot;netease&quot;</span></span><br><span class="line">  <span class="built_in">type</span>=<span class="string">&quot;playlist&quot;</span></span><br><span class="line">  <span class="built_in">id</span>=<span class="string">&quot;4887733040&quot;</span></span><br><span class="line">  mutex=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">&lt;/meting-js&gt;</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>详细播放器参数我看可以对照下面图片来修改<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200315150421.png"></p></blockquote><p>不同的列表只需要修改 id号就可以了<br><img src="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/mode/20200315135832.png"></p><p><strong>方法二: 本地安装</strong></p><ol><li><p>我们先使用下面命令来安装播放器插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure></li><li><p>在文章中使用时，插入下面代码就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer <span class="string">&quot;她的睫毛&quot;</span> <span class="string">&quot;周杰伦&quot;</span> </span><br><span class="line"><span class="string">&quot;http://home.ustc.edu.cn/~mmmwhy/%d6%dc%bd%dc%c2%d7%20-%20%cb%fd%b5%c4%bd%de%c3%ab.mp3&quot;</span> </span><br><span class="line"><span class="string">&quot;http://home.ustc.edu.cn/~mmmwhy/jay.jpg&quot;</span> %&#125;</span><br></pre></td></tr></table></figure><p><code>注意</code></p></li></ol><ul><li>title : 曲目标题</li><li>author: 曲目作者</li><li>url: 音乐文件 URL 地址</li><li>picture_url: (可选) 音乐对应的图片地址</li><li>narrow: （可选）播放器袖珍风格</li><li>autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能</li><li>width:xxx: (可选) 播放器宽度 (默认: 100%)</li><li>lrc:xxx: （可选）歌词文件 URL 地址</li></ul><h2 id="六-总结"><a href="#六-总结" class="headerlink" title="六.总结"></a>六.总结</h2><p>我修改的博客主题是sakura 这个主题，当然修改其他主题也是大同小异，大家可以跟着去修改</p>]]></content>
      
      
      
        <tags>
            
            <tag> web项目 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法之排序</title>
      <link href="/2020/02/15/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/3.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%8E%92%E5%BA%8F/"/>
      <url>/2020/02/15/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/3.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><strong>排序的归纳以及时间复杂度表</strong><br><img src="https://img-blog.csdnimg.cn/20200221092043799.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p><strong>冒泡排序是一个比较简单的排序，它是一次比较相邻两个元素的值，如何顺序错误就交换两个数的位置，一直到没有交换的数为止，排序结束。</strong></p><p><strong>若对n个数进行排序，我们需要n-1次比较，所以第k次比较需要进行n-k次比较。</strong>&gt;</p><blockquote><p>排序算法通过以数据对象的两两比较作为关键所以可以得出，冒泡排序需要进行的比较次数为：(n-1) + (n-2) + … + 1 &#x3D; n*(n-1) &#x2F; 2。<br>因此冒泡排序的  <strong>时间复杂度为O(n^2)</strong></p></blockquote><p><strong>算法</strong></p><ol><li>比较相邻的元素，前一个比后一个大（或者前一个比后一个小）调换位置</li><li>每一对相邻的元素进行重复的工作，从开始对一直到结尾对，这步完成后，结尾为做大或最小的数</li><li>针对除了最后一个元素重复进行上面的步骤。</li><li>重复1-3步骤直到完成排序</li></ol><p>动图演示：<br><img src="https://img-blog.csdnimg.cn/20200219211242963.gif" alt="在这里插入图片描述"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序 从小到大</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">int</span> *arr, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"> <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n-i<span class="number">-1</span>; j++)</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">if</span>(arr[j] &gt; arr[j+<span class="number">1</span>])</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="type">int</span> tmp = arr[j];</span><br><span class="line">    arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">    arr[j+<span class="number">1</span>] = tmp;</span><br><span class="line">   &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"> <span class="type">int</span> arr[]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">8</span>&#125;;</span><br><span class="line"> <span class="type">int</span> n = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(<span class="type">int</span>);</span><br><span class="line"> bubble_sort(arr,n);</span><br><span class="line"> <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,arr[i]);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>程序运行结果</strong><br><img src="https://img-blog.csdnimg.cn/20200219212103173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="冒泡排序"></p><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><blockquote><p>选择排序共需要的比较次数为n*(n-1) &#x2F; 2，因此选择排序算法的时间复杂度与冒泡排序一样，也为O(n^2)</p></blockquote><p><strong>算法简介：</strong></p><ol><li>初始状态：序列为无序状态。</li><li>第1次排序：从n个元素中找出最小(大)元素与第1个记录交换</li><li>第2次排序：从n-1个元素中找出最小(大)元素与第2个记录交换</li><li>第i次排序：从n-i+1个元素中找出最小(大)元素与第i个记录交换</li><li>以此类推直到排序完成</li></ol><p> 动图演示<br><img src="https://img-blog.csdnimg.cn/20200221115211917.gif" alt="在这里插入图片描述"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择排序 从大到小</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//函数申明</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">choice</span> <span class="params">(<span class="type">int</span> * a, <span class="type">int</span> n )</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">show</span> <span class="params">( <span class="type">int</span> *a, <span class="type">int</span> n )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">( )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">    show(arr, <span class="number">10</span>);</span><br><span class="line">    choice(arr, <span class="number">10</span>);</span><br><span class="line">    show(arr, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">choice</span> <span class="params">( <span class="type">int</span> *a, <span class="type">int</span> n )</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i , j ,tmp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span> (a[i] &lt; a[j])</span><br><span class="line">           &#123;</span><br><span class="line">             tmp = a[i];</span><br><span class="line">             a[i] = a[j];</span><br><span class="line">             a[j] = tmp;</span><br><span class="line">           &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">show</span> <span class="params">(<span class="type">int</span> * a, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果<br><img src="https://img-blog.csdnimg.cn/20200221114707870.png" alt="在这里插入图片描述"> </p><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><blockquote><p>插入排序是一个比较直观的算法，对于n个元素，一共需要进行n-1轮比较，而第k轮比较需要进行k次数组元素的两两比较，因此共需要进行的比较次数为：1 + 2 + … + (n-1)，所以插入排序的时间复杂度同冒泡排序一样，也为O(n^2)</p></blockquote><p><strong>算法简介：</strong></p><ol><li>从第一个元素开始，该元素可认为已排序。</li><li>取出下一个元素，在排序好的元素序列中从后往前扫描</li><li>如果元素(已排序)大于新元素，将该元素移到下一位置</li><li>重复3.直到找到已排序的元素小于或等于新元素的位置</li><li>将新元素插入该位置后</li><li>重复2-5直到排序完成</li></ol><p><strong>动图演示</strong><br> <img src="https://img-blog.csdnimg.cn/20200221112449619.gif" alt="在这里插入图片描述"></p><p><strong>代码部分</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入排序(从小到大) </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个插入函数&quot;insertion_sort&quot; </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insertion_sort</span><span class="params">(<span class="type">int</span> *number,<span class="type">int</span> n)</span>    </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,ii=<span class="number">0</span>,temp=<span class="number">0</span>;  </span><br><span class="line">     <span class="comment">//循环遍历 </span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">//将temp每一次赋值为number[i] </span></span><br><span class="line">        temp=number[i];  </span><br><span class="line">        ii=i<span class="number">-1</span>;  </span><br><span class="line">        <span class="comment">//这里改顺序 (temp后的)&quot;&lt;&quot;为小到大，&quot;&gt;&quot;为大到小 ！！！</span></span><br><span class="line">        <span class="keyword">while</span>(ii&gt;=<span class="number">0</span>&amp;&amp;temp&lt;number[ii])   </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//将大的元素往前放 </span></span><br><span class="line">            number[ii+<span class="number">1</span>]=number[ii];   </span><br><span class="line">            ii--; </span><br><span class="line">        &#125;</span><br><span class="line">        number[ii+<span class="number">1</span>]=temp;   <span class="comment">//与&quot;number[ii+1]=number[ii];&quot;一起意为 </span></span><br><span class="line">    &#125;              <span class="comment">//如果插入的数比之前的大,将number[ii]与number[ii+1]互换 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> i;</span><br><span class="line">  <span class="type">int</span> arr[]=&#123;<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">8</span>&#125;;</span><br><span class="line">  <span class="type">int</span> n = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">  insertion_sort(arr,n);</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,arr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果<br><img src="https://img-blog.csdnimg.cn/20200221120801595.png" alt="在这里插入图片描述"></p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用单片机开发板引脚图</title>
      <link href="/2020/02/12/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/1.%E5%B8%B8%E7%94%A8%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E6%9D%BF%E5%BC%95%E8%84%9A%E5%9B%BE/"/>
      <url>/2020/02/12/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/2.%E5%B5%8C%E5%85%A5%E5%BC%8F/1.%E5%8D%95%E7%89%87%E6%9C%BA/ESP8266/1.%E5%B8%B8%E7%94%A8%E5%8D%95%E7%89%87%E6%9C%BA%E5%BC%80%E5%8F%91%E6%9D%BF%E5%BC%95%E8%84%9A%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="Arduino-开发板引脚图"><a href="#Arduino-开发板引脚图" class="headerlink" title="Arduino 开发板引脚图"></a>Arduino 开发板引脚图</h2><p><img src="https://img-blog.csdnimg.cn/20200229191632129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200229191652822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200229192259547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200229191831492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="esp8266-引脚图"><a href="#esp8266-引脚图" class="headerlink" title="esp8266 引脚图"></a>esp8266 引脚图</h2><p><img src="https://img-blog.csdnimg.cn/20200229192349758.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200229192410608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="STC89C51单片机引脚图"><a href="#STC89C51单片机引脚图" class="headerlink" title="STC89C51单片机引脚图"></a>STC89C51单片机引脚图</h2><p><img src="https://img-blog.csdnimg.cn/20200229192510123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言之字节序</title>
      <link href="/2020/02/10/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/2.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%AD%97%E8%8A%82%E5%BA%8F/"/>
      <url>/2020/02/10/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/2.C%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%AD%97%E8%8A%82%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="字节序理解"><a href="#字节序理解" class="headerlink" title="字节序理解"></a>字节序理解</h2><p>字节序其实就是数据在内存中的存储方式，因为内存的地址用高低位之分，数据也有高低位，所以按照存放的顺序一般可分为大端字节序，和小段字节序。</p><p>生活中我们放东西的顺序也是不一样的，有的人习惯性的将自己的物品放在自己的左手边，有的人就习惯性的放在自己的右手边，那对于电脑来说，cpu的不同，内存存储多字节数据的存储方式也相应的不同。</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h2 id="主机字节序"><a href="#主机字节序" class="headerlink" title="主机字节序"></a>主机字节序</h2><p>不同类型CPU主机中，内存存储多字节整数的方法不同，称为主机字节序</p><p><strong>主机序列有两种</strong><br>小端序 ：数据的低字节存放在内存的低地址<br>大端序 ：数据的高字节存放在内存的低地址 </p><blockquote><p>一般 inter处理器的字节序为 小端序， 而 ARM 架构的处理器多为大端序</p></blockquote><h2 id="验证主机字节序"><a href="#验证主机字节序" class="headerlink" title="验证主机字节序"></a>验证主机字节序</h2><p>C语言<code>代码片</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个共用体</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">char</span> b;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">Data</span> <span class="title">data</span>;</span></span><br><span class="line">data.a = <span class="number">0x12345678</span>;</span><br><span class="line"><span class="comment">//小端序</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0x78</span> == data.b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;the little end sequence\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//大端序</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;the big end sequence\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编程结果"><a href="#编程结果" class="headerlink" title="编程结果"></a>编程结果</h2><p><img src="https://img-blog.csdnimg.cn/20191117121649689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="inter处理器"></p><p><strong>运行代码的电脑是inter处理器的，验证为小端序存储</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言之字符串处理</title>
      <link href="/2020/02/09/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/1.c%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
      <url>/2020/02/09/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/1.C%E8%AF%AD%E8%A8%80/1.c%E8%AF%AD%E8%A8%80%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><ul><li>在c语言的学习过程中，我们会学习很多字符串处理函数，入strlen，strcpy，strcmp等等,使用也特别简单，只需要调用库函数就行。</li><li>但是对于c语言初学者来说，作为一个面向过程的语言，了解其函数内的实现过程还非常用必要的。</li></ul><h2 id="2-字符串实现函数"><a href="#2-字符串实现函数" class="headerlink" title="2.字符串实现函数"></a>2.字符串实现函数</h2><h3 id="strcpy（字符串拷贝函数）"><a href="#strcpy（字符串拷贝函数）" class="headerlink" title="strcpy（字符串拷贝函数）"></a>strcpy（字符串拷贝函数）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 50</span></span><br><span class="line"><span class="comment">//指针函数 返回值为指向字符串str1的指针</span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">strcpy</span><span class="params">(<span class="type">char</span> * str1, <span class="type">const</span> <span class="type">char</span> * str2 )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断 是否为空指针</span></span><br><span class="line"><span class="keyword">if</span>(str1 == <span class="literal">NULL</span> || str2 == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> *p = str1;</span><br><span class="line"><span class="keyword">while</span>((* str1++ = * str2++) != <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str1[M]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">char</span> str2[M]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input str1\r\n&quot;</span>);</span><br><span class="line">fgets(str1,<span class="number">50</span>,<span class="built_in">stdin</span>);</span><br><span class="line"><span class="type">char</span> *p = <span class="built_in">strcpy</span>(str2,str1);</span><br><span class="line"><span class="built_in">puts</span>(str2); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong><br><img src="https://img-blog.csdnimg.cn/20200216175811663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>注意：fgets输入的时候会将缓存区里面的回车换行</p></blockquote><p><strong>作为笔试题考察点有四处</strong></p><ol><li>异常处理  str1，str2 是否为NULL</li><li>const 的修饰，str2不能被修改需要const来修饰</li><li>字符串会拷贝 ‘\0’ </li><li>返回值（指向str2的指针），可以方便调用者调用</li></ol><h3 id="strcmp（字符串比较大小）"><a href="#strcmp（字符串比较大小）" class="headerlink" title="strcmp（字符串比较大小）"></a>strcmp（字符串比较大小）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">**<span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 50</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Strcmp</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *str1,<span class="type">const</span> <span class="type">char</span> *str2)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//输入两个字符串</span></span><br><span class="line"><span class="type">char</span> str1[M]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">char</span> str2[N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input str1\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input str2\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str2);</span><br><span class="line"><span class="comment">//比较两字符串的大小</span></span><br><span class="line">Strcmp(str1,str2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Strcmp</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *str1,<span class="type">const</span> <span class="type">char</span> *str2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断 是否为空指针</span></span><br><span class="line"><span class="keyword">if</span>(str1 == <span class="literal">NULL</span> || str2 == <span class="literal">NULL</span>)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(*(str1+i)==*(str2+i) &amp;&amp; *(str1+i)!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( *(str1+i)&gt;*(str2+i) ) </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;str1&gt;str2\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( *(str1+i) &lt; *(str2+i) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;str1&lt;str2\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;str1=str2\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong><br><img src="https://img-blog.csdnimg.cn/20200216181316684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>作为笔试题考点同上</strong></p><h3 id="strcat-（字符串拼接函数）"><a href="#strcat-（字符串拼接函数）" class="headerlink" title="strcat （字符串拼接函数）"></a>strcat （字符串拼接函数）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 50</span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">str_cat</span><span class="params">(<span class="type">char</span>*,<span class="type">char</span>*)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str1[M]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">char</span> str2[N]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//输入两个字符串</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input str1\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input str2\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str2);</span><br><span class="line"><span class="type">char</span> *p=str_cat(str1,str2);</span><br><span class="line"><span class="built_in">puts</span>(p);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串拼接</span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">str_cat</span><span class="params">(<span class="type">char</span> *str1,<span class="type">char</span> *str2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断 是否为空指针</span></span><br><span class="line"> <span class="keyword">if</span>(str1 == <span class="literal">NULL</span> || str2 == <span class="literal">NULL</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//字符串str1的长度</span></span><br><span class="line"> <span class="type">int</span> j=<span class="built_in">strlen</span>(str1);</span><br><span class="line"> <span class="comment">//字符串str2的长度</span></span><br><span class="line"> <span class="type">int</span> k=<span class="built_in">strlen</span>(str2);</span><br><span class="line"><span class="keyword">if</span>( M &lt; (j+k) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义两个指针</span></span><br><span class="line"><span class="type">char</span> *pp=str1;</span><br><span class="line"><span class="type">char</span> *p=str1+j;</span><br><span class="line"><span class="type">char</span> *q=str2;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">&#123;</span><br><span class="line">*(p+i) = *(q+i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong><br><img src="https://img-blog.csdnimg.cn/20200216201318383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="strlen（求字符串的长度）"><a href="#strlen（求字符串的长度）" class="headerlink" title="strlen（求字符串的长度）"></a>strlen（求字符串的长度）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mystrlen</span><span class="params">(<span class="type">char</span> *pStr)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">100</span>] =&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input str\r\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br><span class="line"><span class="comment">//用变量a来接受函数的返回值</span></span><br><span class="line"><span class="type">int</span> a=mystrlen(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\r\n&quot;</span>,a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求字符串的长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mystrlen</span><span class="params">(<span class="type">char</span> *pStr)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">NULL</span>==pStr)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(pStr[i] !=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200216204138907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>注意：strlen 和 sizeof的区别</p></blockquote><ul><li>strlen 计算字符串的长度，不计算字符串的结束标识符 ‘\0’</li><li>sizeof 计算的是占空间的大小会计算进去</li></ul><h3 id="字符串的翻转"><a href="#字符串的翻转" class="headerlink" title="字符串的翻转"></a>字符串的翻转</h3><p>**方法一 **</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> n 50</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//输入字符</span></span><br><span class="line"><span class="type">char</span> arr[n]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,arr);</span><br><span class="line"><span class="type">char</span> *p=arr;</span><br><span class="line"><span class="type">char</span> *q=&amp;arr[<span class="built_in">strlen</span>(arr)<span class="number">-1</span>];</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//用指针p指向首地址，q指向字符的尾地址</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(arr)/<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> tmp= *(p+i);</span><br><span class="line"> *(p+i)=*(q-i);</span><br><span class="line"> *(q-i)=tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(arr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200216205158640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>方法二</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">gets(str);</span><br><span class="line"><span class="type">char</span> *p=str;</span><br><span class="line"><span class="type">char</span> *q=str+<span class="built_in">strlen</span>(str)<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(p&lt;q)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tmp=*p;</span><br><span class="line">*p=*q;</span><br><span class="line">*q=tmp;</span><br><span class="line">p++;</span><br><span class="line">q--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串的查找"><a href="#字符串的查找" class="headerlink" title="字符串的查找"></a>字符串的查找</h3><blockquote><p>编写一个字符串查找函数，函数原型为：<br>char *str_search(const char *str1, const char *str2)，<br>该函数实现在字符串str1中找出字符串str2第一次出现的位置。<br>如果str2出现在str1中，则返回str2在str1中出现的首地址，<br>如果在str1中没有与str2匹配的字符串则返回NULL</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> *<span class="title function_">str_search</span><span class="params">( <span class="type">char</span> *str1, <span class="type">char</span> *str2 )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定义两个字符串</span></span><br><span class="line"><span class="type">char</span> str1[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">char</span> str2[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">//赋值</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str1);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str2);</span><br><span class="line"><span class="type">char</span> *q = str_search(str1,str2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\r\n&quot;</span>,q);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *<span class="title function_">str_search</span><span class="params">( <span class="type">char</span> *str1, <span class="type">char</span> *str2 )</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定义一个指针指向 str1</span></span><br><span class="line"><span class="type">char</span> *p = str1;</span><br><span class="line"><span class="comment">//逐个移动比较</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>( i=<span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str1); i++ )</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> tmp = *( p+<span class="built_in">strlen</span>(str2)+i );</span><br><span class="line">*( p+<span class="built_in">strlen</span>(str2)+i ) = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="comment">//比较两个字符串</span></span><br><span class="line"><span class="keyword">if</span>( <span class="number">0</span> == <span class="built_in">strcmp</span>( str1+i, str2 ) )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> p+i;</span><br><span class="line">&#125;</span><br><span class="line">*( p+<span class="built_in">strlen</span>(str2)+i ) = tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200216210417995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>轻松入手markdown编程</title>
      <link href="/2020/02/07/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2.markdown/1.%E8%BD%BB%E6%9D%BE%E5%85%A5%E6%89%8BMarkdown%E7%BC%96%E7%A8%8B/"/>
      <url>/2020/02/07/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/5.%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/2.markdown/1.%E8%BD%BB%E6%9D%BE%E5%85%A5%E6%89%8BMarkdown%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><strong>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</strong></p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p><strong>现在Makedown编程语言应用十分的广泛，比如说在git的项目文件中编写README所使用的的就是，博客中的文件编写格式同样是，等等好多地方都用到了，这个学习起来没有难度，今天就把自己收集的知识分享给大家。</strong></p><h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题 </span><br><span class="line">### 三级标题（#的个数代表几级标题）</span><br></pre></td></tr></table></figure><h3 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法1添加本地图片：</span><br><span class="line">![pc](图片的路径)</span><br></pre></td></tr></table></figure><h3 id="无须列表"><a href="#无须列表" class="headerlink" title="无须列表"></a>无须列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- 昨天</span><br><span class="line">- 今天</span><br><span class="line">- 明天</span><br></pre></td></tr></table></figure><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 过去</span><br><span class="line">2. 现在</span><br><span class="line">3. 将来</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 说明文字</span><br></pre></td></tr></table></figure><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链接：www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**粗体**</span><br></pre></td></tr></table></figure><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br></pre></td></tr></table></figure><h3 id="等宽字体"><a href="#等宽字体" class="headerlink" title="等宽字体"></a>等宽字体</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`等宽` （键盘ESC下面的符号）</span><br></pre></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">开始：```c（c为c语言语法显示）</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">结束：```</span><br></pre></td></tr></table></figure><h3 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">方法1：</span><br><span class="line">按 ctrl+t 插入表格</span><br><span class="line">方法2：</span><br><span class="line">|表格 |姓名 | 性别 |</span><br><span class="line">| ---- | ---- | ----  |</span><br><span class="line">|  1   |      |       |</span><br><span class="line">|  2   |      |       |</span><br><span class="line">|  3   |      |       |</span><br></pre></td></tr></table></figure><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---   </span><br></pre></td></tr></table></figure><h3 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h3><p>软件名：Typora</p><ul><li>软件可以进行代码和排版的切换显示<img src="https://img-blog.csdnimg.cn/20200201125824641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="软件可以进行代码和排版的切换显示"></li><li>文件可以导出各种格式（html，pdf等）<img src="https://img-blog.csdnimg.cn/20200201130105319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><p>大家可以自行百度搜索下载，或者点击下方下载链接</p><p>蓝秦云：<a href="https://www.lanzous.com/i8yq66f">https://www.lanzous.com/i8yq66f</a></p><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p>git链接：<a href="https://gitee.com/zfq0620/Markdown.git">https://gitee.com/zfq0620/Markdown.git</a></p><hr><p><em>希望对大家有用</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玩转浏览器黑科技</title>
      <link href="/2020/02/06/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/1.%E7%8E%A9%E8%BD%AC%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%91%E7%A7%91%E6%8A%80/"/>
      <url>/2020/02/06/1.%E6%97%A5%E5%B8%B8%E7%94%9F%E6%B4%BB/2.win%E6%93%8D%E4%BD%9C/1.%E7%8E%A9%E8%BD%AC%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%91%E7%A7%91%E6%8A%80/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一. 简介"></a>一. 简介</h2><p>浏览器，大家每天都在用，作为一个上网的工具，或是学习或是娱乐，一个好的浏览器可以让我们的工作和学习效率提高一<br>大半。但是之前接触的浏览器，都从在一定的问题。</p><p><strong>比如说</strong></p><ul><li>浏览器界面太复杂，无用的信息太多</li><li>功能不齐全，想要截个完整的网页太难</li><li>广告一大堆，找关闭方式都找不到</li></ul><blockquote><p>为了打破这样的局面，我给大家推荐一个完美的浏览器<br>电脑端：Google Chrome（谷歌浏览器）<br>手机端：kiwi </p></blockquote><p>或许你的电脑已经安装了谷歌浏览器，但是它潜在的功能，你是否发现了</p><h2 id="二-软件下载安装"><a href="#二-软件下载安装" class="headerlink" title="二. 软件下载安装"></a>二. 软件下载安装</h2><ol><li><p>想要使用，首先我们得先安装浏览器，百度上下载安装，广告一大堆，删都删不掉，所有我一般不去百度下载安装</p><blockquote><p>这里我给大家发一下<a href="https://www.lanzous.com/ia1lsch">我的谷歌版本</a> 大家可以点击下载</p></blockquote></li><li><p>还有一个看的别人用的版本有挺多的版本，大家可以<a href="https://tools.shuax.com/chrome">点击下载</a><br> <img src="https://img-blog.csdnimg.cn/20200308113556840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> <strong>这里用四个版本大家可以根据自己的需求去下载安装</strong></p><ol><li>Stable Channel：稳定版，正式版，更新慢，比较稳定适合普通用户，</li><li>Beta Channel：测试版，主要是安全上的测试，适合较稳定可以尝鲜的用户</li><li>Dev Channel：开发版，主要是功能上的测试，不稳定，适合开发人员使用</li><li>Canary Build：金丝雀版，它可以独立的安装或是免安装，不会覆盖原本的 Google Chrome 版本，适合开发人员使用，存在不稳定因素</li></ol></li></ol><h2 id="三-软件的配置"><a href="#三-软件的配置" class="headerlink" title="三.软件的配置"></a>三.软件的配置</h2><p>1.软件下载完，就是傻瓜式的安装，我就不发截图了，安装完成，我们就需要配置一下浏览器才可以正常使用</p><blockquote><p>我们还是得先<a href="https://www.lanzous.com/ia1m2fa">下载这个插件</a></p></blockquote><p>2.开始配置，加载谷歌访问助手破解版插件<br><img src="https://img-blog.csdnimg.cn/20200308120013191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308120603493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.进入商店进行安装插件<br><img src="https://img-blog.csdnimg.cn/2020030812083237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308120921499.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308121050189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="四-插件推荐"><a href="#四-插件推荐" class="headerlink" title="四.插件推荐"></a>四.插件推荐</h2><p>1.之所以推荐此浏览器给大家，也源于它强大的插件功能，自己可以打造属于自己的一款浏览器，当然插件中的黑科技值得大家去探索<br><strong>我给大家推荐几个好用的插件</strong></p><ul><li>infinity 标签页   （可以美化我们的浏览器）</li><li>tampermonkey （功能十分强大）<blockquote><p>了解更多插件和插件的功能，可 <a href="https://www.zhihu.com/answer/693396771">打开链接</a></p></blockquote></li></ul><p>2.当然我们，也可以通过第三方网站进行下载，下载的插件我们可以向上面的一样，在扩展程序中添加<br><img src="https://img-blog.csdnimg.cn/20200308122234371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>网站推荐</strong></p><ul><li><a href="https://greasyfork.org/zh-CN">https://greasyfork.org/zh-CN</a><br><img src="https://img-blog.csdnimg.cn/20200308122433167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li><a href="https://chromecj.com/">https://chromecj.com/</a></li></ul><p><img src="https://img-blog.csdnimg.cn/20200308122700624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="五-手机端浏览器"><a href="#五-手机端浏览器" class="headerlink" title="五.手机端浏览器"></a>五.手机端浏览器</h2><p> 手机端的浏览器也是特别的重要，我这里也给大家推荐一个</p><blockquote><p><a href="https://www.lanzous.com/ia1lzeb">kiwi浏览器下载</a></p></blockquote><p> 1.和电脑端一样，我们安装好之后得先安装<a href="https://www.lanzous.com/ia1m2fa">谷歌访问助手破解版插件</a>，才可以正常使用<br> <img src="https://img-blog.csdnimg.cn/20200308123619635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.电脑端的插件，移动都手机端同样也是使用，我们只需要在扩展程序里面添加就好了</p><h2 id="六-总结"><a href="#六-总结" class="headerlink" title="六.总结"></a>六.总结</h2><p>大家可以按照不同的需求来安装不同的插件，可以说是事半功倍</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo+jsdelivr+github打造私人图床</title>
      <link href="/2020/02/04/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/2.%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/2.PicGo+jsdelivr+github%E6%89%93%E9%80%A0%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2020/02/04/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/2.%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/2.PicGo+jsdelivr+github%E6%89%93%E9%80%A0%E7%A7%81%E4%BA%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><ol><li>搭建图床的办法特别的多，今天教大家使用picGo 这个软件来搭建自己的图床</li><li>PicGo是一个用于快速上传图片并获取图片URL链接的工具，目前支持微博图床，七牛图床，腾讯云，又拍云，github，阿里云，imgur等图床</li></ol><h2 id="二-准备"><a href="#二-准备" class="headerlink" title="二.准备"></a>二.准备</h2><h3 id="1-PicGo的安装"><a href="#1-PicGo的安装" class="headerlink" title="1.PicGo的安装"></a>1.PicGo的安装</h3><blockquote><p>点击下载：<a href="https://www.lanzous.com/ia1vp8f">https://www.lanzous.com/ia1vp8f</a></p></blockquote><p>安装完成后是长这个样子的<br><img src="https://img-blog.csdnimg.cn/20200308155330732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-github建立仓库"><a href="#2-github建立仓库" class="headerlink" title="2.github建立仓库"></a>2.github建立仓库</h3><blockquote><p>github的使用，不就不过多介绍了，不会的朋友，可以看一下，<a href="https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app">github入门</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200308160136530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308160546521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-创建新的Token"><a href="#3-创建新的Token" class="headerlink" title="3.创建新的Token"></a>3.创建新的Token</h3><p><img src="https://img-blog.csdnimg.cn/20200308161035820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308161217663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308161405419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308161455587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入密码<br><img src="https://img-blog.csdnimg.cn/20200308161541307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308162017507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308162231178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-配置PicGo"><a href="#三-配置PicGo" class="headerlink" title="三.配置PicGo"></a>三.配置PicGo</h2><p>打开软件，图床设置，打开github图床<br><img src="https://img-blog.csdnimg.cn/20200308162909523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308163029372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>设定仓库名：按照【用户名&#x2F;图床仓库名】的格式填写</li><li>设定分支名：master</li><li>设定Token：粘贴之前生成的Token，一长串数字</li><li>指定存储路径：填写想要储存的路径，如 img&#x2F;，这样就会在仓库下创建一个名为img的文件夹，图片将会储存在此文件夹中</li><li>设定自定义域名：它的的作用是，在图片上传后，PicGo会按照【自定义域名+上传的图片名】的方式生成访问链接，放到粘贴板上，因为我们要使用jsDelivr加速访问，所以可以设置为<a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93%E5%90%8D">https://cdn.jsdelivr.net/gh/用户名/图床仓库名</a></li></ul><p><img src="https://img-blog.csdnimg.cn/20200308164702630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果忘记token，可以重新获取token，再填写，到这里我们就配置完成</p><h2 id="四-测试"><a href="#四-测试" class="headerlink" title="四. 测试"></a>四. 测试</h2><p>点一次测试，将图片放里面去<br><img src="https://img-blog.csdnimg.cn/20200308170117932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><blockquote><p>提示<br>上传的图片有问题，我看了下，问题出在填完数据，没点确定，就点了个设置默认图床，等我重新填了一下就好了</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200308170623608.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020030817314180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>注意</strong><br>上传成功后，自动会复制生成的连接，我们粘贴到需要的地方<a href="https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png">https://cdn.jsdelivr.net/gh/zfq0620/PicGo/img/xy.png</a><br><img src="https://img-blog.csdnimg.cn/20200308173135585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="五-总结"><a href="#五-总结" class="headerlink" title="五.总结"></a>五.总结</h2><ol><li>同时我也发现一个问题</li></ol><ul><li>删除本地相册图片，github上面图片依然存在<br><img src="https://img-blog.csdnimg.cn/20200308173844347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>当重复上传相同照片（同名），会提示无法连接服务器，就是报错，然后我们需要重新启动PicGo软件才可以</li></ul><ol start="2"><li>我们需要什么格式的图片链接，就先选好<br><img src="https://img-blog.csdnimg.cn/20200308174411732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>获取图片的连接<br><img src="https://img-blog.csdnimg.cn/20200308174515549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>在配置github 的时候设置自定义域名可以不填，但是由于github的服务器是在国外，导致加载图片的速度特别的慢，所有我们还是选择 jsdelivr 来加速<br><img src="https://img-blog.csdnimg.cn/20200308174802851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>当然我们也可以设置快捷键，在剪完图后之间按快捷键快速生成图片链接<br> <img src="https://img-blog.csdnimg.cn/20200308175236746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>到这里教程就结束了</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
            <tag> 图床搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsDeliver+github打造私人图床</title>
      <link href="/2020/02/03/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/2.%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/1.jsDeliver+github%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/"/>
      <url>/2020/02/03/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/2.%E5%9B%BE%E5%BA%8A%E6%90%AD%E5%BB%BA/1.jsDeliver+github%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="一-简介"><a href="#一-简介" class="headerlink" title="一.简介"></a>一.简介</h2><h3 id="1-什么是图床"><a href="#1-什么是图床" class="headerlink" title="1.什么是图床"></a>1.什么是图床</h3><blockquote><p>百度：“图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。”<br>注意：<code>github 支持的就是cdn加速</code></p></blockquote><h3 id="2-什么是jsDelive"><a href="#2-什么是jsDelive" class="headerlink" title="2.什么是jsDelive"></a>2.什么是jsDelive</h3><p>jsDelivr 是一个免费开源的 CDN 解决方案，用于帮助开发者和站长。包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。</p><blockquote><p>我们可以进入 <a href="https://www.jsdelivr.com/">jsDeliver官网</a>来查看</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200308135620988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-为什么搭建图床"><a href="#3-为什么搭建图床" class="headerlink" title="3.为什么搭建图床"></a>3.为什么搭建图床</h3><ul><li>我们在写用markdown写博客的时候，需要插入图片，图片存在本地的话上传到微博或者自己搭建的博客网站上面是无法显示的</li><li>编写网页的时候，需要插入图片的地方，我们总不能放在相应的文件夹，这样会影响网页的加载速度</li></ul><blockquote><p>所以我就就需要用到图床，将图片保存到服务器上，使用的时候直接用<br>URL 来获取先显示<br>注意：URL是文件的网络地址，相当于人的住址，每一个网络资源都有固定且唯一的网络地址</p></blockquote><h2 id="二-github的配置"><a href="#二-github的配置" class="headerlink" title="二.github的配置"></a>二.github的配置</h2><h3 id="1-创建github仓库"><a href="#1-创建github仓库" class="headerlink" title="1.创建github仓库"></a>1.创建github仓库</h3><blockquote><p>如果你初次接触github 的话，你可以先学习一下 <a href="https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app">github入门</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200308140335611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308140923309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2-推送图片资源到仓库"><a href="#2-推送图片资源到仓库" class="headerlink" title="2.推送图片资源到仓库"></a>2.推送图片资源到仓库</h3><p>将本地的图片资源上传到我们的仓库，方法很多我们采用微软的github软件来推送到我们的仓库</p><blockquote><p>我也就不多说了，不会的还是看一下 <a href="https://blog.csdn.net/weixin_45631738/article/details/104713633?utm_source=app">github入门</a></p></blockquote><p><strong>注意</strong></p><ol><li>鼠标在那个文件夹下左键打开 git bash here，执行命令就默认在那个文件夹下</li><li>推送的文件特别多，我们可以采用 * 代表全部文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add * //注意 *代表当前目录下所用的文件</span><br><span class="line">git commit -m <span class="string">&quot;add files&quot;</span> //然后推送到本地仓库</span><br><span class="line">git push //推送到远程仓库</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://img-blog.csdnimg.cn/20200308141732770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="3-发布版本"><a href="#3-发布版本" class="headerlink" title="3.发布版本"></a>3.发布版本</h3><p>点击release 发布版本<br><img src="https://img-blog.csdnimg.cn/20200308143000300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308143155637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200308143817628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发布成功<br><img src="https://img-blog.csdnimg.cn/2020030814385660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="三-jsDelive加载资源"><a href="#三-jsDelive加载资源" class="headerlink" title="三.jsDelive加载资源"></a>三.jsDelive加载资源</h2><p><strong>使用方法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</span><br><span class="line"></span><br><span class="line">比如：</span><br><span class="line"></span><br><span class="line">//加载js</span><br><span class="line"></span><br><span class="line">https://cdn.jsdelivr.net/gh/yremp/cdn@1.0/js/jquery.js</span><br><span class="line"></span><br><span class="line">//加载图片</span><br><span class="line"></span><br><span class="line">https://cdn.jsdelivr.net/gh/yremp/cdn@1.0/images/hb.png</span><br></pre></td></tr></table></figure><p>重点：这个链接相当于一个外链，使用和直链一样，如下图： 总的来说，外链怎么用，这个链接怎么用</p><blockquote><p>这是我的测试图片<br><a href="https://cdn.jsdelivr.net/gh/zfq0620/cdn@1.2/img/custom/weixing.png">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;zfq0620&#x2F;cdn@1.2/img/custom/weixing.png</a></p></blockquote><h2 id="四-服务器图床盘点"><a href="#四-服务器图床盘点" class="headerlink" title="四.服务器图床盘点"></a>四.服务器图床盘点</h2><p>也有好多，不需要我们自己搭建的，图床服务器，推荐给大家</p><ol><li><p>路过图床<br> 网站： <a href="https://imgchr.com/">https://imgchr.com/</a><br> 简介：支持免注册上传图片，永久存储，支持HTTPS加密访问和调用图片，提供多种图片链接格式，成立于2011年<br>限制：最大10M<br> <img src="https://img-blog.csdnimg.cn/20200308145450650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>SM.MS<br> 网站:<a href="https://sm.ms/">https://sm.ms/</a><br> 特点：永久存储免注册，图片链接支持https，可以删除上传的图片，提供多种图片链接格式，建立于2015年，速度比路过图床慢<br>图片上传限制：每个图片最大5M，每次最多上传10张<br><img src="https://img-blog.csdnimg.cn/20200308145920673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>小贱贱图床<br>网站：<a href="http://pic.xiaojianjian.net/">http://pic.xiaojianjian.net</a><br>需要注册，每日可以上传图片30张，上传后可以获取一个简单的外链，速度很快，但是图片清晰度会变低<br><img src="https://img-blog.csdnimg.cn/20200308150105696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>聚合图床<br>网站：<a href="https://www.superbed.cn/">https://www.superbed.cn</a><br>简介：将图片分发到多处备份，借助其本身的CDN加速功能，节省服务器流量，并且不用担心图片被删除，即便其中某几个图床上的图片被删除了，还有其他备份，保证万无一失，支持匿名和注册管理<br>图片上传限制：无<br><img src="https://img-blog.csdnimg.cn/20200308150328960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>堆爱外链<br>地址：<a href="http://pan.duiai.cc/">http://pan.duiai.cc</a><br>简介：注册才可以上传，存在的时间比较久，除了图片还可以上传视频和音乐<br>限制：视频体积过大不可，但具体限制不明<br><img src="https://img-blog.csdnimg.cn/20200308151030735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ol><h2 id="五-总结"><a href="#五-总结" class="headerlink" title="五.总结"></a>五.总结</h2><p>搭建图床的方法很多，就像七牛云30天后会回收测试域名，因此你必须要绑定自己的已经备案的域名，又拍云也需要绑定域名才可以使用，所有我不推荐大家使用。<br><strong>在这里我给大家推荐两个软件</strong></p><ul><li>mpic<br>下载地址：<a href="https://www.lanzous.com/ia1vy9a">https://www.lanzous.com/ia1vy9a</a></li><li>picGo<br>下载地址：<a href="https://www.lanzous.com/ia1vp8f">https://www.lanzous.com/ia1vp8f</a></li></ul><p>希望对大家有用!</p>]]></content>
      
      
      
        <tags>
            
            <tag> 开发工具 </tag>
            
            <tag> 图床搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小白入门码云</title>
      <link href="/2020/02/02/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1.%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/2.%E5%B0%8F%E7%99%BD%E5%85%A5%E9%97%A8gitee(%E7%A0%81%E4%BA%91)/"/>
      <url>/2020/02/02/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1.%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/2.%E5%B0%8F%E7%99%BD%E5%85%A5%E9%97%A8gitee(%E7%A0%81%E4%BA%91)/</url>
      
        <content type="html"><![CDATA[<h2 id="一-介绍"><a href="#一-介绍" class="headerlink" title="一.介绍"></a>一.介绍</h2><p><strong>想要了解码云，我们先来了解一下什么是版本控制系统。</strong><br><strong>版本控制系统的功能</strong></p><ol><li>代码的备份</li><li>恢复之前的版本</li><li>查看代码修改的内容</li><li>有利于团队的开发，提高开发的效率</li></ol><blockquote><p>我们可以这样理解<br>这就相当于游戏的存档，当我们打bos的时候先给游戏存个档，如果失败，还可以从存档处继续玩。</p></blockquote><ul><li><p><strong>版本控制系统的分类可分为三种 本地（SCCS RCS），集中式（CVS）, 和分布式（git）而我们说的码云就是分布式</strong></p></li><li><p><strong>Git 有图形界面客户端和Git命令行界面客户端，我推荐大家先学命令行的客户端，因为我们学习知识不仅要知其然，而且要知其所以然</strong></p></li><li><p><strong>相信大家也听过微软的github，代码托管平台 ，但是它的界面全部都是英文版的，英语不是很好的朋友学习起来有一点难度，比如说像博主就是。但是感兴趣的朋友可以了解一下。<br>github官网：<a href="https://github.com/">https://github.com/</a></strong><br><img src="https://img-blog.csdnimg.cn/202002201813354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ul><h2 id="二-注册账户"><a href="#二-注册账户" class="headerlink" title="二.注册账户"></a>二.注册账户</h2><ol><li><p>首先我们先进入码云的官网：<a href="https://gitee.com/">https://gitee.com/</a>，注册一个账户<br><img src="https://img-blog.csdnimg.cn/20200308102158275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>填写相关的信息，注意 个人空间的地址填成自己熟悉的字母，后面用会比较方便<br> <img src="https://img-blog.csdnimg.cn/20200308101929981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="3"><li>登录后的图片，我的可能好大家的不太一样，因为<a href="https://gitee.com/zfq0620/">我的gitee</a> 建了好几个仓库<br> <img src="https://img-blog.csdnimg.cn/20200308102402252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol></li></ol><h2 id="三-本地环境的配置"><a href="#三-本地环境的配置" class="headerlink" title="三.本地环境的配置"></a>三.本地环境的配置</h2><p>言归正传,我们说一下环境的搭建，使用码云，我们先要学会本地代码库的一系列的操作，然后在学习同步到远程代码库，当然远程代码库也有上传文件，删除文件和修改文件等功能，但是如果文件比较多的话就相对比较麻烦。</p><h3 id="1-如果是在linux系统"><a href="#1-如果是在linux系统" class="headerlink" title="1.如果是在linux系统"></a>1.如果是在linux系统</h3><ol><li>使用命令来下载 git （sudo apt-get install git）,想要获取git的帮助信息也可以使用命令 git command –help，同时也能验证git有没有安装成功。</li><li>使用git之前先要配置用户名，Email和文本编辑器。<br> git config –global user.name “ZHAI”<br> git config –global user.email <a href="mailto:&#x7a;&#102;&#x71;&#x30;&#x36;&#x32;&#x30;&#64;&#49;&#50;&#54;&#46;&#99;&#x6f;&#x6d;">&#x7a;&#102;&#x71;&#x30;&#x36;&#x32;&#x30;&#64;&#49;&#50;&#54;&#46;&#99;&#x6f;&#x6d;</a><br> sudo git config –system core.editor vim (设置文本编辑器为vim)<br> 查看配置的信息用 git config –list<br><img src="https://img-blog.csdnimg.cn/20200220183222551.png" alt="在这里插入图片描述"></li></ol><h3 id="2-如果是windows系统"><a href="#2-如果是windows系统" class="headerlink" title="2.如果是windows系统"></a>2.如果是windows系统</h3><ol><li>首先我们需要下载一个软件，这个是微软的github的客户端，下载链接：<a href="https://www.lanzous.com/i9iqtvi">https://www.lanzous.com/i9iqtvi</a>，下载后，就安装，傻瓜式安装一路下一步就行，等安装成功后，鼠标右键会显示下面图片中所显示的两项内容。<br><img src="https://img-blog.csdnimg.cn/20200220184306454.png" alt="在这里插入图片描述"></li><li>和上面一样，得先配置户名，Email。<br> 方法，先鼠标有键，然后打开git Bash Here，然后输入<br>git config –global user.name “ZHAI”<br>git config –global user.email <a href="mailto:&#x7a;&#102;&#113;&#x30;&#54;&#x32;&#x30;&#x40;&#49;&#x32;&#x36;&#x2e;&#x63;&#111;&#x6d;">&#x7a;&#102;&#113;&#x30;&#54;&#x32;&#x30;&#x40;&#49;&#x32;&#x36;&#x2e;&#x63;&#111;&#x6d;</a><br>输入之后就退出，简单的配置就到这里。<br><img src="https://img-blog.csdnimg.cn/20200220185049685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><h2 id="四-本地代码库的操作"><a href="#四-本地代码库的操作" class="headerlink" title="四.本地代码库的操作"></a>四.本地代码库的操作</h2><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><p>我们先来明白几个名词 working Directory（工作区），Staging Area（暂存区），.git directory(Repository)(仓库)</p><blockquote><p>我们可以这样理解，就像我们在超市购物，我们得先把想要的商品放在购物车，然后在推到收银台去结账。</p></blockquote><h3 id="2-命令操作"><a href="#2-命令操作" class="headerlink" title="2.命令操作"></a>2.命令操作</h3><p><img src="https://img-blog.csdnimg.cn/20200220185944518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200220190159751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200220190258508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200220190508406.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="五-远程代码库的操作"><a href="#五-远程代码库的操作" class="headerlink" title="五.远程代码库的操作"></a>五.远程代码库的操作</h2><h3 id="1-下载远程代码库的代码"><a href="#1-下载远程代码库的代码" class="headerlink" title="1.下载远程代码库的代码"></a>1.下载远程代码库的代码</h3><ol><li>首先我们鼠标右键打开git Bash Here 客户端 </li><li>输入 git clone + 网址（以下图片部分）<br><img src="https://img-blog.csdnimg.cn/20200220191135493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><h3 id="2-同步远程仓库（上传代码）"><a href="#2-同步远程仓库（上传代码）" class="headerlink" title="2.同步远程仓库（上传代码）"></a>2.同步远程仓库（上传代码）</h3><h4 id="克隆之后的代码更新"><a href="#克隆之后的代码更新" class="headerlink" title="克隆之后的代码更新"></a>克隆之后的代码更新</h4><ol><li>首先我们需要先克隆代码，到本地的文件夹内（注意克隆的时候会将整个仓库克隆下来以及.git配置文件等）</li><li>我们修改本地克隆下来的文件后<br> 先要 git add 修改的文件<br> 然后 git commit -m “说明性语言”<br> 最后 git push 就可以将修改过的文件同步到远程代码库</li></ol><h4 id="新建仓库后的代码上传"><a href="#新建仓库后的代码上传" class="headerlink" title="新建仓库后的代码上传"></a>新建仓库后的代码上传</h4><p>新建仓库后显示如下<img src="https://img-blog.csdnimg.cn/20200220200026139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>当我们新建一个仓库后，仓库类无任何内容，我们将本地的代码同步到远程仓库就需要一下步骤</strong></p><ol><li>进入本地仓库目录 cd + 目录的名字</li><li>添加文件到缓存区 git add + 文件名  </li><li>将缓存区文件添加到仓库 git commit -m “first commit”</li><li>git remote add origin + 网站</li><li>git push -u origin master</li></ol><blockquote><p>等我们再次刷新远程代码库的时候，已经显示所有的上传文件</p></blockquote><h4 id="将远程代码库的文件同步到本地"><a href="#将远程代码库的文件同步到本地" class="headerlink" title="将远程代码库的文件同步到本地"></a>将远程代码库的文件同步到本地</h4><ul><li>我们使用 git pull 命令</li></ul><h2 id="六-注意"><a href="#六-注意" class="headerlink" title="六.注意"></a>六.注意</h2><p><img src="https://img-blog.csdnimg.cn/20200220201401985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 代码管理 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小白入门github</title>
      <link href="/2020/02/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1.%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/1.%E5%B0%8F%E7%99%BD%E5%85%A5%E9%97%A8%20github/"/>
      <url>/2020/02/01/2.%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/1.%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/1.%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86/1.%E5%B0%8F%E7%99%BD%E5%85%A5%E9%97%A8%20github/</url>
      
        <content type="html"><![CDATA[<h2 id="github是什么"><a href="#github是什么" class="headerlink" title="github是什么"></a>github是什么</h2><p><strong>github就是版本控制系统，我们可以理解为一个代码的托管平台，作为一个程序猿，学会使用github对我们提高工作效率是很有必要的，当然国内外的开发人员都在使用。</strong></p><h2 id="github和其他代码托管平台的区别"><a href="#github和其他代码托管平台的区别" class="headerlink" title="github和其他代码托管平台的区别"></a>github和其他代码托管平台的区别</h2><p><strong>像现在代码托管平台已经很多了，比如说码云，它和github很相似，但是各有各的有缺点。</strong></p><blockquote><p>码云<br>优点：服务器在中国访问的速度那没的说，而且界面为中文适合初学者学习和使用，特别容易上手，可以点击这边连接进入学习。<br><a href="https://blog.csdn.net/weixin_45631738/article/details/104414876">小白入门码云</a></p></blockquote><blockquote><p>github<br>对于github而言，它的访问速度相对比较慢，但是github的成立时比较早的，功能比较强大，至于说界面全是英语，我们可以使用谷歌浏览器，界面可以翻译成中文，等用熟了以后，也就不存在什么英语不英语的问题了</p></blockquote><h2 id="入手github"><a href="#入手github" class="headerlink" title="入手github"></a>入手github</h2><h3 id="账户注册"><a href="#账户注册" class="headerlink" title="账户注册"></a>账户注册</h3><p>首先我们需要注册一个属于我们自己账户，<a href="https://github.com/">github的官网：https://github.com/</a>，我们可以点击注册。</p><p><img src="https://img-blog.csdnimg.cn/20200307140939808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307141208960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307141926250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307142100270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307142345815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>登录之后的样子，作为一个新的账户还没有项目，会有一点区别</strong><br><img src="https://img-blog.csdnimg.cn/20200307142733505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="添加项目仓库"><a href="#添加项目仓库" class="headerlink" title="添加项目仓库"></a>添加项目仓库</h3><p><strong>我们来创建属于自己的第一个仓库</strong><br><img src="https://img-blog.csdnimg.cn/20200307143315179.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307144134548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307144306878.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307144859787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="删除仓库"><a href="#删除仓库" class="headerlink" title="删除仓库"></a>删除仓库</h3><p><strong>在我们不许要的时候我们可以删除仓库</strong></p><ol><li>点击settings 管理设置<br><img src="https://img-blog.csdnimg.cn/20200307145049771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>将页面拉倒最底下，红色方块框着的地方<br><img src="https://img-blog.csdnimg.cn/2020030714530921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200307145539907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><h3 id="github的本地操作"><a href="#github的本地操作" class="headerlink" title="github的本地操作"></a>github的本地操作</h3><p>用的最多的就是，在我们电脑的本地文件夹建立一个仓库，然后将我们的代码推送到，远程仓库上（也就是我们的github上面）<br><strong>这里我以windows为例</strong></p><ul><li>首先我们需要下载，微软的github管理的软件，个人感觉是比较好用的，强力推荐。<a href="https://www.lanzous.com/i9iqtvi">点击下载github软件</a></li><li>下载完成后就是傻瓜式的安装，安装成成功后，我们在我们电脑桌面的空白的地方，点击鼠标右击，如果发现多出来这两个选项，就证明安装成功。<br><img src="https://img-blog.csdnimg.cn/20200307150720645.png" alt="在这里插入图片描述"></li></ul><p><strong>命令操作</strong><br><strong>git bash here 的命令操作和码云上都是一样的，不会的可看一下上面的教程，在这里我就简单的做个简绍</strong></p><p><strong>首先我们，我们需要克隆我们的代码库到本地文件夹</strong></p><blockquote><p>找到我们需要存放代码文件的文件夹，鼠标右键 选择打开 git bash heregit bash here，输入相关命令</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone + 远程仓库的网址</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200307151804501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYzMTczOA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>克隆仓库到我们本地之后，我们就可以将我们需要上传到仓库的文件，复制到此仓库目录之下</strong><br><strong>方法一：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加代码到本地缓存区</span></span><br><span class="line">git add + （hello.txt）文件名</span><br><span class="line"></span><br><span class="line"><span class="comment">//从缓存区推送到本地仓库</span></span><br><span class="line">git commit -m <span class="string">&quot;add hello.txt(添加描述信息)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//由于我们克隆的时候同时也克隆了 .git 配置文件所有直接执行命令可以推送到远程仓库，注意克隆其他人的仓库，不能这样，因为需要输入用户名和密码</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p><strong>方法二：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在合适的目录下打开git bash here 命令窗口 ，建立本地仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment">//点击文件到缓存区</span></span><br><span class="line">git add + 文件名</span><br><span class="line"></span><br><span class="line"><span class="comment">//提交到本地仓库</span></span><br><span class="line">git commit -m <span class="string">&quot;描述性的文字&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//推送到远程仓库</span></span><br><span class="line">git remote add origin + 仓库地址</span><br><span class="line">git push -u origin master </span><br></pre></td></tr></table></figure><h2 id="交流"><a href="#交流" class="headerlink" title="交流"></a>交流</h2><p>这个是我的github账户：<a href="https://github.com/zfq0620">https://github.com/zfq0620</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 代码管理 </tag>
            
            <tag> 开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
